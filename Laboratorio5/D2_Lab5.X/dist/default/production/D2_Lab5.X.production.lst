

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Wed Aug 18 14:07:54 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     9                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2,group=3
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2,group=3
    21                           	psect	text9,local,class=CODE,merge=1,delta=2,group=3
    22                           	psect	text10,local,class=CODE,merge=1,delta=2,group=1
    23                           	psect	text11,local,class=CODE,merge=1,delta=2
    24                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text14,local,class=CODE,merge=1,delta=2,group=3
    27                           	psect	text15,local,class=CODE,merge=1,delta=2,group=3
    28                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text17,local,class=CODE,merge=1,delta=2
    30                           	psect	intentry,global,class=CODE,delta=2
    31                           	psect	functab,global,class=ENTRY,delta=2
    32                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    33                           	dabs	1,0x7E,2
    34  0000                     
    35                           ; Version 2.20
    36                           ; Generated 12/02/2020 GMT
    37                           ; 
    38                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    39                           ; All rights reserved.
    40                           ; 
    41                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    42                           ; 
    43                           ; Redistribution and use in source and binary forms, with or without modification, are
    44                           ; permitted provided that the following conditions are met:
    45                           ; 
    46                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    47                           ;        conditions and the following disclaimer.
    48                           ; 
    49                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    50                           ;        of conditions and the following disclaimer in the documentation and/or other
    51                           ;        materials provided with the distribution.
    52                           ; 
    53                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    54                           ;        software without specific prior written permission.
    55                           ; 
    56                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    57                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    58                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    59                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    60                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    61                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    62                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    63                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    64                           ; 
    65                           ; 
    66                           ; Code-generator required, PIC16F887 Definitions
    67                           ; 
    68                           ; SFR Addresses
    69  0000                     	;# 
    70  0001                     	;# 
    71  0002                     	;# 
    72  0003                     	;# 
    73  0004                     	;# 
    74  0005                     	;# 
    75  0006                     	;# 
    76  0007                     	;# 
    77  0008                     	;# 
    78  0009                     	;# 
    79  000A                     	;# 
    80  000B                     	;# 
    81  000C                     	;# 
    82  000D                     	;# 
    83  000E                     	;# 
    84  000E                     	;# 
    85  000F                     	;# 
    86  0010                     	;# 
    87  0011                     	;# 
    88  0012                     	;# 
    89  0013                     	;# 
    90  0014                     	;# 
    91  0015                     	;# 
    92  0015                     	;# 
    93  0016                     	;# 
    94  0017                     	;# 
    95  0018                     	;# 
    96  0019                     	;# 
    97  001A                     	;# 
    98  001B                     	;# 
    99  001B                     	;# 
   100  001C                     	;# 
   101  001D                     	;# 
   102  001E                     	;# 
   103  001F                     	;# 
   104  0081                     	;# 
   105  0085                     	;# 
   106  0086                     	;# 
   107  0087                     	;# 
   108  0088                     	;# 
   109  0089                     	;# 
   110  008C                     	;# 
   111  008D                     	;# 
   112  008E                     	;# 
   113  008F                     	;# 
   114  0090                     	;# 
   115  0091                     	;# 
   116  0092                     	;# 
   117  0093                     	;# 
   118  0093                     	;# 
   119  0093                     	;# 
   120  0094                     	;# 
   121  0095                     	;# 
   122  0096                     	;# 
   123  0097                     	;# 
   124  0098                     	;# 
   125  0099                     	;# 
   126  009A                     	;# 
   127  009B                     	;# 
   128  009C                     	;# 
   129  009D                     	;# 
   130  009E                     	;# 
   131  009F                     	;# 
   132  0105                     	;# 
   133  0107                     	;# 
   134  0108                     	;# 
   135  0109                     	;# 
   136  010C                     	;# 
   137  010C                     	;# 
   138  010D                     	;# 
   139  010E                     	;# 
   140  010F                     	;# 
   141  0185                     	;# 
   142  0187                     	;# 
   143  0188                     	;# 
   144  0189                     	;# 
   145  018C                     	;# 
   146  018D                     	;# 
   147  0000                     	;# 
   148  0001                     	;# 
   149  0002                     	;# 
   150  0003                     	;# 
   151  0004                     	;# 
   152  0005                     	;# 
   153  0006                     	;# 
   154  0007                     	;# 
   155  0008                     	;# 
   156  0009                     	;# 
   157  000A                     	;# 
   158  000B                     	;# 
   159  000C                     	;# 
   160  000D                     	;# 
   161  000E                     	;# 
   162  000E                     	;# 
   163  000F                     	;# 
   164  0010                     	;# 
   165  0011                     	;# 
   166  0012                     	;# 
   167  0013                     	;# 
   168  0014                     	;# 
   169  0015                     	;# 
   170  0015                     	;# 
   171  0016                     	;# 
   172  0017                     	;# 
   173  0018                     	;# 
   174  0019                     	;# 
   175  001A                     	;# 
   176  001B                     	;# 
   177  001B                     	;# 
   178  001C                     	;# 
   179  001D                     	;# 
   180  001E                     	;# 
   181  001F                     	;# 
   182  0081                     	;# 
   183  0085                     	;# 
   184  0086                     	;# 
   185  0087                     	;# 
   186  0088                     	;# 
   187  0089                     	;# 
   188  008C                     	;# 
   189  008D                     	;# 
   190  008E                     	;# 
   191  008F                     	;# 
   192  0090                     	;# 
   193  0091                     	;# 
   194  0092                     	;# 
   195  0093                     	;# 
   196  0093                     	;# 
   197  0093                     	;# 
   198  0094                     	;# 
   199  0095                     	;# 
   200  0096                     	;# 
   201  0097                     	;# 
   202  0098                     	;# 
   203  0099                     	;# 
   204  009A                     	;# 
   205  009B                     	;# 
   206  009C                     	;# 
   207  009D                     	;# 
   208  009E                     	;# 
   209  009F                     	;# 
   210  0105                     	;# 
   211  0107                     	;# 
   212  0108                     	;# 
   213  0109                     	;# 
   214  010C                     	;# 
   215  010C                     	;# 
   216  010D                     	;# 
   217  010E                     	;# 
   218  010F                     	;# 
   219  0185                     	;# 
   220  0187                     	;# 
   221  0188                     	;# 
   222  0189                     	;# 
   223  018C                     	;# 
   224  018D                     	;# 
   225                           
   226                           	psect	strings
   227  0331                     __pstrings:
   228  0331                     stringtab:
   229  0331                     __stringtab:
   230  0331                     stringcode:	
   231                           ;	String table - string pointers are 1 byte each
   232                           
   233  0331                     stringdir:
   234  0331  3003               	movlw	high stringdir
   235  0332  008A               	movwf	10
   236  0333  0804               	movf	4,w
   237  0334  0A84               	incf	4,f
   238  0335  0782               	addwf	2,f
   239  0336                     __stringbase:
   240  0336  3400               	retlw	0
   241  0337                     __end_of__stringtab:
   242  0337                     _dpowers:
   243  0337  3401               	retlw	1
   244  0338  3400               	retlw	0
   245  0339  340A               	retlw	10
   246  033A  3400               	retlw	0
   247  033B  3464               	retlw	100
   248  033C  3400               	retlw	0
   249  033D  34E8               	retlw	232
   250  033E  3403               	retlw	3
   251  033F  3410               	retlw	16
   252  0340  3427               	retlw	39
   253  0341                     __end_of_dpowers:
   254  001A                     _RCREG	set	26
   255  0019                     _TXREG	set	25
   256  000C                     _PIR1bits	set	12
   257  0018                     _RCSTAbits	set	24
   258  0009                     _PORTE	set	9
   259  0007                     _PORTC	set	7
   260  0006                     _PORTB	set	6
   261  0005                     _PORTA	set	5
   262  0008                     _PORTD	set	8
   263  000B                     _INTCONbits	set	11
   264  0006                     _PORTBbits	set	6
   265  0064                     _TXIF	set	100
   266  0065                     _RCIF	set	101
   267  0058                     _RBIF	set	88
   268  008C                     _PIE1bits	set	140
   269  009A                     _SPBRGH	set	154
   270  0099                     _SPBRG	set	153
   271  0098                     _TXSTAbits	set	152
   272  0096                     _IOCBbits	set	150
   273  0095                     _WPUB	set	149
   274  0081                     _OPTION_REGbits	set	129
   275  008F                     _OSCCONbits	set	143
   276  0088                     _TRISD	set	136
   277  0086                     _TRISBbits	set	134
   278  0085                     _TRISA	set	133
   279  0187                     _BAUDCTLbits	set	391
   280  0189                     _ANSELH	set	393
   281  0188                     _ANSEL	set	392
   282  0341                     STR_6:
   283  0341  3445               	retlw	69	;'E'
   284  0342  346C               	retlw	108	;'l'
   285  0343  3420               	retlw	32	;' '
   286  0344  346E               	retlw	110	;'n'
   287  0345  3475               	retlw	117	;'u'
   288  0346  346D               	retlw	109	;'m'
   289  0347  3465               	retlw	101	;'e'
   290  0348  3472               	retlw	114	;'r'
   291  0349  346F               	retlw	111	;'o'
   292  034A  3420               	retlw	32	;' '
   293  034B  3465               	retlw	101	;'e'
   294  034C  346C               	retlw	108	;'l'
   295  034D  3465               	retlw	101	;'e'
   296  034E  3467               	retlw	103	;'g'
   297  034F  3469               	retlw	105	;'i'
   298  0350  3464               	retlw	100	;'d'
   299  0351  346F               	retlw	111	;'o'
   300  0352  3420               	retlw	32	;' '
   301  0353  3465               	retlw	101	;'e'
   302  0354  3473               	retlw	115	;'s'
   303  0355  343A               	retlw	58	;':'
   304  0356  3420               	retlw	32	;' '
   305  0357  3425               	retlw	37	;'%'
   306  0358  3464               	retlw	100	;'d'
   307  0359  3420               	retlw	32	;' '
   308  035A  340D               	retlw	13
   309  035B  3400               	retlw	0
   310  035C                     STR_5:
   311  035C  3449               	retlw	73	;'I'
   312  035D  346E               	retlw	110	;'n'
   313  035E  3467               	retlw	103	;'g'
   314  035F  3472               	retlw	114	;'r'
   315  0360  3465               	retlw	101	;'e'
   316  0361  3473               	retlw	115	;'s'
   317  0362  3461               	retlw	97	;'a'
   318  0363  3472               	retlw	114	;'r'
   319  0364  3420               	retlw	32	;' '
   320  0365  3455               	retlw	85	;'U'
   321  0366  346E               	retlw	110	;'n'
   322  0367  3469               	retlw	105	;'i'
   323  0368  3464               	retlw	100	;'d'
   324  0369  3461               	retlw	97	;'a'
   325  036A  3464               	retlw	100	;'d'
   326  036B  3465               	retlw	101	;'e'
   327  036C  3473               	retlw	115	;'s'
   328  036D  343A               	retlw	58	;':'
   329  036E  3420               	retlw	32	;' '
   330  036F  340D               	retlw	13
   331  0370  3400               	retlw	0
   332  0371                     STR_1:
   333  0371  3456               	retlw	86	;'V'
   334  0372  3461               	retlw	97	;'a'
   335  0373  346C               	retlw	108	;'l'
   336  0374  346F               	retlw	111	;'o'
   337  0375  3472               	retlw	114	;'r'
   338  0376  3420               	retlw	32	;' '
   339  0377  3464               	retlw	100	;'d'
   340  0378  3465               	retlw	101	;'e'
   341  0379  346C               	retlw	108	;'l'
   342  037A  3420               	retlw	32	;' '
   343  037B  3463               	retlw	99	;'c'
   344  037C  346F               	retlw	111	;'o'
   345  037D  346E               	retlw	110	;'n'
   346  037E  3474               	retlw	116	;'t'
   347  037F  3461               	retlw	97	;'a'
   348  0380  3464               	retlw	100	;'d'
   349  0381  346F               	retlw	111	;'o'
   350  0382  3472               	retlw	114	;'r'
   351  0383  343A               	retlw	58	;':'
   352  0384  340D               	retlw	13
   353  0385  3400               	retlw	0
   354  0386                     STR_3:
   355  0386  3449               	retlw	73	;'I'
   356  0387  346E               	retlw	110	;'n'
   357  0388  3467               	retlw	103	;'g'
   358  0389  3472               	retlw	114	;'r'
   359  038A  3465               	retlw	101	;'e'
   360  038B  3473               	retlw	115	;'s'
   361  038C  3461               	retlw	97	;'a'
   362  038D  3472               	retlw	114	;'r'
   363  038E  3420               	retlw	32	;' '
   364  038F  3443               	retlw	67	;'C'
   365  0390  3465               	retlw	101	;'e'
   366  0391  346E               	retlw	110	;'n'
   367  0392  3474               	retlw	116	;'t'
   368  0393  3465               	retlw	101	;'e'
   369  0394  346E               	retlw	110	;'n'
   370  0395  3461               	retlw	97	;'a'
   371  0396  343A               	retlw	58	;':'
   372  0397  3420               	retlw	32	;' '
   373  0398  340D               	retlw	13
   374  0399  3400               	retlw	0
   375  039A                     STR_4:
   376  039A  3449               	retlw	73	;'I'
   377  039B  346E               	retlw	110	;'n'
   378  039C  3467               	retlw	103	;'g'
   379  039D  3472               	retlw	114	;'r'
   380  039E  3465               	retlw	101	;'e'
   381  039F  3473               	retlw	115	;'s'
   382  03A0  3461               	retlw	97	;'a'
   383  03A1  3472               	retlw	114	;'r'
   384  03A2  3420               	retlw	32	;' '
   385  03A3  3444               	retlw	68	;'D'
   386  03A4  3465               	retlw	101	;'e'
   387  03A5  3463               	retlw	99	;'c'
   388  03A6  3465               	retlw	101	;'e'
   389  03A7  346E               	retlw	110	;'n'
   390  03A8  3461               	retlw	97	;'a'
   391  03A9  3473               	retlw	115	;'s'
   392  03AA  343A               	retlw	58	;':'
   393  03AB  3420               	retlw	32	;' '
   394  03AC  340D               	retlw	13
   395  03AD  3400               	retlw	0
   396  03AE                     STR_7:
   397  03AE  3425               	retlw	37	;'%'
   398  03AF  3464               	retlw	100	;'d'
   399  03B0  3400               	retlw	0
   400  0398                     
   401                           	psect	cinit
   402  000F                     start_initialization:	
   403                           ; #config settings
   404                           
   405  000F                     __initialization:
   406                           
   407                           ; Clear objects allocated to COMMON
   408  000F  01FA               	clrf	__pbssCOMMON& (0+127)
   409  0010  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
   410                           
   411                           ; Clear objects allocated to BANK0
   412  0011  1283               	bcf	3,5	;RP0=0, select bank0
   413  0012  1303               	bcf	3,6	;RP1=0, select bank0
   414  0013  01E9               	clrf	__pbssBANK0& (0+127)
   415  0014  01EA               	clrf	(__pbssBANK0+1)& (0+127)
   416  0015  01EB               	clrf	(__pbssBANK0+2)& (0+127)
   417  0016  01EC               	clrf	(__pbssBANK0+3)& (0+127)
   418                           
   419                           ; Clear objects allocated to BANK1
   420  0017  1683               	bsf	3,5	;RP0=1, select bank1
   421  0018  1303               	bcf	3,6	;RP1=0, select bank1
   422  0019  01A0               	clrf	__pbssBANK1& (0+127)
   423  001A  01A1               	clrf	(__pbssBANK1+1)& (0+127)
   424  001B  01A2               	clrf	(__pbssBANK1+2)& (0+127)
   425  001C  01A3               	clrf	(__pbssBANK1+3)& (0+127)
   426  001D  01A4               	clrf	(__pbssBANK1+4)& (0+127)
   427  001E  01A5               	clrf	(__pbssBANK1+5)& (0+127)
   428  001F  01A6               	clrf	(__pbssBANK1+6)& (0+127)
   429  0020  01A7               	clrf	(__pbssBANK1+7)& (0+127)
   430  0021  01A8               	clrf	(__pbssBANK1+8)& (0+127)
   431  0022  01A9               	clrf	(__pbssBANK1+9)& (0+127)
   432  0023                     end_of_initialization:	
   433                           ;End of C runtime variable initialization code
   434                           
   435  0023                     __end_of__initialization:
   436  0023  0183               	clrf	3
   437  0024  120A  118A  2E8D   	ljmp	_main	;jump to C main() function
   438                           
   439                           	psect	bssCOMMON
   440  007A                     __pbssCOMMON:
   441  007A                     _dec:
   442  007A                     	ds	1
   443  007B                     _residuo:
   444  007B                     	ds	1
   445                           
   446                           	psect	bssBANK0
   447  0069                     __pbssBANK0:
   448  0069                     _cen:
   449  0069                     	ds	1
   450  006A                     _units:
   451  006A                     	ds	1
   452  006B                     _tens:
   453  006B                     	ds	1
   454  006C                     _hundreds:
   455  006C                     	ds	1
   456                           
   457                           	psect	bssBANK1
   458  00A0                     __pbssBANK1:
   459  00A0                     _full:
   460  00A0                     	ds	2
   461  00A2                     _select:
   462  00A2                     	ds	2
   463  00A4                     _count:
   464  00A4                     	ds	2
   465  00A6                     _con:
   466  00A6                     	ds	1
   467  00A7                     _var:
   468  00A7                     	ds	1
   469  00A8                     _uni:
   470  00A8                     	ds	1
   471  00A9                     _valor:
   472  00A9                     	ds	1
   473                           
   474                           	psect	cstackBANK1
   475  00AA                     __pcstackBANK1:
   476  00AA                     ??_Text:
   477                           
   478                           ; 1 bytes @ 0x0
   479  00AA                     	ds	5
   480                           
   481                           	psect	cstackCOMMON
   482  0070                     __pcstackCOMMON:
   483  0070                     ?_isdigit:
   484  0070                     ?_setup:	
   485                           ; 1 bit 
   486                           
   487  0070                     ?_Text:	
   488                           ; 1 bytes @ 0x0
   489                           
   490  0070                     ?_division:	
   491                           ; 1 bytes @ 0x0
   492                           
   493  0070                     ?_isr:	
   494                           ; 1 bytes @ 0x0
   495                           
   496  0070                     ??_isr:	
   497                           ; 1 bytes @ 0x0
   498                           
   499  0070                     ?_main:	
   500                           ; 1 bytes @ 0x0
   501                           
   502                           
   503                           ; 1 bytes @ 0x0
   504  0070                     	ds	2
   505  0072                     ??_setup:
   506  0072                     ?_strcat:	
   507                           ; 1 bytes @ 0x2
   508                           
   509  0072                     ??_isdigit:	
   510                           ; 1 bytes @ 0x2
   511                           
   512  0072                     ?_putch:	
   513                           ; 1 bytes @ 0x2
   514                           
   515  0072                     ?___wmul:	
   516                           ; 1 bytes @ 0x2
   517                           
   518  0072                     ?___awdiv:	
   519                           ; 2 bytes @ 0x2
   520                           
   521  0072                     ?___awmod:	
   522                           ; 2 bytes @ 0x2
   523                           
   524  0072                     ?___lwdiv:	
   525                           ; 2 bytes @ 0x2
   526                           
   527  0072                     putch@data:	
   528                           ; 2 bytes @ 0x2
   529                           
   530  0072                     _isdigit$934:	
   531                           ; 1 bytes @ 0x2
   532                           
   533  0072                     strcat@from:	
   534                           ; 1 bytes @ 0x2
   535                           
   536  0072                     ___wmul@multiplier:	
   537                           ; 1 bytes @ 0x2
   538                           
   539  0072                     ___awdiv@divisor:	
   540                           ; 2 bytes @ 0x2
   541                           
   542  0072                     ___awmod@divisor:	
   543                           ; 2 bytes @ 0x2
   544                           
   545  0072                     ___lwdiv@divisor:	
   546                           ; 2 bytes @ 0x2
   547                           
   548                           
   549                           ; 2 bytes @ 0x2
   550  0072                     	ds	1
   551  0073                     ??_strcat:
   552  0073                     ??_putch:	
   553                           ; 1 bytes @ 0x3
   554                           
   555  0073                     isdigit@c:	
   556                           ; 1 bytes @ 0x3
   557                           
   558                           
   559                           ; 1 bytes @ 0x3
   560  0073                     	ds	1
   561  0074                     strcat@to:
   562  0074                     ___wmul@multiplicand:	
   563                           ; 1 bytes @ 0x4
   564                           
   565  0074                     ___awdiv@dividend:	
   566                           ; 2 bytes @ 0x4
   567                           
   568  0074                     ___awmod@dividend:	
   569                           ; 2 bytes @ 0x4
   570                           
   571  0074                     ___lwdiv@dividend:	
   572                           ; 2 bytes @ 0x4
   573                           
   574                           
   575                           ; 2 bytes @ 0x4
   576  0074                     	ds	1
   577  0075                     strcat@cp:
   578                           
   579                           ; 1 bytes @ 0x5
   580  0075                     	ds	1
   581  0076                     ??___wmul:
   582  0076                     ??___awdiv:	
   583                           ; 1 bytes @ 0x6
   584                           
   585  0076                     ??___awmod:	
   586                           ; 1 bytes @ 0x6
   587                           
   588  0076                     ??___lwdiv:	
   589                           ; 1 bytes @ 0x6
   590                           
   591  0076                     ___wmul@product:	
   592                           ; 1 bytes @ 0x6
   593                           
   594                           
   595                           ; 2 bytes @ 0x6
   596  0076                     	ds	1
   597  0077                     ___awmod@counter:
   598  0077                     ___lwdiv@quotient:	
   599                           ; 1 bytes @ 0x7
   600                           
   601                           
   602                           ; 2 bytes @ 0x7
   603  0077                     	ds	1
   604  0078                     ?_atoi:
   605  0078                     ___awmod@sign:	
   606                           ; 2 bytes @ 0x8
   607                           
   608                           
   609                           ; 1 bytes @ 0x8
   610  0078                     	ds	1
   611  0079                     division@valor:
   612  0079                     ___lwdiv@counter:	
   613                           ; 1 bytes @ 0x9
   614                           
   615                           
   616                           ; 1 bytes @ 0x9
   617  0079                     	ds	1
   618  007A                     ??_main:
   619                           
   620                           	psect	cstackBANK0
   621  0020                     __pcstackBANK0:	
   622                           ; 1 bytes @ 0xA
   623                           
   624  0020                     ??_atoi:
   625  0020                     ?___lwmod:	
   626                           ; 1 bytes @ 0x0
   627                           
   628  0020                     ___awdiv@counter:	
   629                           ; 2 bytes @ 0x0
   630                           
   631  0020                     ___lwmod@divisor:	
   632                           ; 1 bytes @ 0x0
   633                           
   634                           
   635                           ; 2 bytes @ 0x0
   636  0020                     	ds	1
   637  0021                     ___awdiv@sign:
   638                           
   639                           ; 1 bytes @ 0x1
   640  0021                     	ds	1
   641  0022                     atoi@sign:
   642  0022                     ___awdiv@quotient:	
   643                           ; 1 bytes @ 0x2
   644                           
   645  0022                     ___lwmod@dividend:	
   646                           ; 2 bytes @ 0x2
   647                           
   648                           
   649                           ; 2 bytes @ 0x2
   650  0022                     	ds	1
   651  0023                     atoi@a:
   652                           
   653                           ; 2 bytes @ 0x3
   654  0023                     	ds	1
   655  0024                     ??_division:
   656  0024                     ??___lwmod:	
   657                           ; 1 bytes @ 0x4
   658                           
   659                           
   660                           ; 1 bytes @ 0x4
   661  0024                     	ds	1
   662  0025                     ___lwmod@counter:
   663  0025                     atoi@s:	
   664                           ; 1 bytes @ 0x5
   665                           
   666                           
   667                           ; 1 bytes @ 0x5
   668  0025                     	ds	1
   669  0026                     ?__doprnt:
   670  0026                     __doprnt@f:	
   671                           ; 2 bytes @ 0x6
   672                           
   673                           
   674                           ; 1 bytes @ 0x6
   675  0026                     	ds	1
   676  0027                     __doprnt@ap:
   677                           
   678                           ; 1 bytes @ 0x7
   679  0027                     	ds	1
   680  0028                     ??__doprnt:
   681                           
   682                           ; 1 bytes @ 0x8
   683  0028                     	ds	3
   684  002B                     __doprnt@flag:
   685                           
   686                           ; 1 bytes @ 0xB
   687  002B                     	ds	1
   688  002C                     __doprnt@prec:
   689                           
   690                           ; 1 bytes @ 0xC
   691  002C                     	ds	1
   692  002D                     __doprnt@val:
   693                           
   694                           ; 2 bytes @ 0xD
   695  002D                     	ds	2
   696  002F                     __doprnt@c:
   697                           
   698                           ; 1 bytes @ 0xF
   699  002F                     	ds	1
   700  0030                     __doprnt@pb:
   701                           
   702                           ; 1 bytes @ 0x10
   703  0030                     	ds	1
   704  0031                     ?_printf:
   705  0031                     ?_sprintf:	
   706                           ; 2 bytes @ 0x11
   707                           
   708  0031                     sprintf@f:	
   709                           ; 2 bytes @ 0x11
   710                           
   711                           
   712                           ; 1 bytes @ 0x11
   713  0031                     	ds	2
   714  0033                     ??_printf:
   715                           
   716                           ; 1 bytes @ 0x13
   717  0033                     	ds	1
   718  0034                     ??_sprintf:
   719                           
   720                           ; 1 bytes @ 0x14
   721  0034                     	ds	1
   722  0035                     printf@ap:
   723                           
   724                           ; 1 bytes @ 0x15
   725  0035                     	ds	1
   726  0036                     printf@f:
   727  0036                     sprintf@wh:	
   728                           ; 1 bytes @ 0x16
   729                           
   730                           
   731                           ; 1 bytes @ 0x16
   732  0036                     	ds	1
   733  0037                     sprintf@ap:
   734  0037                     printf@pb:	
   735                           ; 1 bytes @ 0x17
   736                           
   737                           
   738                           ; 2 bytes @ 0x17
   739  0037                     	ds	1
   740  0038                     sprintf@pb:
   741                           
   742                           ; 2 bytes @ 0x18
   743  0038                     	ds	2
   744  003A                     ?_concat:
   745  003A                     concat@a:	
   746                           ; 2 bytes @ 0x1A
   747                           
   748                           
   749                           ; 2 bytes @ 0x1A
   750  003A                     	ds	2
   751  003C                     concat@b:
   752                           
   753                           ; 2 bytes @ 0x1C
   754  003C                     	ds	2
   755  003E                     ??_concat:
   756                           
   757                           ; 1 bytes @ 0x1E
   758  003E                     	ds	1
   759  003F                     concat@s2:
   760                           
   761                           ; 20 bytes @ 0x1F
   762  003F                     	ds	20
   763  0053                     concat@s1:
   764                           
   765                           ; 20 bytes @ 0x33
   766  0053                     	ds	20
   767  0067                     concat@c:
   768                           
   769                           ; 2 bytes @ 0x47
   770  0067                     	ds	2
   771                           
   772                           	psect	maintext
   773  068D                     __pmaintext:	
   774 ;;
   775 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   776 ;;
   777 ;; *************** function _main *****************
   778 ;; Defined at:
   779 ;;		line 326 in file "D2_main5.c"
   780 ;; Parameters:    Size  Location     Type
   781 ;;		None
   782 ;; Auto vars:     Size  Location     Type
   783 ;;		None
   784 ;; Return value:  Size  Location     Type
   785 ;;                  1    wreg      void 
   786 ;; Registers used:
   787 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   788 ;; Tracked objects:
   789 ;;		On entry : B00/0
   790 ;;		On exit  : 0/0
   791 ;;		Unchanged: 0/0
   792 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   793 ;;      Params:         0       0       0       0       0
   794 ;;      Locals:         0       0       0       0       0
   795 ;;      Temps:          0       0       0       0       0
   796 ;;      Totals:         0       0       0       0       0
   797 ;;Total ram usage:        0 bytes
   798 ;; Hardware stack levels required when called:    6
   799 ;; This function calls:
   800 ;;		_Text
   801 ;;		_setup
   802 ;; This function is called by:
   803 ;;		Startup code after reset
   804 ;; This function uses a non-reentrant model
   805 ;;
   806                           
   807                           
   808                           ;psect for function _main
   809  068D                     _main:
   810  068D                     l2032:	
   811                           ;incstack = 0
   812                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   813                           
   814                           
   815                           ;D2_main5.c: 328:     setup();
   816  068D  120A  118A  2522  120A  118A  	fcall	_setup
   817  0692                     l2034:
   818                           
   819                           ;D2_main5.c: 332:     {;D2_main5.c: 333:         PORTD = count;
   820  0692  1683               	bsf	3,5	;RP0=1, select bank1
   821  0693  1303               	bcf	3,6	;RP1=0, select bank1
   822  0694  0824               	movf	_count^(0+128),w
   823  0695  1283               	bcf	3,5	;RP0=0, select bank0
   824  0696  1303               	bcf	3,6	;RP1=0, select bank0
   825  0697  0088               	movwf	8	;volatile
   826  0698                     l2036:
   827                           
   828                           ;D2_main5.c: 334:         PORTA = select;
   829  0698  1683               	bsf	3,5	;RP0=1, select bank1
   830  0699  1303               	bcf	3,6	;RP1=0, select bank1
   831  069A  0822               	movf	_select^(0+128),w
   832  069B  1283               	bcf	3,5	;RP0=0, select bank0
   833  069C  1303               	bcf	3,6	;RP1=0, select bank0
   834  069D  0085               	movwf	5	;volatile
   835  069E                     l2038:
   836                           
   837                           ;D2_main5.c: 335:         Text();
   838  069E  120A  118A  2030  120A  118A  	fcall	_Text
   839  06A3  2E92               	goto	l2034
   840  06A4  120A  118A  280C   	ljmp	start
   841  06A7                     __end_of_main:
   842                           
   843                           	psect	text1
   844  0522                     __ptext1:	
   845 ;; *************** function _setup *****************
   846 ;; Defined at:
   847 ;;		line 344 in file "D2_main5.c"
   848 ;; Parameters:    Size  Location     Type
   849 ;;		None
   850 ;; Auto vars:     Size  Location     Type
   851 ;;		None
   852 ;; Return value:  Size  Location     Type
   853 ;;                  1    wreg      void 
   854 ;; Registers used:
   855 ;;		wreg, status,2
   856 ;; Tracked objects:
   857 ;;		On entry : 0/0
   858 ;;		On exit  : 0/0
   859 ;;		Unchanged: 0/0
   860 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   861 ;;      Params:         0       0       0       0       0
   862 ;;      Locals:         0       0       0       0       0
   863 ;;      Temps:          0       0       0       0       0
   864 ;;      Totals:         0       0       0       0       0
   865 ;;Total ram usage:        0 bytes
   866 ;; Hardware stack levels used:    1
   867 ;; Hardware stack levels required when called:    1
   868 ;; This function calls:
   869 ;;		Nothing
   870 ;; This function is called by:
   871 ;;		_main
   872 ;; This function uses a non-reentrant model
   873 ;;
   874                           
   875                           
   876                           ;psect for function _setup
   877  0522                     _setup:
   878  0522                     l1618:	
   879                           ;incstack = 0
   880                           ; Regs used in _setup: [wreg+status,2]
   881                           
   882                           
   883                           ;D2_main5.c: 346:     ANSEL = 0;
   884  0522  1683               	bsf	3,5	;RP0=1, select bank3
   885  0523  1703               	bsf	3,6	;RP1=1, select bank3
   886  0524  0188               	clrf	8	;volatile
   887                           
   888                           ;D2_main5.c: 347:     ANSELH = 0;
   889  0525  0189               	clrf	9	;volatile
   890                           
   891                           ;D2_main5.c: 350:     TRISA = 0;
   892  0526  1683               	bsf	3,5	;RP0=1, select bank1
   893  0527  1303               	bcf	3,6	;RP1=0, select bank1
   894  0528  0185               	clrf	5	;volatile
   895  0529                     l1620:
   896                           
   897                           ;D2_main5.c: 353:     TRISBbits.TRISB0 = 1;
   898  0529  1406               	bsf	6,0	;volatile
   899  052A                     l1622:
   900                           
   901                           ;D2_main5.c: 354:     TRISBbits.TRISB1 = 1;
   902  052A  1486               	bsf	6,1	;volatile
   903                           
   904                           ;D2_main5.c: 360:     TRISD = 0;
   905  052B  0188               	clrf	8	;volatile
   906                           
   907                           ;D2_main5.c: 368:     PORTA = 0x00;
   908  052C  1283               	bcf	3,5	;RP0=0, select bank0
   909  052D  1303               	bcf	3,6	;RP1=0, select bank0
   910  052E  0185               	clrf	5	;volatile
   911                           
   912                           ;D2_main5.c: 369:     PORTB = 0x00;
   913  052F  0186               	clrf	6	;volatile
   914                           
   915                           ;D2_main5.c: 370:     PORTC = 0x00;
   916  0530  0187               	clrf	7	;volatile
   917                           
   918                           ;D2_main5.c: 371:     PORTD = 0x00;
   919  0531  0188               	clrf	8	;volatile
   920                           
   921                           ;D2_main5.c: 372:     PORTE = 0x00;
   922  0532  0189               	clrf	9	;volatile
   923  0533                     l1624:
   924                           
   925                           ;D2_main5.c: 375:     OSCCONbits.IRCF0 = 0;
   926  0533  1683               	bsf	3,5	;RP0=1, select bank1
   927  0534  1303               	bcf	3,6	;RP1=0, select bank1
   928  0535  120F               	bcf	15,4	;volatile
   929  0536                     l1626:
   930                           
   931                           ;D2_main5.c: 376:     OSCCONbits.IRCF1 = 1;
   932  0536  168F               	bsf	15,5	;volatile
   933  0537                     l1628:
   934                           
   935                           ;D2_main5.c: 377:     OSCCONbits.IRCF2 = 1;
   936  0537  170F               	bsf	15,6	;volatile
   937  0538                     l1630:
   938                           
   939                           ;D2_main5.c: 378:     OSCCONbits.SCS = 1;
   940  0538  140F               	bsf	15,0	;volatile
   941  0539                     l1632:
   942                           
   943                           ;D2_main5.c: 381:     OPTION_REGbits.nRBPU = 0;
   944  0539  1381               	bcf	1,7	;volatile
   945  053A                     l1634:
   946                           
   947                           ;D2_main5.c: 382:     WPUB = 0b00000011;
   948  053A  3003               	movlw	3
   949  053B  0095               	movwf	21	;volatile
   950  053C                     l1636:
   951                           
   952                           ;D2_main5.c: 383:     IOCBbits.IOCB0 = 1;
   953  053C  1416               	bsf	22,0	;volatile
   954  053D                     l1638:
   955                           
   956                           ;D2_main5.c: 384:     IOCBbits.IOCB1 = 1;
   957  053D  1496               	bsf	22,1	;volatile
   958  053E                     l1640:
   959                           
   960                           ;D2_main5.c: 387:     TXSTAbits.SYNC = 0;
   961  053E  1218               	bcf	24,4	;volatile
   962  053F                     l1642:
   963                           
   964                           ;D2_main5.c: 388:     TXSTAbits.BRGH = 1;
   965  053F  1518               	bsf	24,2	;volatile
   966  0540                     l1644:
   967                           
   968                           ;D2_main5.c: 389:     BAUDCTLbits.BRG16 = 0;
   969  0540  1683               	bsf	3,5	;RP0=1, select bank3
   970  0541  1703               	bsf	3,6	;RP1=1, select bank3
   971  0542  1187               	bcf	7,3	;volatile
   972  0543                     l1646:
   973                           
   974                           ;D2_main5.c: 391:     SPBRG = 25;
   975  0543  3019               	movlw	25
   976  0544  1683               	bsf	3,5	;RP0=1, select bank1
   977  0545  1303               	bcf	3,6	;RP1=0, select bank1
   978  0546  0099               	movwf	25	;volatile
   979  0547                     l1648:
   980                           
   981                           ;D2_main5.c: 392:     SPBRGH = 1;
   982  0547  3001               	movlw	1
   983  0548  009A               	movwf	26	;volatile
   984  0549                     l1650:
   985                           
   986                           ;D2_main5.c: 394:     RCSTAbits.SPEN = 1;
   987  0549  1283               	bcf	3,5	;RP0=0, select bank0
   988  054A  1303               	bcf	3,6	;RP1=0, select bank0
   989  054B  1798               	bsf	24,7	;volatile
   990  054C                     l1652:
   991                           
   992                           ;D2_main5.c: 395:     RCSTAbits.RX9 = 0;
   993  054C  1318               	bcf	24,6	;volatile
   994  054D                     l1654:
   995                           
   996                           ;D2_main5.c: 396:     RCSTAbits.CREN = 1;
   997  054D  1618               	bsf	24,4	;volatile
   998  054E                     l1656:
   999                           
  1000                           ;D2_main5.c: 397:     TXSTAbits.TX9 = 0;
  1001  054E  1683               	bsf	3,5	;RP0=1, select bank1
  1002  054F  1303               	bcf	3,6	;RP1=0, select bank1
  1003  0550  1318               	bcf	24,6	;volatile
  1004  0551                     l1658:
  1005                           
  1006                           ;D2_main5.c: 399:     TXSTAbits.TXEN = 1;
  1007  0551  1698               	bsf	24,5	;volatile
  1008  0552                     l1660:
  1009                           
  1010                           ;D2_main5.c: 401:     PIR1bits.RCIF = 0;
  1011  0552  1283               	bcf	3,5	;RP0=0, select bank0
  1012  0553  1303               	bcf	3,6	;RP1=0, select bank0
  1013  0554  128C               	bcf	12,5	;volatile
  1014  0555                     l1662:
  1015                           
  1016                           ;D2_main5.c: 402:     PIR1bits.TXIF = 0;
  1017  0555  120C               	bcf	12,4	;volatile
  1018  0556                     l1664:
  1019                           
  1020                           ;D2_main5.c: 405:     INTCONbits.GIE = 1;
  1021  0556  178B               	bsf	11,7	;volatile
  1022  0557                     l1666:
  1023                           
  1024                           ;D2_main5.c: 406:     INTCONbits.PEIE = 1;
  1025  0557  170B               	bsf	11,6	;volatile
  1026  0558                     l1668:
  1027                           
  1028                           ;D2_main5.c: 407:     PIE1bits.RCIE = 0;
  1029  0558  1683               	bsf	3,5	;RP0=1, select bank1
  1030  0559  1303               	bcf	3,6	;RP1=0, select bank1
  1031  055A  128C               	bcf	12,5	;volatile
  1032  055B                     l1670:
  1033                           
  1034                           ;D2_main5.c: 408:     PIE1bits.TXIE = 0;
  1035  055B  120C               	bcf	12,4	;volatile
  1036  055C                     l1672:
  1037                           
  1038                           ;D2_main5.c: 409:     INTCONbits.RBIF = 1;
  1039  055C  140B               	bsf	11,0	;volatile
  1040  055D                     l1674:
  1041                           
  1042                           ;D2_main5.c: 410:     INTCONbits.RBIE = 1;
  1043  055D  158B               	bsf	11,3	;volatile
  1044  055E                     l119:
  1045  055E  0008               	return
  1046  055F                     __end_of_setup:
  1047                           
  1048                           	psect	text2
  1049  0030                     __ptext2:	
  1050 ;; *************** function _Text *****************
  1051 ;; Defined at:
  1052 ;;		line 414 in file "D2_main5.c"
  1053 ;; Parameters:    Size  Location     Type
  1054 ;;		None
  1055 ;; Auto vars:     Size  Location     Type
  1056 ;;		None
  1057 ;; Return value:  Size  Location     Type
  1058 ;;                  1    wreg      void 
  1059 ;; Registers used:
  1060 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1061 ;; Tracked objects:
  1062 ;;		On entry : 0/0
  1063 ;;		On exit  : 0/0
  1064 ;;		Unchanged: 0/0
  1065 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1066 ;;      Params:         0       0       0       0       0
  1067 ;;      Locals:         0       0       0       0       0
  1068 ;;      Temps:          0       0       5       0       0
  1069 ;;      Totals:         0       0       5       0       0
  1070 ;;Total ram usage:        5 bytes
  1071 ;; Hardware stack levels used:    1
  1072 ;; Hardware stack levels required when called:    5
  1073 ;; This function calls:
  1074 ;;		_concat
  1075 ;;		_division
  1076 ;;		_printf
  1077 ;; This function is called by:
  1078 ;;		_main
  1079 ;; This function uses a non-reentrant model
  1080 ;;
  1081                           
  1082                           
  1083                           ;psect for function _Text
  1084  0030                     _Text:
  1085  0030                     l1980:	
  1086                           ;incstack = 0
  1087                           ; Regs used in _Text: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1088                           
  1089                           
  1090                           ;D2_main5.c: 415:      _delay((unsigned long)((250)*(4000000/4000.0)));
  1091  0030  3002               	movlw	2
  1092  0031  1683               	bsf	3,5	;RP0=1, select bank1
  1093  0032  1303               	bcf	3,6	;RP1=0, select bank1
  1094  0033  00AC               	movwf	(??_Text^(0+128)+2)
  1095  0034  3045               	movlw	69
  1096  0035  00AB               	movwf	(??_Text^(0+128)+1)
  1097  0036  30A9               	movlw	169
  1098  0037  00AA               	movwf	??_Text^(0+128)
  1099  0038                     u1807:
  1100  0038  0BAA               	decfsz	??_Text^(0+128),f
  1101  0039  2838               	goto	u1807
  1102  003A  0BAB               	decfsz	(??_Text^(0+128)+1),f
  1103  003B  2838               	goto	u1807
  1104  003C  0BAC               	decfsz	(??_Text^(0+128)+2),f
  1105  003D  2838               	goto	u1807
  1106  003E                     l1982:
  1107                           
  1108                           ;D2_main5.c: 416:      division(count);
  1109  003E  1683               	bsf	3,5	;RP0=1, select bank1
  1110  003F  1303               	bcf	3,6	;RP1=0, select bank1
  1111  0040  0824               	movf	_count^(0+128),w
  1112  0041  120A  118A  23B1  120A  118A  	fcall	_division
  1113  0046                     l1984:
  1114                           
  1115                           ;D2_main5.c: 417:     printf("Valor del contador:\r");
  1116  0046  303B               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1117  0047  120A  118A  2672  120A  118A  	fcall	_printf
  1118  004C                     l1986:
  1119                           
  1120                           ;D2_main5.c: 418:     _delay((unsigned long)((250)*(4000000/4000.0)));
  1121  004C  3002               	movlw	2
  1122  004D  1683               	bsf	3,5	;RP0=1, select bank1
  1123  004E  1303               	bcf	3,6	;RP1=0, select bank1
  1124  004F  00AC               	movwf	(??_Text^(0+128)+2)
  1125  0050  3045               	movlw	69
  1126  0051  00AB               	movwf	(??_Text^(0+128)+1)
  1127  0052  30A9               	movlw	169
  1128  0053  00AA               	movwf	??_Text^(0+128)
  1129  0054                     u1817:
  1130  0054  0BAA               	decfsz	??_Text^(0+128),f
  1131  0055  2854               	goto	u1817
  1132  0056  0BAB               	decfsz	(??_Text^(0+128)+1),f
  1133  0057  2854               	goto	u1817
  1134  0058  0BAC               	decfsz	(??_Text^(0+128)+2),f
  1135  0059  2854               	goto	u1817
  1136  005A                     l1988:
  1137                           
  1138                           ;D2_main5.c: 419:     TXREG = hundreds;
  1139  005A  1283               	bcf	3,5	;RP0=0, select bank0
  1140  005B  1303               	bcf	3,6	;RP1=0, select bank0
  1141  005C  086C               	movf	_hundreds,w
  1142  005D  0099               	movwf	25	;volatile
  1143  005E                     l1990:
  1144                           
  1145                           ;D2_main5.c: 420:     _delay((unsigned long)((250)*(4000000/4000.0)));
  1146  005E  3002               	movlw	2
  1147  005F  1683               	bsf	3,5	;RP0=1, select bank1
  1148  0060  1303               	bcf	3,6	;RP1=0, select bank1
  1149  0061  00AC               	movwf	(??_Text^(0+128)+2)
  1150  0062  3045               	movlw	69
  1151  0063  00AB               	movwf	(??_Text^(0+128)+1)
  1152  0064  30A9               	movlw	169
  1153  0065  00AA               	movwf	??_Text^(0+128)
  1154  0066                     u1827:
  1155  0066  0BAA               	decfsz	??_Text^(0+128),f
  1156  0067  2866               	goto	u1827
  1157  0068  0BAB               	decfsz	(??_Text^(0+128)+1),f
  1158  0069  2866               	goto	u1827
  1159  006A  0BAC               	decfsz	(??_Text^(0+128)+2),f
  1160  006B  2866               	goto	u1827
  1161  006C                     l1992:
  1162                           
  1163                           ;D2_main5.c: 421:     TXREG = tens;
  1164  006C  1283               	bcf	3,5	;RP0=0, select bank0
  1165  006D  1303               	bcf	3,6	;RP1=0, select bank0
  1166  006E  086B               	movf	_tens,w
  1167  006F  0099               	movwf	25	;volatile
  1168  0070                     l1994:
  1169                           
  1170                           ;D2_main5.c: 422:     _delay((unsigned long)((250)*(4000000/4000.0)));
  1171  0070  3002               	movlw	2
  1172  0071  1683               	bsf	3,5	;RP0=1, select bank1
  1173  0072  1303               	bcf	3,6	;RP1=0, select bank1
  1174  0073  00AC               	movwf	(??_Text^(0+128)+2)
  1175  0074  3045               	movlw	69
  1176  0075  00AB               	movwf	(??_Text^(0+128)+1)
  1177  0076  30A9               	movlw	169
  1178  0077  00AA               	movwf	??_Text^(0+128)
  1179  0078                     u1837:
  1180  0078  0BAA               	decfsz	??_Text^(0+128),f
  1181  0079  2878               	goto	u1837
  1182  007A  0BAB               	decfsz	(??_Text^(0+128)+1),f
  1183  007B  2878               	goto	u1837
  1184  007C  0BAC               	decfsz	(??_Text^(0+128)+2),f
  1185  007D  2878               	goto	u1837
  1186  007E                     l1996:
  1187                           
  1188                           ;D2_main5.c: 423:     TXREG = units;
  1189  007E  1283               	bcf	3,5	;RP0=0, select bank0
  1190  007F  1303               	bcf	3,6	;RP1=0, select bank0
  1191  0080  086A               	movf	_units,w
  1192  0081  0099               	movwf	25	;volatile
  1193  0082                     l1998:
  1194                           
  1195                           ;D2_main5.c: 424:     _delay((unsigned long)((250)*(4000000/4000.0)));
  1196  0082  3002               	movlw	2
  1197  0083  1683               	bsf	3,5	;RP0=1, select bank1
  1198  0084  1303               	bcf	3,6	;RP1=0, select bank1
  1199  0085  00AC               	movwf	(??_Text^(0+128)+2)
  1200  0086  3045               	movlw	69
  1201  0087  00AB               	movwf	(??_Text^(0+128)+1)
  1202  0088  30A9               	movlw	169
  1203  0089  00AA               	movwf	??_Text^(0+128)
  1204  008A                     u1847:
  1205  008A  0BAA               	decfsz	??_Text^(0+128),f
  1206  008B  288A               	goto	u1847
  1207  008C  0BAB               	decfsz	(??_Text^(0+128)+1),f
  1208  008D  288A               	goto	u1847
  1209  008E  0BAC               	decfsz	(??_Text^(0+128)+2),f
  1210  008F  288A               	goto	u1847
  1211  0090                     l2000:
  1212                           
  1213                           ;D2_main5.c: 425:     printf("\r");
  1214  0090  3062               	movlw	(low (((STR_3+18)-__stringbase)| (0+32768)))& (0+255)
  1215  0091  120A  118A  2672  120A  118A  	fcall	_printf
  1216  0096                     l2002:
  1217                           
  1218                           ;D2_main5.c: 428:      printf("Ingresar Centena: \r");
  1219  0096  3050               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1220  0097  120A  118A  2672  120A  118A  	fcall	_printf
  1221  009C                     l123:
  1222  009C  1283               	bcf	3,5	;RP0=0, select bank0
  1223  009D  1303               	bcf	3,6	;RP1=0, select bank0
  1224  009E  1E8C               	btfss	12,5	;volatile
  1225  009F  28A1               	goto	u1711
  1226  00A0  28A2               	goto	u1710
  1227  00A1                     u1711:
  1228  00A1  289C               	goto	l123
  1229  00A2                     u1710:
  1230  00A2                     l2004:
  1231                           
  1232                           ;D2_main5.c: 431:         cen = RCREG -48;
  1233  00A2  081A               	movf	26,w	;volatile
  1234  00A3  3ED0               	addlw	208
  1235  00A4  1683               	bsf	3,5	;RP0=1, select bank1
  1236  00A5  1303               	bcf	3,6	;RP1=0, select bank1
  1237  00A6  00AA               	movwf	??_Text^(0+128)
  1238  00A7  082A               	movf	??_Text^(0+128),w
  1239  00A8  1283               	bcf	3,5	;RP0=0, select bank0
  1240  00A9  1303               	bcf	3,6	;RP1=0, select bank0
  1241  00AA  00E9               	movwf	_cen
  1242  00AB                     l2006:	
  1243                           ;D2_main5.c: 433:        while(RCREG > '2'){
  1244                           
  1245                           
  1246                           ;D2_main5.c: 433:        while(RCREG > '2'){
  1247  00AB  3033               	movlw	51
  1248  00AC  021A               	subwf	26,w	;volatile
  1249  00AD  1803               	skipnc
  1250  00AE  28B0               	goto	u1721
  1251  00AF  28B1               	goto	u1720
  1252  00B0                     u1721:
  1253  00B0  289C               	goto	l123
  1254  00B1                     u1720:
  1255  00B1                     l2008:
  1256                           
  1257                           ;D2_main5.c: 437:     printf("Ingresar Decenas: \r");
  1258  00B1  3064               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1259  00B2  120A  118A  2672  120A  118A  	fcall	_printf
  1260  00B7                     l130:
  1261  00B7  1283               	bcf	3,5	;RP0=0, select bank0
  1262  00B8  1303               	bcf	3,6	;RP1=0, select bank0
  1263  00B9  1E8C               	btfss	12,5	;volatile
  1264  00BA  28BC               	goto	u1731
  1265  00BB  28BD               	goto	u1730
  1266  00BC                     u1731:
  1267  00BC  28B7               	goto	l130
  1268  00BD                     u1730:
  1269  00BD                     l2010:
  1270                           
  1271                           ;D2_main5.c: 440:          dec = RCREG -48;
  1272  00BD  081A               	movf	26,w	;volatile
  1273  00BE  3ED0               	addlw	208
  1274  00BF  1683               	bsf	3,5	;RP0=1, select bank1
  1275  00C0  1303               	bcf	3,6	;RP1=0, select bank1
  1276  00C1  00AA               	movwf	??_Text^(0+128)
  1277  00C2  082A               	movf	??_Text^(0+128),w
  1278  00C3  00FA               	movwf	_dec
  1279                           
  1280                           ;D2_main5.c: 442:         if(cen == 2){
  1281  00C4  3002               	movlw	2
  1282  00C5  1283               	bcf	3,5	;RP0=0, select bank0
  1283  00C6  1303               	bcf	3,6	;RP1=0, select bank0
  1284  00C7  0669               	xorwf	_cen,w
  1285  00C8  1D03               	btfss	3,2
  1286  00C9  28CB               	goto	u1741
  1287  00CA  28CC               	goto	u1740
  1288  00CB                     u1741:
  1289  00CB  28D2               	goto	l2016
  1290  00CC                     u1740:
  1291  00CC                     l2014:
  1292                           
  1293                           ;D2_main5.c: 443:            while(RCREG > '5'){
  1294  00CC  3036               	movlw	54
  1295  00CD  021A               	subwf	26,w	;volatile
  1296  00CE  1803               	skipnc
  1297  00CF  28D1               	goto	u1751
  1298  00D0  28D2               	goto	u1750
  1299  00D1                     u1751:
  1300  00D1  28B7               	goto	l130
  1301  00D2                     u1750:
  1302  00D2                     l2016:
  1303                           
  1304                           ;D2_main5.c: 448:     printf("Ingresar Unidades: \r");
  1305  00D2  3026               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  1306  00D3  120A  118A  2672  120A  118A  	fcall	_printf
  1307  00D8                     l138:
  1308  00D8  1283               	bcf	3,5	;RP0=0, select bank0
  1309  00D9  1303               	bcf	3,6	;RP1=0, select bank0
  1310  00DA  1E8C               	btfss	12,5	;volatile
  1311  00DB  28DD               	goto	u1761
  1312  00DC  28DE               	goto	u1760
  1313  00DD                     u1761:
  1314  00DD  28D8               	goto	l138
  1315  00DE                     u1760:
  1316  00DE                     l2018:
  1317                           
  1318                           ;D2_main5.c: 451:         uni = RCREG - 48;
  1319  00DE  081A               	movf	26,w	;volatile
  1320  00DF  3ED0               	addlw	208
  1321  00E0  1683               	bsf	3,5	;RP0=1, select bank1
  1322  00E1  1303               	bcf	3,6	;RP1=0, select bank1
  1323  00E2  00AA               	movwf	??_Text^(0+128)
  1324  00E3  082A               	movf	??_Text^(0+128),w
  1325  00E4  00A8               	movwf	_uni^(0+128)
  1326                           
  1327                           ;D2_main5.c: 453:        if(cen == 2 && dec == 5){
  1328  00E5  3002               	movlw	2
  1329  00E6  1283               	bcf	3,5	;RP0=0, select bank0
  1330  00E7  1303               	bcf	3,6	;RP1=0, select bank0
  1331  00E8  0669               	xorwf	_cen,w
  1332  00E9  1D03               	btfss	3,2
  1333  00EA  28EC               	goto	u1771
  1334  00EB  28ED               	goto	u1770
  1335  00EC                     u1771:
  1336  00EC  28F9               	goto	l2026
  1337  00ED                     u1770:
  1338  00ED                     l2020:
  1339  00ED  3005               	movlw	5
  1340  00EE  067A               	xorwf	_dec,w
  1341  00EF  1D03               	btfss	3,2
  1342  00F0  28F2               	goto	u1781
  1343  00F1  28F3               	goto	u1780
  1344  00F2                     u1781:
  1345  00F2  28F9               	goto	l2026
  1346  00F3                     u1780:
  1347  00F3                     l2024:
  1348                           
  1349                           ;D2_main5.c: 454:            while(RCREG > '5'){
  1350  00F3  3036               	movlw	54
  1351  00F4  021A               	subwf	26,w	;volatile
  1352  00F5  1803               	skipnc
  1353  00F6  28F8               	goto	u1791
  1354  00F7  28F9               	goto	u1790
  1355  00F8                     u1791:
  1356  00F8  28D8               	goto	l138
  1357  00F9                     u1790:
  1358  00F9                     l2026:
  1359                           
  1360                           ;D2_main5.c: 458:       con = concat(cen, dec);
  1361  00F9  0869               	movf	_cen,w
  1362  00FA  1683               	bsf	3,5	;RP0=1, select bank1
  1363  00FB  1303               	bcf	3,6	;RP1=0, select bank1
  1364  00FC  00AA               	movwf	??_Text^(0+128)
  1365  00FD  01AB               	clrf	(??_Text^(0+128)+1)
  1366  00FE  082A               	movf	??_Text^(0+128),w
  1367  00FF  1283               	bcf	3,5	;RP0=0, select bank0
  1368  0100  1303               	bcf	3,6	;RP1=0, select bank0
  1369  0101  00BA               	movwf	concat@a
  1370  0102  1683               	bsf	3,5	;RP0=1, select bank1
  1371  0103  1303               	bcf	3,6	;RP1=0, select bank1
  1372  0104  082B               	movf	(??_Text+1)^(0+128),w
  1373  0105  1283               	bcf	3,5	;RP0=0, select bank0
  1374  0106  1303               	bcf	3,6	;RP1=0, select bank0
  1375  0107  00BB               	movwf	concat@a+1
  1376  0108  087A               	movf	_dec,w
  1377  0109  1683               	bsf	3,5	;RP0=1, select bank1
  1378  010A  1303               	bcf	3,6	;RP1=0, select bank1
  1379  010B  00AC               	movwf	(??_Text+2)^(0+128)
  1380  010C  01AD               	clrf	((??_Text+2)^(0+128)+1)
  1381  010D  082C               	movf	(??_Text+2)^(0+128),w
  1382  010E  1283               	bcf	3,5	;RP0=0, select bank0
  1383  010F  1303               	bcf	3,6	;RP1=0, select bank0
  1384  0110  00BC               	movwf	concat@b
  1385  0111  1683               	bsf	3,5	;RP0=1, select bank1
  1386  0112  1303               	bcf	3,6	;RP1=0, select bank1
  1387  0113  082D               	movf	(??_Text+3)^(0+128),w
  1388  0114  1283               	bcf	3,5	;RP0=0, select bank0
  1389  0115  1303               	bcf	3,6	;RP1=0, select bank0
  1390  0116  00BD               	movwf	concat@b+1
  1391  0117  120A  118A  255F  120A  118A  	fcall	_concat
  1392  011C  1283               	bcf	3,5	;RP0=0, select bank0
  1393  011D  1303               	bcf	3,6	;RP1=0, select bank0
  1394  011E  083A               	movf	?_concat,w
  1395  011F  1683               	bsf	3,5	;RP0=1, select bank1
  1396  0120  1303               	bcf	3,6	;RP1=0, select bank1
  1397  0121  00AE               	movwf	(??_Text+4)^(0+128)
  1398  0122  082E               	movf	(??_Text+4)^(0+128),w
  1399  0123  00A6               	movwf	_con^(0+128)
  1400                           
  1401                           ;D2_main5.c: 459:       full = concat(con, uni);
  1402  0124  0826               	movf	_con^(0+128),w
  1403  0125  00AA               	movwf	??_Text^(0+128)
  1404  0126  01AB               	clrf	(??_Text^(0+128)+1)
  1405  0127  082A               	movf	??_Text^(0+128),w
  1406  0128  1283               	bcf	3,5	;RP0=0, select bank0
  1407  0129  1303               	bcf	3,6	;RP1=0, select bank0
  1408  012A  00BA               	movwf	concat@a
  1409  012B  1683               	bsf	3,5	;RP0=1, select bank1
  1410  012C  1303               	bcf	3,6	;RP1=0, select bank1
  1411  012D  082B               	movf	(??_Text+1)^(0+128),w
  1412  012E  1283               	bcf	3,5	;RP0=0, select bank0
  1413  012F  1303               	bcf	3,6	;RP1=0, select bank0
  1414  0130  00BB               	movwf	concat@a+1
  1415  0131  1683               	bsf	3,5	;RP0=1, select bank1
  1416  0132  1303               	bcf	3,6	;RP1=0, select bank1
  1417  0133  0828               	movf	_uni^(0+128),w
  1418  0134  00AC               	movwf	(??_Text+2)^(0+128)
  1419  0135  01AD               	clrf	((??_Text+2)^(0+128)+1)
  1420  0136  082C               	movf	(??_Text+2)^(0+128),w
  1421  0137  1283               	bcf	3,5	;RP0=0, select bank0
  1422  0138  1303               	bcf	3,6	;RP1=0, select bank0
  1423  0139  00BC               	movwf	concat@b
  1424  013A  1683               	bsf	3,5	;RP0=1, select bank1
  1425  013B  1303               	bcf	3,6	;RP1=0, select bank1
  1426  013C  082D               	movf	(??_Text+3)^(0+128),w
  1427  013D  1283               	bcf	3,5	;RP0=0, select bank0
  1428  013E  1303               	bcf	3,6	;RP1=0, select bank0
  1429  013F  00BD               	movwf	concat@b+1
  1430  0140  120A  118A  255F  120A  118A  	fcall	_concat
  1431  0145  1283               	bcf	3,5	;RP0=0, select bank0
  1432  0146  1303               	bcf	3,6	;RP1=0, select bank0
  1433  0147  083B               	movf	?_concat+1,w
  1434  0148  1683               	bsf	3,5	;RP0=1, select bank1
  1435  0149  1303               	bcf	3,6	;RP1=0, select bank1
  1436  014A  00A1               	movwf	(_full+1)^(0+128)
  1437  014B  1283               	bcf	3,5	;RP0=0, select bank0
  1438  014C  1303               	bcf	3,6	;RP1=0, select bank0
  1439  014D  083A               	movf	?_concat,w
  1440  014E  1683               	bsf	3,5	;RP0=1, select bank1
  1441  014F  1303               	bcf	3,6	;RP1=0, select bank1
  1442  0150  00A0               	movwf	_full^(0+128)
  1443  0151                     l2028:
  1444                           
  1445                           ;D2_main5.c: 460:       _delay((unsigned long)((250)*(4000000/4000.0)));
  1446  0151  3002               	movlw	2
  1447  0152  1683               	bsf	3,5	;RP0=1, select bank1
  1448  0153  1303               	bcf	3,6	;RP1=0, select bank1
  1449  0154  00AC               	movwf	(??_Text^(0+128)+2)
  1450  0155  3045               	movlw	69
  1451  0156  00AB               	movwf	(??_Text^(0+128)+1)
  1452  0157  30A9               	movlw	169
  1453  0158  00AA               	movwf	??_Text^(0+128)
  1454  0159                     u1857:
  1455  0159  0BAA               	decfsz	??_Text^(0+128),f
  1456  015A  2959               	goto	u1857
  1457  015B  0BAB               	decfsz	(??_Text^(0+128)+1),f
  1458  015C  2959               	goto	u1857
  1459  015D  0BAC               	decfsz	(??_Text^(0+128)+2),f
  1460  015E  2959               	goto	u1857
  1461  015F                     l2030:
  1462                           
  1463                           ;D2_main5.c: 461:     printf("El numero elegido es: %d \r", full);
  1464  015F  1683               	bsf	3,5	;RP0=1, select bank1
  1465  0160  1303               	bcf	3,6	;RP1=0, select bank1
  1466  0161  0821               	movf	(_full+1)^(0+128),w
  1467  0162  1283               	bcf	3,5	;RP0=0, select bank0
  1468  0163  1303               	bcf	3,6	;RP1=0, select bank0
  1469  0164  00B2               	movwf	?_printf+1
  1470  0165  1683               	bsf	3,5	;RP0=1, select bank1
  1471  0166  1303               	bcf	3,6	;RP1=0, select bank1
  1472  0167  0820               	movf	_full^(0+128),w
  1473  0168  1283               	bcf	3,5	;RP0=0, select bank0
  1474  0169  1303               	bcf	3,6	;RP1=0, select bank0
  1475  016A  00B1               	movwf	?_printf
  1476  016B  300B               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  1477  016C  120A  118A  2672  120A  118A  	fcall	_printf
  1478                           
  1479                           ;D2_main5.c: 462:     select = full;
  1480  0171  1683               	bsf	3,5	;RP0=1, select bank1
  1481  0172  1303               	bcf	3,6	;RP1=0, select bank1
  1482  0173  0821               	movf	(_full+1)^(0+128),w
  1483  0174  00A3               	movwf	(_select+1)^(0+128)
  1484  0175  0820               	movf	_full^(0+128),w
  1485  0176  00A2               	movwf	_select^(0+128)
  1486  0177                     l145:
  1487  0177  0008               	return
  1488  0178                     __end_of_Text:
  1489                           
  1490                           	psect	text3
  1491  0672                     __ptext3:	
  1492 ;; *************** function _printf *****************
  1493 ;; Defined at:
  1494 ;;		line 13 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\printf.c"
  1495 ;; Parameters:    Size  Location     Type
  1496 ;;  f               1    wreg     PTR const unsigned char 
  1497 ;;		 -> STR_6(27), STR_5(21), STR_4(20), STR_3(20), 
  1498 ;;		 -> STR_2(2), STR_1(21), 
  1499 ;; Auto vars:     Size  Location     Type
  1500 ;;  f               1   22[BANK0 ] PTR const unsigned char 
  1501 ;;		 -> STR_6(27), STR_5(21), STR_4(20), STR_3(20), 
  1502 ;;		 -> STR_2(2), STR_1(21), 
  1503 ;;  pb              2   23[BANK0 ] struct __prbuf
  1504 ;;  ap              1   21[BANK0 ] PTR void [1]
  1505 ;;		 -> ?_sprintf(2), ?_printf(2), 
  1506 ;; Return value:  Size  Location     Type
  1507 ;;                  2   17[BANK0 ] int 
  1508 ;; Registers used:
  1509 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1510 ;; Tracked objects:
  1511 ;;		On entry : 0/0
  1512 ;;		On exit  : 0/0
  1513 ;;		Unchanged: 0/0
  1514 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1515 ;;      Params:         0       2       0       0       0
  1516 ;;      Locals:         0       4       0       0       0
  1517 ;;      Temps:          0       2       0       0       0
  1518 ;;      Totals:         0       8       0       0       0
  1519 ;;Total ram usage:        8 bytes
  1520 ;; Hardware stack levels used:    1
  1521 ;; Hardware stack levels required when called:    3
  1522 ;; This function calls:
  1523 ;;		__doprnt
  1524 ;; This function is called by:
  1525 ;;		_Text
  1526 ;; This function uses a non-reentrant model
  1527 ;;
  1528                           
  1529                           
  1530                           ;psect for function _printf
  1531  0672                     _printf:
  1532                           
  1533                           ;incstack = 0
  1534                           ; Regs used in _printf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1535                           ;printf@f stored from wreg
  1536  0672  1283               	bcf	3,5	;RP0=0, select bank0
  1537  0673  1303               	bcf	3,6	;RP1=0, select bank0
  1538  0674  00B6               	movwf	printf@f
  1539  0675                     l1960:
  1540  0675  01B7               	clrf	printf@pb
  1541  0676                     l1962:
  1542  0676  3001               	movlw	(low (fp__putch-fpbase))& (0+255)
  1543  0677  00B3               	movwf	??_printf
  1544  0678  0833               	movf	??_printf,w
  1545  0679  00B8               	movwf	low ((printf@pb| 0+1))
  1546  067A                     l1964:
  1547  067A  3031               	movlw	(low (?_printf| 0))& (0+255)
  1548  067B  00B3               	movwf	??_printf
  1549  067C  0833               	movf	??_printf,w
  1550  067D  00B5               	movwf	printf@ap
  1551  067E                     l1966:
  1552                           
  1553                           ;	Return value of _printf is never used
  1554  067E  0836               	movf	printf@f,w
  1555  067F  00B3               	movwf	??_printf
  1556  0680  0833               	movf	??_printf,w
  1557  0681  00A6               	movwf	__doprnt@f
  1558  0682  3035               	movlw	(low (printf@ap| 0))& (0+255)
  1559  0683  00B4               	movwf	??_printf+1
  1560  0684  0834               	movf	??_printf+1,w
  1561  0685  00A7               	movwf	__doprnt@ap
  1562  0686  3037               	movlw	(low (printf@pb| 0))& (0+255)
  1563  0687  120A  118A  2178  120A  118A  	fcall	__doprnt
  1564  068C                     l720:
  1565  068C  0008               	return
  1566  068D                     __end_of_printf:
  1567                           
  1568                           	psect	text4
  1569  03B1                     __ptext4:	
  1570 ;; *************** function _division *****************
  1571 ;; Defined at:
  1572 ;;		line 465 in file "D2_main5.c"
  1573 ;; Parameters:    Size  Location     Type
  1574 ;;  valor           1    wreg     unsigned char 
  1575 ;; Auto vars:     Size  Location     Type
  1576 ;;  valor           1    9[COMMON] unsigned char 
  1577 ;; Return value:  Size  Location     Type
  1578 ;;                  1    wreg      unsigned char 
  1579 ;; Registers used:
  1580 ;;		wreg, status,2, status,0, pclath, cstack
  1581 ;; Tracked objects:
  1582 ;;		On entry : 0/0
  1583 ;;		On exit  : 0/0
  1584 ;;		Unchanged: 0/0
  1585 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1586 ;;      Params:         0       0       0       0       0
  1587 ;;      Locals:         1       0       0       0       0
  1588 ;;      Temps:          0       3       0       0       0
  1589 ;;      Totals:         1       3       0       0       0
  1590 ;;Total ram usage:        4 bytes
  1591 ;; Hardware stack levels used:    1
  1592 ;; Hardware stack levels required when called:    2
  1593 ;; This function calls:
  1594 ;;		___awdiv
  1595 ;;		___awmod
  1596 ;; This function is called by:
  1597 ;;		_Text
  1598 ;; This function uses a non-reentrant model
  1599 ;;
  1600                           
  1601                           
  1602                           ;psect for function _division
  1603  03B1                     _division:
  1604                           
  1605                           ;incstack = 0
  1606                           ; Regs used in _division: [wreg+status,2+status,0+pclath+cstack]
  1607                           ;division@valor stored from wreg
  1608  03B1  00F9               	movwf	division@valor
  1609  03B2                     l1952:
  1610                           
  1611                           ;D2_main5.c: 466:     hundreds = valor/100;
  1612  03B2  3064               	movlw	100
  1613  03B3  00F2               	movwf	___awdiv@divisor
  1614  03B4  3000               	movlw	0
  1615  03B5  00F3               	movwf	___awdiv@divisor+1
  1616  03B6  0879               	movf	division@valor,w
  1617  03B7  1283               	bcf	3,5	;RP0=0, select bank0
  1618  03B8  1303               	bcf	3,6	;RP1=0, select bank0
  1619  03B9  00A4               	movwf	??_division
  1620  03BA  01A5               	clrf	??_division+1
  1621  03BB  0824               	movf	??_division,w
  1622  03BC  00F4               	movwf	___awdiv@dividend
  1623  03BD  0825               	movf	??_division+1,w
  1624  03BE  00F5               	movwf	___awdiv@dividend+1
  1625  03BF  120A  118A  241C  120A  118A  	fcall	___awdiv
  1626  03C4  0872               	movf	?___awdiv,w
  1627  03C5  1283               	bcf	3,5	;RP0=0, select bank0
  1628  03C6  1303               	bcf	3,6	;RP1=0, select bank0
  1629  03C7  00A6               	movwf	??_division+2
  1630  03C8  0826               	movf	??_division+2,w
  1631  03C9  00EC               	movwf	_hundreds
  1632                           
  1633                           ;D2_main5.c: 467:     residuo = valor%100;
  1634  03CA  3064               	movlw	100
  1635  03CB  00F2               	movwf	___awmod@divisor
  1636  03CC  3000               	movlw	0
  1637  03CD  00F3               	movwf	___awmod@divisor+1
  1638  03CE  0879               	movf	division@valor,w
  1639  03CF  00A4               	movwf	??_division
  1640  03D0  01A5               	clrf	??_division+1
  1641  03D1  0824               	movf	??_division,w
  1642  03D2  00F4               	movwf	___awmod@dividend
  1643  03D3  0825               	movf	??_division+1,w
  1644  03D4  00F5               	movwf	___awmod@dividend+1
  1645  03D5  120A  118A  2485  120A  118A  	fcall	___awmod
  1646  03DA  0872               	movf	?___awmod,w
  1647  03DB  1283               	bcf	3,5	;RP0=0, select bank0
  1648  03DC  1303               	bcf	3,6	;RP1=0, select bank0
  1649  03DD  00A6               	movwf	??_division+2
  1650  03DE  0826               	movf	??_division+2,w
  1651  03DF  00FB               	movwf	_residuo
  1652                           
  1653                           ;D2_main5.c: 468:     tens = residuo/10;
  1654  03E0  300A               	movlw	10
  1655  03E1  00F2               	movwf	___awdiv@divisor
  1656  03E2  3000               	movlw	0
  1657  03E3  00F3               	movwf	___awdiv@divisor+1
  1658  03E4  087B               	movf	_residuo,w
  1659  03E5  00A4               	movwf	??_division
  1660  03E6  01A5               	clrf	??_division+1
  1661  03E7  0824               	movf	??_division,w
  1662  03E8  00F4               	movwf	___awdiv@dividend
  1663  03E9  0825               	movf	??_division+1,w
  1664  03EA  00F5               	movwf	___awdiv@dividend+1
  1665  03EB  120A  118A  241C  120A  118A  	fcall	___awdiv
  1666  03F0  0872               	movf	?___awdiv,w
  1667  03F1  1283               	bcf	3,5	;RP0=0, select bank0
  1668  03F2  1303               	bcf	3,6	;RP1=0, select bank0
  1669  03F3  00A6               	movwf	??_division+2
  1670  03F4  0826               	movf	??_division+2,w
  1671  03F5  00EB               	movwf	_tens
  1672                           
  1673                           ;D2_main5.c: 469:     units = residuo%10;
  1674  03F6  300A               	movlw	10
  1675  03F7  00F2               	movwf	___awmod@divisor
  1676  03F8  3000               	movlw	0
  1677  03F9  00F3               	movwf	___awmod@divisor+1
  1678  03FA  087B               	movf	_residuo,w
  1679  03FB  00A4               	movwf	??_division
  1680  03FC  01A5               	clrf	??_division+1
  1681  03FD  0824               	movf	??_division,w
  1682  03FE  00F4               	movwf	___awmod@dividend
  1683  03FF  0825               	movf	??_division+1,w
  1684  0400  00F5               	movwf	___awmod@dividend+1
  1685  0401  120A  118A  2485  120A  118A  	fcall	___awmod
  1686  0406  0872               	movf	?___awmod,w
  1687  0407  1283               	bcf	3,5	;RP0=0, select bank0
  1688  0408  1303               	bcf	3,6	;RP1=0, select bank0
  1689  0409  00A6               	movwf	??_division+2
  1690  040A  0826               	movf	??_division+2,w
  1691  040B  00EA               	movwf	_units
  1692  040C                     l1954:
  1693                           
  1694                           ;D2_main5.c: 471:     hundreds = hundreds + 48;
  1695  040C  086C               	movf	_hundreds,w
  1696  040D  3E30               	addlw	48
  1697  040E  00A4               	movwf	??_division
  1698  040F  0824               	movf	??_division,w
  1699  0410  00EC               	movwf	_hundreds
  1700  0411                     l1956:
  1701                           
  1702                           ;D2_main5.c: 472:     tens = tens + 48;
  1703  0411  086B               	movf	_tens,w
  1704  0412  3E30               	addlw	48
  1705  0413  00A4               	movwf	??_division
  1706  0414  0824               	movf	??_division,w
  1707  0415  00EB               	movwf	_tens
  1708  0416                     l1958:
  1709                           
  1710                           ;D2_main5.c: 473:     units = units + 48;
  1711  0416  086A               	movf	_units,w
  1712  0417  3E30               	addlw	48
  1713  0418  00A4               	movwf	??_division
  1714  0419  0824               	movf	??_division,w
  1715  041A  00EA               	movwf	_units
  1716  041B                     l148:
  1717  041B  0008               	return
  1718  041C                     __end_of_division:
  1719                           
  1720                           	psect	text5
  1721  0485                     __ptext5:	
  1722 ;; *************** function ___awmod *****************
  1723 ;; Defined at:
  1724 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awmod.c"
  1725 ;; Parameters:    Size  Location     Type
  1726 ;;  divisor         2    2[COMMON] int 
  1727 ;;  dividend        2    4[COMMON] int 
  1728 ;; Auto vars:     Size  Location     Type
  1729 ;;  sign            1    8[COMMON] unsigned char 
  1730 ;;  counter         1    7[COMMON] unsigned char 
  1731 ;; Return value:  Size  Location     Type
  1732 ;;                  2    2[COMMON] int 
  1733 ;; Registers used:
  1734 ;;		wreg, status,2, status,0
  1735 ;; Tracked objects:
  1736 ;;		On entry : 0/0
  1737 ;;		On exit  : 0/0
  1738 ;;		Unchanged: 0/0
  1739 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1740 ;;      Params:         4       0       0       0       0
  1741 ;;      Locals:         2       0       0       0       0
  1742 ;;      Temps:          1       0       0       0       0
  1743 ;;      Totals:         7       0       0       0       0
  1744 ;;Total ram usage:        7 bytes
  1745 ;; Hardware stack levels used:    1
  1746 ;; Hardware stack levels required when called:    1
  1747 ;; This function calls:
  1748 ;;		Nothing
  1749 ;; This function is called by:
  1750 ;;		_division
  1751 ;; This function uses a non-reentrant model
  1752 ;;
  1753                           
  1754                           
  1755                           ;psect for function ___awmod
  1756  0485                     ___awmod:
  1757  0485                     l1552:	
  1758                           ;incstack = 0
  1759                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  1760                           
  1761  0485  01F8               	clrf	___awmod@sign
  1762  0486                     l1554:
  1763  0486  1FF5               	btfss	___awmod@dividend+1,7
  1764  0487  2C89               	goto	u1181
  1765  0488  2C8A               	goto	u1180
  1766  0489                     u1181:
  1767  0489  2C91               	goto	l1560
  1768  048A                     u1180:
  1769  048A                     l1556:
  1770  048A  09F4               	comf	___awmod@dividend,f
  1771  048B  09F5               	comf	___awmod@dividend+1,f
  1772  048C  0AF4               	incf	___awmod@dividend,f
  1773  048D  1903               	skipnz
  1774  048E  0AF5               	incf	___awmod@dividend+1,f
  1775  048F                     l1558:
  1776  048F  01F8               	clrf	___awmod@sign
  1777  0490  0AF8               	incf	___awmod@sign,f
  1778  0491                     l1560:
  1779  0491  1FF3               	btfss	___awmod@divisor+1,7
  1780  0492  2C94               	goto	u1191
  1781  0493  2C95               	goto	u1190
  1782  0494                     u1191:
  1783  0494  2C9A               	goto	l1564
  1784  0495                     u1190:
  1785  0495                     l1562:
  1786  0495  09F2               	comf	___awmod@divisor,f
  1787  0496  09F3               	comf	___awmod@divisor+1,f
  1788  0497  0AF2               	incf	___awmod@divisor,f
  1789  0498  1903               	skipnz
  1790  0499  0AF3               	incf	___awmod@divisor+1,f
  1791  049A                     l1564:
  1792  049A  0872               	movf	___awmod@divisor,w
  1793  049B  0473               	iorwf	___awmod@divisor+1,w
  1794  049C  1903               	btfsc	3,2
  1795  049D  2C9F               	goto	u1201
  1796  049E  2CA0               	goto	u1200
  1797  049F                     u1201:
  1798  049F  2CCF               	goto	l1582
  1799  04A0                     u1200:
  1800  04A0                     l1566:
  1801  04A0  01F7               	clrf	___awmod@counter
  1802  04A1  0AF7               	incf	___awmod@counter,f
  1803  04A2  2CAE               	goto	l1572
  1804  04A3                     l1568:
  1805  04A3  3001               	movlw	1
  1806  04A4                     u1215:
  1807  04A4  1003               	clrc
  1808  04A5  0DF2               	rlf	___awmod@divisor,f
  1809  04A6  0DF3               	rlf	___awmod@divisor+1,f
  1810  04A7  3EFF               	addlw	-1
  1811  04A8  1D03               	skipz
  1812  04A9  2CA4               	goto	u1215
  1813  04AA                     l1570:
  1814  04AA  3001               	movlw	1
  1815  04AB  00F6               	movwf	??___awmod
  1816  04AC  0876               	movf	??___awmod,w
  1817  04AD  07F7               	addwf	___awmod@counter,f
  1818  04AE                     l1572:
  1819  04AE  1FF3               	btfss	___awmod@divisor+1,7
  1820  04AF  2CB1               	goto	u1221
  1821  04B0  2CB2               	goto	u1220
  1822  04B1                     u1221:
  1823  04B1  2CA3               	goto	l1568
  1824  04B2                     u1220:
  1825  04B2                     l1574:
  1826  04B2  0873               	movf	___awmod@divisor+1,w
  1827  04B3  0275               	subwf	___awmod@dividend+1,w
  1828  04B4  1D03               	skipz
  1829  04B5  2CB8               	goto	u1235
  1830  04B6  0872               	movf	___awmod@divisor,w
  1831  04B7  0274               	subwf	___awmod@dividend,w
  1832  04B8                     u1235:
  1833  04B8  1C03               	skipc
  1834  04B9  2CBB               	goto	u1231
  1835  04BA  2CBC               	goto	u1230
  1836  04BB                     u1231:
  1837  04BB  2CC2               	goto	l1578
  1838  04BC                     u1230:
  1839  04BC                     l1576:
  1840  04BC  0872               	movf	___awmod@divisor,w
  1841  04BD  02F4               	subwf	___awmod@dividend,f
  1842  04BE  0873               	movf	___awmod@divisor+1,w
  1843  04BF  1C03               	skipc
  1844  04C0  03F5               	decf	___awmod@dividend+1,f
  1845  04C1  02F5               	subwf	___awmod@dividend+1,f
  1846  04C2                     l1578:
  1847  04C2  3001               	movlw	1
  1848  04C3                     u1245:
  1849  04C3  1003               	clrc
  1850  04C4  0CF3               	rrf	___awmod@divisor+1,f
  1851  04C5  0CF2               	rrf	___awmod@divisor,f
  1852  04C6  3EFF               	addlw	-1
  1853  04C7  1D03               	skipz
  1854  04C8  2CC3               	goto	u1245
  1855  04C9                     l1580:
  1856  04C9  3001               	movlw	1
  1857  04CA  02F7               	subwf	___awmod@counter,f
  1858  04CB  1D03               	btfss	3,2
  1859  04CC  2CCE               	goto	u1251
  1860  04CD  2CCF               	goto	u1250
  1861  04CE                     u1251:
  1862  04CE  2CB2               	goto	l1574
  1863  04CF                     u1250:
  1864  04CF                     l1582:
  1865  04CF  0878               	movf	___awmod@sign,w
  1866  04D0  1903               	btfsc	3,2
  1867  04D1  2CD3               	goto	u1261
  1868  04D2  2CD4               	goto	u1260
  1869  04D3                     u1261:
  1870  04D3  2CD9               	goto	l1586
  1871  04D4                     u1260:
  1872  04D4                     l1584:
  1873  04D4  09F4               	comf	___awmod@dividend,f
  1874  04D5  09F5               	comf	___awmod@dividend+1,f
  1875  04D6  0AF4               	incf	___awmod@dividend,f
  1876  04D7  1903               	skipnz
  1877  04D8  0AF5               	incf	___awmod@dividend+1,f
  1878  04D9                     l1586:
  1879  04D9  0875               	movf	___awmod@dividend+1,w
  1880  04DA  00F3               	movwf	?___awmod+1
  1881  04DB  0874               	movf	___awmod@dividend,w
  1882  04DC  00F2               	movwf	?___awmod
  1883  04DD                     l409:
  1884  04DD  0008               	return
  1885  04DE                     __end_of___awmod:
  1886                           
  1887                           	psect	text6
  1888  041C                     __ptext6:	
  1889 ;; *************** function ___awdiv *****************
  1890 ;; Defined at:
  1891 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
  1892 ;; Parameters:    Size  Location     Type
  1893 ;;  divisor         2    2[COMMON] int 
  1894 ;;  dividend        2    4[COMMON] int 
  1895 ;; Auto vars:     Size  Location     Type
  1896 ;;  quotient        2    2[BANK0 ] int 
  1897 ;;  sign            1    1[BANK0 ] unsigned char 
  1898 ;;  counter         1    0[BANK0 ] unsigned char 
  1899 ;; Return value:  Size  Location     Type
  1900 ;;                  2    2[COMMON] int 
  1901 ;; Registers used:
  1902 ;;		wreg, status,2, status,0
  1903 ;; Tracked objects:
  1904 ;;		On entry : 0/0
  1905 ;;		On exit  : 0/0
  1906 ;;		Unchanged: 0/0
  1907 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1908 ;;      Params:         4       0       0       0       0
  1909 ;;      Locals:         0       4       0       0       0
  1910 ;;      Temps:          1       0       0       0       0
  1911 ;;      Totals:         5       4       0       0       0
  1912 ;;Total ram usage:        9 bytes
  1913 ;; Hardware stack levels used:    1
  1914 ;; Hardware stack levels required when called:    1
  1915 ;; This function calls:
  1916 ;;		Nothing
  1917 ;; This function is called by:
  1918 ;;		_division
  1919 ;; This function uses a non-reentrant model
  1920 ;;
  1921                           
  1922                           
  1923                           ;psect for function ___awdiv
  1924  041C                     ___awdiv:
  1925  041C                     l1908:	
  1926                           ;incstack = 0
  1927                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  1928                           
  1929  041C  1283               	bcf	3,5	;RP0=0, select bank0
  1930  041D  1303               	bcf	3,6	;RP1=0, select bank0
  1931  041E  01A1               	clrf	___awdiv@sign
  1932  041F                     l1910:
  1933  041F  1FF3               	btfss	___awdiv@divisor+1,7
  1934  0420  2C22               	goto	u1611
  1935  0421  2C23               	goto	u1610
  1936  0422                     u1611:
  1937  0422  2C2A               	goto	l1916
  1938  0423                     u1610:
  1939  0423                     l1912:
  1940  0423  09F2               	comf	___awdiv@divisor,f
  1941  0424  09F3               	comf	___awdiv@divisor+1,f
  1942  0425  0AF2               	incf	___awdiv@divisor,f
  1943  0426  1903               	skipnz
  1944  0427  0AF3               	incf	___awdiv@divisor+1,f
  1945  0428                     l1914:
  1946  0428  01A1               	clrf	___awdiv@sign
  1947  0429  0AA1               	incf	___awdiv@sign,f
  1948  042A                     l1916:
  1949  042A  1FF5               	btfss	___awdiv@dividend+1,7
  1950  042B  2C2D               	goto	u1621
  1951  042C  2C2E               	goto	u1620
  1952  042D                     u1621:
  1953  042D  2C37               	goto	l1922
  1954  042E                     u1620:
  1955  042E                     l1918:
  1956  042E  09F4               	comf	___awdiv@dividend,f
  1957  042F  09F5               	comf	___awdiv@dividend+1,f
  1958  0430  0AF4               	incf	___awdiv@dividend,f
  1959  0431  1903               	skipnz
  1960  0432  0AF5               	incf	___awdiv@dividend+1,f
  1961  0433                     l1920:
  1962  0433  3001               	movlw	1
  1963  0434  00F6               	movwf	??___awdiv
  1964  0435  0876               	movf	??___awdiv,w
  1965  0436  06A1               	xorwf	___awdiv@sign,f
  1966  0437                     l1922:
  1967  0437  01A2               	clrf	___awdiv@quotient
  1968  0438  01A3               	clrf	___awdiv@quotient+1
  1969  0439                     l1924:
  1970  0439  0872               	movf	___awdiv@divisor,w
  1971  043A  0473               	iorwf	___awdiv@divisor+1,w
  1972  043B  1903               	btfsc	3,2
  1973  043C  2C3E               	goto	u1631
  1974  043D  2C3F               	goto	u1630
  1975  043E                     u1631:
  1976  043E  2C76               	goto	l1944
  1977  043F                     u1630:
  1978  043F                     l1926:
  1979  043F  01A0               	clrf	___awdiv@counter
  1980  0440  0AA0               	incf	___awdiv@counter,f
  1981  0441  2C4D               	goto	l1932
  1982  0442                     l1928:
  1983  0442  3001               	movlw	1
  1984  0443                     u1645:
  1985  0443  1003               	clrc
  1986  0444  0DF2               	rlf	___awdiv@divisor,f
  1987  0445  0DF3               	rlf	___awdiv@divisor+1,f
  1988  0446  3EFF               	addlw	-1
  1989  0447  1D03               	skipz
  1990  0448  2C43               	goto	u1645
  1991  0449                     l1930:
  1992  0449  3001               	movlw	1
  1993  044A  00F6               	movwf	??___awdiv
  1994  044B  0876               	movf	??___awdiv,w
  1995  044C  07A0               	addwf	___awdiv@counter,f
  1996  044D                     l1932:
  1997  044D  1FF3               	btfss	___awdiv@divisor+1,7
  1998  044E  2C50               	goto	u1651
  1999  044F  2C51               	goto	u1650
  2000  0450                     u1651:
  2001  0450  2C42               	goto	l1928
  2002  0451                     u1650:
  2003  0451                     l1934:
  2004  0451  3001               	movlw	1
  2005  0452                     u1665:
  2006  0452  1003               	clrc
  2007  0453  0DA2               	rlf	___awdiv@quotient,f
  2008  0454  0DA3               	rlf	___awdiv@quotient+1,f
  2009  0455  3EFF               	addlw	-1
  2010  0456  1D03               	skipz
  2011  0457  2C52               	goto	u1665
  2012  0458  0873               	movf	___awdiv@divisor+1,w
  2013  0459  0275               	subwf	___awdiv@dividend+1,w
  2014  045A  1D03               	skipz
  2015  045B  2C5E               	goto	u1675
  2016  045C  0872               	movf	___awdiv@divisor,w
  2017  045D  0274               	subwf	___awdiv@dividend,w
  2018  045E                     u1675:
  2019  045E  1C03               	skipc
  2020  045F  2C61               	goto	u1671
  2021  0460  2C62               	goto	u1670
  2022  0461                     u1671:
  2023  0461  2C69               	goto	l1940
  2024  0462                     u1670:
  2025  0462                     l1936:
  2026  0462  0872               	movf	___awdiv@divisor,w
  2027  0463  02F4               	subwf	___awdiv@dividend,f
  2028  0464  0873               	movf	___awdiv@divisor+1,w
  2029  0465  1C03               	skipc
  2030  0466  03F5               	decf	___awdiv@dividend+1,f
  2031  0467  02F5               	subwf	___awdiv@dividend+1,f
  2032  0468                     l1938:
  2033  0468  1422               	bsf	___awdiv@quotient,0
  2034  0469                     l1940:
  2035  0469  3001               	movlw	1
  2036  046A                     u1685:
  2037  046A  1003               	clrc
  2038  046B  0CF3               	rrf	___awdiv@divisor+1,f
  2039  046C  0CF2               	rrf	___awdiv@divisor,f
  2040  046D  3EFF               	addlw	-1
  2041  046E  1D03               	skipz
  2042  046F  2C6A               	goto	u1685
  2043  0470                     l1942:
  2044  0470  3001               	movlw	1
  2045  0471  02A0               	subwf	___awdiv@counter,f
  2046  0472  1D03               	btfss	3,2
  2047  0473  2C75               	goto	u1691
  2048  0474  2C76               	goto	u1690
  2049  0475                     u1691:
  2050  0475  2C51               	goto	l1934
  2051  0476                     u1690:
  2052  0476                     l1944:
  2053  0476  0821               	movf	___awdiv@sign,w
  2054  0477  1903               	btfsc	3,2
  2055  0478  2C7A               	goto	u1701
  2056  0479  2C7B               	goto	u1700
  2057  047A                     u1701:
  2058  047A  2C80               	goto	l1948
  2059  047B                     u1700:
  2060  047B                     l1946:
  2061  047B  09A2               	comf	___awdiv@quotient,f
  2062  047C  09A3               	comf	___awdiv@quotient+1,f
  2063  047D  0AA2               	incf	___awdiv@quotient,f
  2064  047E  1903               	skipnz
  2065  047F  0AA3               	incf	___awdiv@quotient+1,f
  2066  0480                     l1948:
  2067  0480  0823               	movf	___awdiv@quotient+1,w
  2068  0481  00F3               	movwf	?___awdiv+1
  2069  0482  0822               	movf	___awdiv@quotient,w
  2070  0483  00F2               	movwf	?___awdiv
  2071  0484                     l396:
  2072  0484  0008               	return
  2073  0485                     __end_of___awdiv:
  2074                           
  2075                           	psect	text7
  2076  055F                     __ptext7:	
  2077 ;; *************** function _concat *****************
  2078 ;; Defined at:
  2079 ;;		line 476 in file "D2_main5.c"
  2080 ;; Parameters:    Size  Location     Type
  2081 ;;  a               2   26[BANK0 ] int 
  2082 ;;  b               2   28[BANK0 ] int 
  2083 ;; Auto vars:     Size  Location     Type
  2084 ;;  s1             20   51[BANK0 ] unsigned char [20]
  2085 ;;  s2             20   31[BANK0 ] unsigned char [20]
  2086 ;;  c               2   71[BANK0 ] int 
  2087 ;; Return value:  Size  Location     Type
  2088 ;;                  2   26[BANK0 ] int 
  2089 ;; Registers used:
  2090 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2091 ;; Tracked objects:
  2092 ;;		On entry : 0/0
  2093 ;;		On exit  : 0/0
  2094 ;;		Unchanged: 0/0
  2095 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2096 ;;      Params:         0       4       0       0       0
  2097 ;;      Locals:         0      42       0       0       0
  2098 ;;      Temps:          0       1       0       0       0
  2099 ;;      Totals:         0      47       0       0       0
  2100 ;;Total ram usage:       47 bytes
  2101 ;; Hardware stack levels used:    1
  2102 ;; Hardware stack levels required when called:    4
  2103 ;; This function calls:
  2104 ;;		_atoi
  2105 ;;		_sprintf
  2106 ;;		_strcat
  2107 ;; This function is called by:
  2108 ;;		_Text
  2109 ;; This function uses a non-reentrant model
  2110 ;;
  2111                           
  2112                           
  2113                           ;psect for function _concat
  2114  055F                     _concat:
  2115  055F                     l1970:	
  2116                           ;incstack = 0
  2117                           ; Regs used in _concat: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2118                           
  2119                           
  2120                           ;D2_main5.c: 476: int concat(int a, int b);D2_main5.c: 477: {;D2_main5.c: 479:     char 
      +                          s1[20];;D2_main5.c: 480:     char s2[20];;D2_main5.c: 484:     sprintf(s1, "%d", a);
  2121  055F  3078               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
  2122  0560  1283               	bcf	3,5	;RP0=0, select bank0
  2123  0561  1303               	bcf	3,6	;RP1=0, select bank0
  2124  0562  00BE               	movwf	??_concat
  2125  0563  083E               	movf	??_concat,w
  2126  0564  00B1               	movwf	sprintf@f
  2127  0565  083B               	movf	concat@a+1,w
  2128  0566  00B3               	movwf	?_sprintf+2
  2129  0567  083A               	movf	concat@a,w
  2130  0568  00B2               	movwf	?_sprintf+1
  2131  0569  3053               	movlw	(low (concat@s1| 0))& (0+255)
  2132  056A  120A  118A  2651  120A  118A  	fcall	_sprintf
  2133                           
  2134                           ;D2_main5.c: 485:     sprintf(s2, "%d", b);
  2135  056F  3078               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
  2136  0570  1283               	bcf	3,5	;RP0=0, select bank0
  2137  0571  1303               	bcf	3,6	;RP1=0, select bank0
  2138  0572  00BE               	movwf	??_concat
  2139  0573  083E               	movf	??_concat,w
  2140  0574  00B1               	movwf	sprintf@f
  2141  0575  083D               	movf	concat@b+1,w
  2142  0576  00B3               	movwf	?_sprintf+2
  2143  0577  083C               	movf	concat@b,w
  2144  0578  00B2               	movwf	?_sprintf+1
  2145  0579  303F               	movlw	(low (concat@s2| 0))& (0+255)
  2146  057A  120A  118A  2651  120A  118A  	fcall	_sprintf
  2147  057F                     l1972:
  2148                           
  2149                           ;D2_main5.c: 489:     strcat(s1, s2);
  2150  057F  303F               	movlw	(low (concat@s2| 0))& (0+255)
  2151  0580  1283               	bcf	3,5	;RP0=0, select bank0
  2152  0581  1303               	bcf	3,6	;RP1=0, select bank0
  2153  0582  00BE               	movwf	??_concat
  2154  0583  083E               	movf	??_concat,w
  2155  0584  00F2               	movwf	strcat@from
  2156  0585  3053               	movlw	(low (concat@s1| 0))& (0+255)
  2157  0586  120A  118A  2603  120A  118A  	fcall	_strcat
  2158  058B                     l1974:
  2159                           
  2160                           ;D2_main5.c: 493:     int c = atoi(s1);
  2161  058B  3053               	movlw	(low (concat@s1| 0))& (0+255)
  2162  058C  120A  118A  22AE  120A  118A  	fcall	_atoi
  2163  0591  0879               	movf	?_atoi+1,w
  2164  0592  1283               	bcf	3,5	;RP0=0, select bank0
  2165  0593  1303               	bcf	3,6	;RP1=0, select bank0
  2166  0594  00E8               	movwf	concat@c+1
  2167  0595  0878               	movf	?_atoi,w
  2168  0596  00E7               	movwf	concat@c
  2169  0597                     l1976:
  2170                           
  2171                           ;D2_main5.c: 496:     return c;
  2172  0597  0868               	movf	concat@c+1,w
  2173  0598  00BB               	movwf	?_concat+1
  2174  0599  0867               	movf	concat@c,w
  2175  059A  00BA               	movwf	?_concat
  2176  059B                     l151:
  2177  059B  0008               	return
  2178  059C                     __end_of_concat:
  2179                           
  2180                           	psect	text8
  2181  0603                     __ptext8:	
  2182 ;; *************** function _strcat *****************
  2183 ;; Defined at:
  2184 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\strcat.c"
  2185 ;; Parameters:    Size  Location     Type
  2186 ;;  to              1    wreg     PTR unsigned char 
  2187 ;;		 -> concat@s1(20), 
  2188 ;;  from            1    2[COMMON] PTR const unsigned char 
  2189 ;;		 -> concat@s2(20), 
  2190 ;; Auto vars:     Size  Location     Type
  2191 ;;  to              1    4[COMMON] PTR unsigned char 
  2192 ;;		 -> concat@s1(20), 
  2193 ;;  cp              1    5[COMMON] PTR unsigned char 
  2194 ;;		 -> concat@s1(20), 
  2195 ;; Return value:  Size  Location     Type
  2196 ;;                  1    wreg      PTR unsigned char 
  2197 ;; Registers used:
  2198 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2199 ;; Tracked objects:
  2200 ;;		On entry : 0/0
  2201 ;;		On exit  : 0/0
  2202 ;;		Unchanged: 0/0
  2203 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2204 ;;      Params:         1       0       0       0       0
  2205 ;;      Locals:         2       0       0       0       0
  2206 ;;      Temps:          1       0       0       0       0
  2207 ;;      Totals:         4       0       0       0       0
  2208 ;;Total ram usage:        4 bytes
  2209 ;; Hardware stack levels used:    1
  2210 ;; Hardware stack levels required when called:    1
  2211 ;; This function calls:
  2212 ;;		Nothing
  2213 ;; This function is called by:
  2214 ;;		_concat
  2215 ;; This function uses a non-reentrant model
  2216 ;;
  2217                           
  2218                           
  2219                           ;psect for function _strcat
  2220  0603                     _strcat:
  2221                           
  2222                           ;incstack = 0
  2223                           ; Regs used in _strcat: [wreg-fsr0h+status,2+status,0]
  2224                           ;strcat@to stored from wreg
  2225  0603  00F4               	movwf	strcat@to
  2226  0604                     l1464:
  2227  0604  0874               	movf	strcat@to,w
  2228  0605  00F3               	movwf	??_strcat
  2229  0606  0873               	movf	??_strcat,w
  2230  0607  00F5               	movwf	strcat@cp
  2231  0608  2E0D               	goto	l1468
  2232  0609                     l1466:
  2233  0609  3001               	movlw	1
  2234  060A  00F3               	movwf	??_strcat
  2235  060B  0873               	movf	??_strcat,w
  2236  060C  07F5               	addwf	strcat@cp,f
  2237  060D                     l1468:
  2238  060D  0875               	movf	strcat@cp,w
  2239  060E  0084               	movwf	4
  2240  060F  1383               	bcf	3,7	;select IRP bank0
  2241  0610  0800               	movf	0,w
  2242  0611  1D03               	btfss	3,2
  2243  0612  2E14               	goto	u1001
  2244  0613  2E15               	goto	u1000
  2245  0614                     u1001:
  2246  0614  2E09               	goto	l1466
  2247  0615                     u1000:
  2248  0615  2E1E               	goto	l1472
  2249  0616                     l1470:
  2250  0616  3001               	movlw	1
  2251  0617  00F3               	movwf	??_strcat
  2252  0618  0873               	movf	??_strcat,w
  2253  0619  07F5               	addwf	strcat@cp,f
  2254  061A  3001               	movlw	1
  2255  061B  00F3               	movwf	??_strcat
  2256  061C  0873               	movf	??_strcat,w
  2257  061D  07F2               	addwf	strcat@from,f
  2258  061E                     l1472:
  2259  061E  0872               	movf	strcat@from,w
  2260  061F  0084               	movwf	4
  2261  0620  0800               	movf	0,w
  2262  0621  00F3               	movwf	??_strcat
  2263  0622  0875               	movf	strcat@cp,w
  2264  0623  0084               	movwf	4
  2265  0624  0873               	movf	??_strcat,w
  2266  0625  0080               	movwf	0
  2267  0626  0800               	movf	0,w
  2268  0627  1D03               	btfss	3,2
  2269  0628  2E2A               	goto	u1011
  2270  0629  2E2B               	goto	u1010
  2271  062A                     u1011:
  2272  062A  2E16               	goto	l1470
  2273  062B                     u1010:
  2274  062B                     l774:
  2275  062B  0008               	return
  2276  062C                     __end_of_strcat:
  2277                           
  2278                           	psect	text9
  2279  0651                     __ptext9:	
  2280 ;; *************** function _sprintf *****************
  2281 ;; Defined at:
  2282 ;;		line 13 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprintf.c"
  2283 ;; Parameters:    Size  Location     Type
  2284 ;;  wh              1    wreg     PTR unsigned char 
  2285 ;;		 -> concat@s2(20), concat@s1(20), 
  2286 ;;  f               1   17[BANK0 ] PTR const unsigned char 
  2287 ;;		 -> STR_8(3), STR_7(3), 
  2288 ;; Auto vars:     Size  Location     Type
  2289 ;;  wh              1   22[BANK0 ] PTR unsigned char 
  2290 ;;		 -> concat@s2(20), concat@s1(20), 
  2291 ;;  pb              2   24[BANK0 ] struct __prbuf
  2292 ;;  ap              1   23[BANK0 ] PTR void [1]
  2293 ;;		 -> ?_sprintf(2), ?_printf(2), 
  2294 ;; Return value:  Size  Location     Type
  2295 ;;                  2   17[BANK0 ] int 
  2296 ;; Registers used:
  2297 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2298 ;; Tracked objects:
  2299 ;;		On entry : 0/0
  2300 ;;		On exit  : 0/0
  2301 ;;		Unchanged: 0/0
  2302 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2303 ;;      Params:         0       3       0       0       0
  2304 ;;      Locals:         0       4       0       0       0
  2305 ;;      Temps:          0       2       0       0       0
  2306 ;;      Totals:         0       9       0       0       0
  2307 ;;Total ram usage:        9 bytes
  2308 ;; Hardware stack levels used:    1
  2309 ;; Hardware stack levels required when called:    3
  2310 ;; This function calls:
  2311 ;;		__doprnt
  2312 ;; This function is called by:
  2313 ;;		_concat
  2314 ;; This function uses a non-reentrant model
  2315 ;;
  2316                           
  2317                           
  2318                           ;psect for function _sprintf
  2319  0651                     _sprintf:
  2320                           
  2321                           ;incstack = 0
  2322                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2323                           ;sprintf@wh stored from wreg
  2324  0651  1283               	bcf	3,5	;RP0=0, select bank0
  2325  0652  1303               	bcf	3,6	;RP1=0, select bank0
  2326  0653  00B6               	movwf	sprintf@wh
  2327  0654                     l1862:
  2328  0654  0836               	movf	sprintf@wh,w
  2329  0655  00B4               	movwf	??_sprintf
  2330  0656  0834               	movf	??_sprintf,w
  2331  0657  00B8               	movwf	sprintf@pb
  2332  0658                     l1864:
  2333  0658  01B9               	clrf	low ((sprintf@pb| 0+1))
  2334  0659                     l1866:
  2335  0659  3032               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  2336  065A  00B4               	movwf	??_sprintf
  2337  065B  0834               	movf	??_sprintf,w
  2338  065C  00B7               	movwf	sprintf@ap
  2339  065D                     l1868:
  2340  065D  0831               	movf	sprintf@f,w
  2341  065E  00B4               	movwf	??_sprintf
  2342  065F  0834               	movf	??_sprintf,w
  2343  0660  00A6               	movwf	__doprnt@f
  2344  0661  3037               	movlw	(low (sprintf@ap| 0))& (0+255)
  2345  0662  00B5               	movwf	??_sprintf+1
  2346  0663  0835               	movf	??_sprintf+1,w
  2347  0664  00A7               	movwf	__doprnt@ap
  2348  0665  3038               	movlw	(low (sprintf@pb| 0))& (0+255)
  2349  0666  120A  118A  2178  120A  118A  	fcall	__doprnt
  2350  066B                     l1870:
  2351  066B  1283               	bcf	3,5	;RP0=0, select bank0
  2352  066C  1303               	bcf	3,6	;RP1=0, select bank0
  2353  066D  0838               	movf	sprintf@pb,w
  2354  066E  0084               	movwf	4
  2355  066F  1383               	bcf	3,7	;select IRP bank0
  2356  0670  0180               	clrf	0
  2357  0671                     l765:
  2358  0671  0008               	return
  2359  0672                     __end_of_sprintf:
  2360                           
  2361                           	psect	text10
  2362  0178                     __ptext10:	
  2363 ;; *************** function __doprnt *****************
  2364 ;; Defined at:
  2365 ;;		line 471 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  2366 ;; Parameters:    Size  Location     Type
  2367 ;;  pb              1    wreg     PTR struct __prbuf
  2368 ;;		 -> sprintf@pb(2), printf@pb(2), 
  2369 ;;  f               1    6[BANK0 ] PTR const unsigned char 
  2370 ;;		 -> STR_8(3), STR_7(3), STR_6(27), STR_5(21), 
  2371 ;;		 -> STR_4(20), STR_3(20), STR_2(2), STR_1(21), 
  2372 ;;  ap              1    7[BANK0 ] PTR PTR void 
  2373 ;;		 -> sprintf@ap(1), printf@ap(1), 
  2374 ;; Auto vars:     Size  Location     Type
  2375 ;;  pb              1   16[BANK0 ] PTR struct __prbuf
  2376 ;;		 -> sprintf@pb(2), printf@pb(2), 
  2377 ;;  tmpval          4    0        struct .
  2378 ;;  val             2   13[BANK0 ] unsigned int 
  2379 ;;  cp              2    0        PTR const unsigned char 
  2380 ;;  len             2    0        unsigned int 
  2381 ;;  c               1   15[BANK0 ] unsigned char 
  2382 ;;  prec            1   12[BANK0 ] char 
  2383 ;;  flag            1   11[BANK0 ] unsigned char 
  2384 ;; Return value:  Size  Location     Type
  2385 ;;                  2    6[BANK0 ] int 
  2386 ;; Registers used:
  2387 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2388 ;; Tracked objects:
  2389 ;;		On entry : 0/0
  2390 ;;		On exit  : 0/0
  2391 ;;		Unchanged: 0/0
  2392 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2393 ;;      Params:         0       2       0       0       0
  2394 ;;      Locals:         0       6       0       0       0
  2395 ;;      Temps:          0       3       0       0       0
  2396 ;;      Totals:         0      11       0       0       0
  2397 ;;Total ram usage:       11 bytes
  2398 ;; Hardware stack levels used:    1
  2399 ;; Hardware stack levels required when called:    2
  2400 ;; This function calls:
  2401 ;;		Absolute function
  2402 ;;		___lwdiv
  2403 ;;		___lwmod
  2404 ;;		_putch
  2405 ;; This function is called by:
  2406 ;;		_printf
  2407 ;;		_sprintf
  2408 ;; This function uses a non-reentrant model
  2409 ;;
  2410                           
  2411                           
  2412                           ;psect for function __doprnt
  2413  0178                     __doprnt:
  2414                           
  2415                           ;incstack = 0
  2416                           ; Regs used in __doprnt: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2417                           ;__doprnt@pb stored from wreg
  2418  0178  1283               	bcf	3,5	;RP0=0, select bank0
  2419  0179  1303               	bcf	3,6	;RP1=0, select bank0
  2420  017A  00B0               	movwf	__doprnt@pb
  2421  017B                     l1790:
  2422                           
  2423                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 471: _doprnt(stru
      +                          ct __prbuf * pb, register const char * f, register va_list ap);C:\Program Files\Microchi
      +                          p\xc8\v2.31\pic\sources\c90\common\doprnt.c: 472: {;C:\Program Files\Microchip\xc8\v2.31
      +                          \pic\sources\c90\common\doprnt.c: 512:  char c;;C:\Program Files\Microchip\xc8\v2.31\pic
      +                          \sources\c90\common\doprnt.c: 521:  signed char prec;;C:\Program Files\Microchip\xc8\v2.
      +                          31\pic\sources\c90\common\doprnt.c: 525:  unsigned char flag;;C:\Program Files\Microchip
      +                          \xc8\v2.31\pic\sources\c90\common\doprnt.c: 543:  } tmpval;
  2424  017B  2A97               	goto	l1852
  2425  017C                     l1792:
  2426                           
  2427                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  2428  017C  3025               	movlw	37
  2429  017D  062F               	xorwf	__doprnt@c,w
  2430  017E  1903               	btfsc	3,2
  2431  017F  2981               	goto	u1451
  2432  0180  2982               	goto	u1450
  2433  0181                     u1451:
  2434  0181  29A8               	goto	l1802
  2435  0182                     u1450:
  2436  0182                     l1794:
  2437  0182  0A30               	incf	__doprnt@pb,w
  2438  0183  0084               	movwf	4
  2439  0184  1383               	bcf	3,7	;select IRP bank0
  2440  0185  0800               	movf	0,w
  2441  0186  1903               	btfsc	3,2
  2442  0187  2989               	goto	u1461
  2443  0188  298A               	goto	u1460
  2444  0189                     u1461:
  2445  0189  2999               	goto	l1798
  2446  018A                     u1460:
  2447  018A                     l1796:
  2448  018A  082F               	movf	__doprnt@c,w
  2449  018B  00A8               	movwf	??__doprnt
  2450  018C  0828               	movf	??__doprnt,w
  2451  018D  00F2               	movwf	putch@data
  2452  018E  0A30               	incf	__doprnt@pb,w
  2453  018F  0084               	movwf	4
  2454  0190  0800               	movf	0,w
  2455  0191  120A  118A  2027  120A  118A  	fcall	fptable
  2456  0196  1283               	bcf	3,5	;RP0=0, select bank0
  2457  0197  1303               	bcf	3,6	;RP1=0, select bank0
  2458  0198  297B               	goto	l1790
  2459  0199                     l1798:
  2460  0199  082F               	movf	__doprnt@c,w
  2461  019A  00A8               	movwf	??__doprnt
  2462  019B  0830               	movf	__doprnt@pb,w
  2463  019C  0084               	movwf	4
  2464  019D  0800               	movf	0,w
  2465  019E  0084               	movwf	4
  2466  019F  0828               	movf	??__doprnt,w
  2467  01A0  0080               	movwf	0
  2468  01A1                     l1800:
  2469  01A1  3001               	movlw	1
  2470  01A2  00A8               	movwf	??__doprnt
  2471  01A3  0830               	movf	__doprnt@pb,w
  2472  01A4  0084               	movwf	4
  2473  01A5  0828               	movf	??__doprnt,w
  2474  01A6  0780               	addwf	0,f
  2475  01A7  297B               	goto	l1790
  2476  01A8                     l1802:
  2477                           
  2478                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  2479  01A8  01AB               	clrf	__doprnt@flag
  2480  01A9                     l1806:	
  2481                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 661:   switch(c =
      +                           *f++) {
  2482                           
  2483  01A9  3001               	movlw	1
  2484  01AA  07A6               	addwf	__doprnt@f,f
  2485  01AB  30FF               	movlw	-1
  2486  01AC  0726               	addwf	__doprnt@f,w
  2487  01AD  0084               	movwf	4
  2488  01AE  120A  118A  2331  120A  118A  	fcall	stringdir
  2489  01B3  00AF               	movwf	__doprnt@c
  2490  01B4  00A8               	movwf	??__doprnt
  2491  01B5  01A9               	clrf	??__doprnt+1
  2492                           
  2493                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2494                           ; Switch size 1, requested type "simple"
  2495                           ; Number of cases is 1, Range of values is 0 to 0
  2496                           ; switch strategies available:
  2497                           ; Name         Instructions Cycles
  2498                           ; simple_byte            4     3 (average)
  2499                           ; direct_byte           11     8 (fixed)
  2500                           ; jumptable            260     6 (fixed)
  2501                           ;	Chosen strategy is simple_byte
  2502  01B6  0829               	movf	??__doprnt+1,w
  2503  01B7  3A00               	xorlw	0	; case 0
  2504  01B8  1903               	skipnz
  2505  01B9  29BB               	goto	l2060
  2506  01BA  2A97               	goto	l1852
  2507  01BB                     l2060:
  2508                           
  2509                           ; Switch size 1, requested type "simple"
  2510                           ; Number of cases is 3, Range of values is 0 to 105
  2511                           ; switch strategies available:
  2512                           ; Name         Instructions Cycles
  2513                           ; simple_byte           10     6 (average)
  2514                           ; jumptable            260     6 (fixed)
  2515                           ;	Chosen strategy is simple_byte
  2516  01BB  0828               	movf	??__doprnt,w
  2517  01BC  3A00               	xorlw	0	; case 0
  2518  01BD  1903               	skipnz
  2519  01BE  2AAB               	goto	l1854
  2520  01BF  3A64               	xorlw	100	; case 100
  2521  01C0  1903               	skipnz
  2522  01C1  29C6               	goto	l1808
  2523  01C2  3A0D               	xorlw	13	; case 105
  2524  01C3  1903               	skipnz
  2525  01C4  29C6               	goto	l1808
  2526  01C5  2A97               	goto	l1852
  2527  01C6                     l1808:
  2528                           
  2529                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1279:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned
      +                           int)(*(int *)__va_arg((*(int **)ap), (int)0));
  2530  01C6  0827               	movf	__doprnt@ap,w
  2531  01C7  0084               	movwf	4
  2532  01C8  1383               	bcf	3,7	;select IRP bank0
  2533  01C9  0800               	movf	0,w
  2534  01CA  00A8               	movwf	??__doprnt
  2535  01CB  3002               	movlw	2
  2536  01CC  0780               	addwf	0,f
  2537  01CD  0828               	movf	??__doprnt,w
  2538  01CE  0084               	movwf	4
  2539  01CF  0800               	movf	0,w
  2540  01D0  00AD               	movwf	__doprnt@val
  2541  01D1  0A84               	incf	4,f
  2542  01D2  0800               	movf	0,w
  2543  01D3  00AE               	movwf	__doprnt@val+1
  2544  01D4                     l1810:
  2545                           
  2546                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1287:    if((int)
      +                          val < 0) {
  2547  01D4  1FAE               	btfss	__doprnt@val+1,7
  2548  01D5  29D7               	goto	u1471
  2549  01D6  29D8               	goto	u1470
  2550  01D7                     u1471:
  2551  01D7  29E1               	goto	l1816
  2552  01D8                     u1470:
  2553  01D8                     l1812:
  2554                           
  2555                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1288:     flag |=
      +                           0x03;
  2556  01D8  3003               	movlw	3
  2557  01D9  00A8               	movwf	??__doprnt
  2558  01DA  0828               	movf	??__doprnt,w
  2559  01DB  04AB               	iorwf	__doprnt@flag,f
  2560  01DC                     l1814:
  2561                           
  2562                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1289:     val = -
      +                          val;
  2563  01DC  09AD               	comf	__doprnt@val,f
  2564  01DD  09AE               	comf	__doprnt@val+1,f
  2565  01DE  0AAD               	incf	__doprnt@val,f
  2566  01DF  1903               	skipnz
  2567  01E0  0AAE               	incf	__doprnt@val+1,f
  2568  01E1                     l1816:
  2569                           
  2570                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1292:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1331:    for(c = 1 ; c !=
      +                           sizeof dpowers/sizeof dpowers[0] ; c++)
  2571  01E1  01AF               	clrf	__doprnt@c
  2572  01E2  0AAF               	incf	__doprnt@c,f
  2573  01E3                     l1822:
  2574                           
  2575                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  2576  01E3  082F               	movf	__doprnt@c,w
  2577  01E4  00A8               	movwf	??__doprnt
  2578  01E5  0728               	addwf	??__doprnt,w
  2579  01E6  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2580  01E7  0084               	movwf	4
  2581  01E8  120A  118A  2331  120A  118A  	fcall	stringdir
  2582  01ED  00A9               	movwf	??__doprnt+1
  2583  01EE  120A  118A  2331  120A  118A  	fcall	stringdir
  2584  01F3  00AA               	movwf	??__doprnt+2
  2585  01F4  082A               	movf	??__doprnt+2,w
  2586  01F5  022E               	subwf	__doprnt@val+1,w
  2587  01F6  1D03               	skipz
  2588  01F7  29FA               	goto	u1485
  2589  01F8  0829               	movf	??__doprnt+1,w
  2590  01F9  022D               	subwf	__doprnt@val,w
  2591  01FA                     u1485:
  2592  01FA  1803               	skipnc
  2593  01FB  29FD               	goto	u1481
  2594  01FC  29FE               	goto	u1480
  2595  01FD                     u1481:
  2596  01FD  29FF               	goto	l1826
  2597  01FE                     u1480:
  2598  01FE  2A09               	goto	l1828
  2599  01FF                     l1826:
  2600  01FF  3001               	movlw	1
  2601  0200  00A8               	movwf	??__doprnt
  2602  0201  0828               	movf	??__doprnt,w
  2603  0202  07AF               	addwf	__doprnt@c,f
  2604  0203  3005               	movlw	5
  2605  0204  062F               	xorwf	__doprnt@c,w
  2606  0205  1D03               	btfss	3,2
  2607  0206  2A08               	goto	u1491
  2608  0207  2A09               	goto	u1490
  2609  0208                     u1491:
  2610  0208  29E3               	goto	l1822
  2611  0209                     u1490:
  2612  0209                     l1828:
  2613                           
  2614                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1464:    if(flag & 0x03)
  2615  0209  082B               	movf	__doprnt@flag,w
  2616  020A  3903               	andlw	3
  2617  020B  1903               	btfsc	3,2
  2618  020C  2A0E               	goto	u1501
  2619  020D  2A0F               	goto	u1500
  2620  020E                     u1501:
  2621  020E  2A32               	goto	l1838
  2622  020F                     u1500:
  2623  020F                     l1830:
  2624  020F  0A30               	incf	__doprnt@pb,w
  2625  0210  0084               	movwf	4
  2626  0211  1383               	bcf	3,7	;select IRP bank0
  2627  0212  0800               	movf	0,w
  2628  0213  1903               	btfsc	3,2
  2629  0214  2A16               	goto	u1511
  2630  0215  2A17               	goto	u1510
  2631  0216                     u1511:
  2632  0216  2A24               	goto	l1834
  2633  0217                     u1510:
  2634  0217                     l1832:
  2635  0217  302D               	movlw	45
  2636  0218  00A8               	movwf	??__doprnt
  2637  0219  0828               	movf	??__doprnt,w
  2638  021A  00F2               	movwf	putch@data
  2639  021B  0A30               	incf	__doprnt@pb,w
  2640  021C  0084               	movwf	4
  2641  021D  0800               	movf	0,w
  2642  021E  120A  118A  2027  120A  118A  	fcall	fptable
  2643  0223  2A32               	goto	l1838
  2644  0224                     l1834:
  2645  0224  302D               	movlw	45
  2646  0225  00A8               	movwf	??__doprnt
  2647  0226  0830               	movf	__doprnt@pb,w
  2648  0227  0084               	movwf	4
  2649  0228  0800               	movf	0,w
  2650  0229  0084               	movwf	4
  2651  022A  0828               	movf	??__doprnt,w
  2652  022B  0080               	movwf	0
  2653  022C                     l1836:
  2654  022C  3001               	movlw	1
  2655  022D  00A8               	movwf	??__doprnt
  2656  022E  0830               	movf	__doprnt@pb,w
  2657  022F  0084               	movwf	4
  2658  0230  0828               	movf	??__doprnt,w
  2659  0231  0780               	addwf	0,f
  2660  0232                     l1838:
  2661                           
  2662                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1495:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
  2663  0232  1283               	bcf	3,5	;RP0=0, select bank0
  2664  0233  1303               	bcf	3,6	;RP1=0, select bank0
  2665  0234  082F               	movf	__doprnt@c,w
  2666  0235  00A8               	movwf	??__doprnt
  2667  0236  0828               	movf	??__doprnt,w
  2668  0237  00AC               	movwf	__doprnt@prec
  2669                           
  2670                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  2671  0238  2A8C               	goto	l1850
  2672  0239                     l1840:
  2673                           
  2674                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned char)prec]) % 10 + '0';
  2675  0239  300A               	movlw	10
  2676  023A  00A0               	movwf	___lwmod@divisor
  2677  023B  3000               	movlw	0
  2678  023C  00A1               	movwf	___lwmod@divisor+1
  2679  023D  082C               	movf	__doprnt@prec,w
  2680  023E  00A8               	movwf	??__doprnt
  2681  023F  0728               	addwf	??__doprnt,w
  2682  0240  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2683  0241  0084               	movwf	4
  2684  0242  120A  118A  2331  120A  118A  	fcall	stringdir
  2685  0247  00F2               	movwf	___lwdiv@divisor
  2686  0248  120A  118A  2331  120A  118A  	fcall	stringdir
  2687  024D  00F3               	movwf	___lwdiv@divisor+1
  2688  024E  082E               	movf	__doprnt@val+1,w
  2689  024F  00F5               	movwf	___lwdiv@dividend+1
  2690  0250  082D               	movf	__doprnt@val,w
  2691  0251  00F4               	movwf	___lwdiv@dividend
  2692  0252  120A  118A  24DE  120A  118A  	fcall	___lwdiv
  2693  0257  0873               	movf	?___lwdiv+1,w
  2694  0258  1283               	bcf	3,5	;RP0=0, select bank0
  2695  0259  1303               	bcf	3,6	;RP1=0, select bank0
  2696  025A  00A3               	movwf	___lwmod@dividend+1
  2697  025B  0872               	movf	?___lwdiv,w
  2698  025C  00A2               	movwf	___lwmod@dividend
  2699  025D  120A  118A  259C  120A  118A  	fcall	___lwmod
  2700  0262  1283               	bcf	3,5	;RP0=0, select bank0
  2701  0263  1303               	bcf	3,6	;RP1=0, select bank0
  2702  0264  0820               	movf	?___lwmod,w
  2703  0265  3E30               	addlw	48
  2704  0266  00A9               	movwf	??__doprnt+1
  2705  0267  0829               	movf	??__doprnt+1,w
  2706  0268  00AF               	movwf	__doprnt@c
  2707  0269                     l1842:
  2708  0269  0A30               	incf	__doprnt@pb,w
  2709  026A  0084               	movwf	4
  2710  026B  1383               	bcf	3,7	;select IRP bank0
  2711  026C  0800               	movf	0,w
  2712  026D  1903               	btfsc	3,2
  2713  026E  2A70               	goto	u1521
  2714  026F  2A71               	goto	u1520
  2715  0270                     u1521:
  2716  0270  2A7E               	goto	l1846
  2717  0271                     u1520:
  2718  0271                     l1844:
  2719  0271  082F               	movf	__doprnt@c,w
  2720  0272  00A8               	movwf	??__doprnt
  2721  0273  0828               	movf	??__doprnt,w
  2722  0274  00F2               	movwf	putch@data
  2723  0275  0A30               	incf	__doprnt@pb,w
  2724  0276  0084               	movwf	4
  2725  0277  0800               	movf	0,w
  2726  0278  120A  118A  2027  120A  118A  	fcall	fptable
  2727  027D  2A8C               	goto	l1850
  2728  027E                     l1846:
  2729  027E  082F               	movf	__doprnt@c,w
  2730  027F  00A8               	movwf	??__doprnt
  2731  0280  0830               	movf	__doprnt@pb,w
  2732  0281  0084               	movwf	4
  2733  0282  0800               	movf	0,w
  2734  0283  0084               	movwf	4
  2735  0284  0828               	movf	??__doprnt,w
  2736  0285  0080               	movwf	0
  2737  0286                     l1848:
  2738  0286  3001               	movlw	1
  2739  0287  00A8               	movwf	??__doprnt
  2740  0288  0830               	movf	__doprnt@pb,w
  2741  0289  0084               	movwf	4
  2742  028A  0828               	movf	??__doprnt,w
  2743  028B  0780               	addwf	0,f
  2744  028C                     l1850:
  2745                           
  2746                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  2747  028C  30FF               	movlw	255
  2748  028D  1283               	bcf	3,5	;RP0=0, select bank0
  2749  028E  1303               	bcf	3,6	;RP1=0, select bank0
  2750  028F  00A8               	movwf	??__doprnt
  2751  0290  0828               	movf	??__doprnt,w
  2752  0291  07AC               	addwf	__doprnt@prec,f
  2753  0292  0A2C               	incf	__doprnt@prec,w
  2754  0293  1D03               	btfss	3,2
  2755  0294  2A96               	goto	u1531
  2756  0295  2A97               	goto	u1530
  2757  0296                     u1531:
  2758  0296  2A39               	goto	l1840
  2759  0297                     u1530:
  2760  0297                     l1852:
  2761                           
  2762                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  2763  0297  3001               	movlw	1
  2764  0298  1283               	bcf	3,5	;RP0=0, select bank0
  2765  0299  1303               	bcf	3,6	;RP1=0, select bank0
  2766  029A  07A6               	addwf	__doprnt@f,f
  2767  029B  30FF               	movlw	-1
  2768  029C  0726               	addwf	__doprnt@f,w
  2769  029D  0084               	movwf	4
  2770  029E  120A  118A  2331  120A  118A  	fcall	stringdir
  2771  02A3  00A8               	movwf	??__doprnt
  2772  02A4  0828               	movf	??__doprnt,w
  2773  02A5  00AF               	movwf	__doprnt@c
  2774  02A6  082F               	movf	__doprnt@c,w
  2775  02A7  1D03               	btfss	3,2
  2776  02A8  2AAA               	goto	u1541
  2777  02A9  2AAB               	goto	u1540
  2778  02AA                     u1541:
  2779  02AA  297C               	goto	l1792
  2780  02AB                     u1540:
  2781  02AB                     l1854:
  2782                           
  2783                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1566:  return 0;
  2784  02AB  01A6               	clrf	?__doprnt
  2785  02AC  01A7               	clrf	?__doprnt+1
  2786  02AD                     l758:
  2787  02AD  0008               	return
  2788  02AE                     __end_of__doprnt:
  2789                           
  2790                           	psect	text11
  2791  06B9                     __ptext11:	
  2792 ;; *************** function _putch *****************
  2793 ;; Defined at:
  2794 ;;		line 499 in file "D2_main5.c"
  2795 ;; Parameters:    Size  Location     Type
  2796 ;;  data            1    2[COMMON] unsigned char 
  2797 ;; Auto vars:     Size  Location     Type
  2798 ;;		None
  2799 ;; Return value:  Size  Location     Type
  2800 ;;                  1    wreg      void 
  2801 ;; Registers used:
  2802 ;;		wreg
  2803 ;; Tracked objects:
  2804 ;;		On entry : 0/0
  2805 ;;		On exit  : 0/0
  2806 ;;		Unchanged: 0/0
  2807 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2808 ;;      Params:         1       0       0       0       0
  2809 ;;      Locals:         0       0       0       0       0
  2810 ;;      Temps:          0       0       0       0       0
  2811 ;;      Totals:         1       0       0       0       0
  2812 ;;Total ram usage:        1 bytes
  2813 ;; Hardware stack levels used:    1
  2814 ;; Hardware stack levels required when called:    1
  2815 ;; This function calls:
  2816 ;;		Nothing
  2817 ;; This function is called by:
  2818 ;;		_printf
  2819 ;;		__doprnt
  2820 ;; This function uses a non-reentrant model
  2821 ;;
  2822                           
  2823                           
  2824                           ;psect for function _putch
  2825  06B9                     _putch:
  2826  06B9                     l1300:	
  2827                           ;incstack = 0
  2828                           ; Regs used in _putch: [wreg]
  2829                           
  2830  06B9                     l154:	
  2831                           ;D2_main5.c: 500:     while(TXIF == 0);
  2832                           
  2833  06B9  1283               	bcf	3,5	;RP0=0, select bank0
  2834  06BA  1303               	bcf	3,6	;RP1=0, select bank0
  2835  06BB  1E0C               	btfss	12,4	;volatile
  2836  06BC  2EBE               	goto	u701
  2837  06BD  2EBF               	goto	u700
  2838  06BE                     u701:
  2839  06BE  2EB9               	goto	l154
  2840  06BF                     u700:
  2841  06BF                     l1302:
  2842                           
  2843                           ;D2_main5.c: 501:     TXREG = data;
  2844  06BF  0872               	movf	putch@data,w
  2845  06C0  0099               	movwf	25	;volatile
  2846  06C1                     l157:
  2847  06C1  0008               	return
  2848  06C2                     __end_of_putch:
  2849                           
  2850                           	psect	text12
  2851  059C                     __ptext12:	
  2852 ;; *************** function ___lwmod *****************
  2853 ;; Defined at:
  2854 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwmod.c"
  2855 ;; Parameters:    Size  Location     Type
  2856 ;;  divisor         2    0[BANK0 ] unsigned int 
  2857 ;;  dividend        2    2[BANK0 ] unsigned int 
  2858 ;; Auto vars:     Size  Location     Type
  2859 ;;  counter         1    5[BANK0 ] unsigned char 
  2860 ;; Return value:  Size  Location     Type
  2861 ;;                  2    0[BANK0 ] unsigned int 
  2862 ;; Registers used:
  2863 ;;		wreg, status,2, status,0
  2864 ;; Tracked objects:
  2865 ;;		On entry : 0/0
  2866 ;;		On exit  : 0/0
  2867 ;;		Unchanged: 0/0
  2868 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2869 ;;      Params:         0       4       0       0       0
  2870 ;;      Locals:         0       1       0       0       0
  2871 ;;      Temps:          0       1       0       0       0
  2872 ;;      Totals:         0       6       0       0       0
  2873 ;;Total ram usage:        6 bytes
  2874 ;; Hardware stack levels used:    1
  2875 ;; Hardware stack levels required when called:    1
  2876 ;; This function calls:
  2877 ;;		Nothing
  2878 ;; This function is called by:
  2879 ;;		__doprnt
  2880 ;; This function uses a non-reentrant model
  2881 ;;
  2882                           
  2883                           
  2884                           ;psect for function ___lwmod
  2885  059C                     ___lwmod:
  2886  059C                     l1768:	
  2887                           ;incstack = 0
  2888                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  2889                           
  2890  059C  1283               	bcf	3,5	;RP0=0, select bank0
  2891  059D  1303               	bcf	3,6	;RP1=0, select bank0
  2892  059E  0820               	movf	___lwmod@divisor,w
  2893  059F  0421               	iorwf	___lwmod@divisor+1,w
  2894  05A0  1903               	btfsc	3,2
  2895  05A1  2DA3               	goto	u1391
  2896  05A2  2DA4               	goto	u1390
  2897  05A3                     u1391:
  2898  05A3  2DD3               	goto	l1786
  2899  05A4                     u1390:
  2900  05A4                     l1770:
  2901  05A4  01A5               	clrf	___lwmod@counter
  2902  05A5  0AA5               	incf	___lwmod@counter,f
  2903  05A6  2DB2               	goto	l1776
  2904  05A7                     l1772:
  2905  05A7  3001               	movlw	1
  2906  05A8                     u1405:
  2907  05A8  1003               	clrc
  2908  05A9  0DA0               	rlf	___lwmod@divisor,f
  2909  05AA  0DA1               	rlf	___lwmod@divisor+1,f
  2910  05AB  3EFF               	addlw	-1
  2911  05AC  1D03               	skipz
  2912  05AD  2DA8               	goto	u1405
  2913  05AE                     l1774:
  2914  05AE  3001               	movlw	1
  2915  05AF  00A4               	movwf	??___lwmod
  2916  05B0  0824               	movf	??___lwmod,w
  2917  05B1  07A5               	addwf	___lwmod@counter,f
  2918  05B2                     l1776:
  2919  05B2  1FA1               	btfss	___lwmod@divisor+1,7
  2920  05B3  2DB5               	goto	u1411
  2921  05B4  2DB6               	goto	u1410
  2922  05B5                     u1411:
  2923  05B5  2DA7               	goto	l1772
  2924  05B6                     u1410:
  2925  05B6                     l1778:
  2926  05B6  0821               	movf	___lwmod@divisor+1,w
  2927  05B7  0223               	subwf	___lwmod@dividend+1,w
  2928  05B8  1D03               	skipz
  2929  05B9  2DBC               	goto	u1425
  2930  05BA  0820               	movf	___lwmod@divisor,w
  2931  05BB  0222               	subwf	___lwmod@dividend,w
  2932  05BC                     u1425:
  2933  05BC  1C03               	skipc
  2934  05BD  2DBF               	goto	u1421
  2935  05BE  2DC0               	goto	u1420
  2936  05BF                     u1421:
  2937  05BF  2DC6               	goto	l1782
  2938  05C0                     u1420:
  2939  05C0                     l1780:
  2940  05C0  0820               	movf	___lwmod@divisor,w
  2941  05C1  02A2               	subwf	___lwmod@dividend,f
  2942  05C2  0821               	movf	___lwmod@divisor+1,w
  2943  05C3  1C03               	skipc
  2944  05C4  03A3               	decf	___lwmod@dividend+1,f
  2945  05C5  02A3               	subwf	___lwmod@dividend+1,f
  2946  05C6                     l1782:
  2947  05C6  3001               	movlw	1
  2948  05C7                     u1435:
  2949  05C7  1003               	clrc
  2950  05C8  0CA1               	rrf	___lwmod@divisor+1,f
  2951  05C9  0CA0               	rrf	___lwmod@divisor,f
  2952  05CA  3EFF               	addlw	-1
  2953  05CB  1D03               	skipz
  2954  05CC  2DC7               	goto	u1435
  2955  05CD                     l1784:
  2956  05CD  3001               	movlw	1
  2957  05CE  02A5               	subwf	___lwmod@counter,f
  2958  05CF  1D03               	btfss	3,2
  2959  05D0  2DD2               	goto	u1441
  2960  05D1  2DD3               	goto	u1440
  2961  05D2                     u1441:
  2962  05D2  2DB6               	goto	l1778
  2963  05D3                     u1440:
  2964  05D3                     l1786:
  2965  05D3  0823               	movf	___lwmod@dividend+1,w
  2966  05D4  00A1               	movwf	?___lwmod+1
  2967  05D5  0822               	movf	___lwmod@dividend,w
  2968  05D6  00A0               	movwf	?___lwmod
  2969  05D7                     l525:
  2970  05D7  0008               	return
  2971  05D8                     __end_of___lwmod:
  2972                           
  2973                           	psect	text13
  2974  04DE                     __ptext13:	
  2975 ;; *************** function ___lwdiv *****************
  2976 ;; Defined at:
  2977 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwdiv.c"
  2978 ;; Parameters:    Size  Location     Type
  2979 ;;  divisor         2    2[COMMON] unsigned int 
  2980 ;;  dividend        2    4[COMMON] unsigned int 
  2981 ;; Auto vars:     Size  Location     Type
  2982 ;;  quotient        2    7[COMMON] unsigned int 
  2983 ;;  counter         1    9[COMMON] unsigned char 
  2984 ;; Return value:  Size  Location     Type
  2985 ;;                  2    2[COMMON] unsigned int 
  2986 ;; Registers used:
  2987 ;;		wreg, status,2, status,0
  2988 ;; Tracked objects:
  2989 ;;		On entry : 0/0
  2990 ;;		On exit  : 0/0
  2991 ;;		Unchanged: 0/0
  2992 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2993 ;;      Params:         4       0       0       0       0
  2994 ;;      Locals:         3       0       0       0       0
  2995 ;;      Temps:          1       0       0       0       0
  2996 ;;      Totals:         8       0       0       0       0
  2997 ;;Total ram usage:        8 bytes
  2998 ;; Hardware stack levels used:    1
  2999 ;; Hardware stack levels required when called:    1
  3000 ;; This function calls:
  3001 ;;		Nothing
  3002 ;; This function is called by:
  3003 ;;		__doprnt
  3004 ;; This function uses a non-reentrant model
  3005 ;;
  3006                           
  3007                           
  3008                           ;psect for function ___lwdiv
  3009  04DE                     ___lwdiv:
  3010  04DE                     l1306:	
  3011                           ;incstack = 0
  3012                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  3013                           
  3014  04DE  01F7               	clrf	___lwdiv@quotient
  3015  04DF  01F8               	clrf	___lwdiv@quotient+1
  3016  04E0                     l1308:
  3017  04E0  0872               	movf	___lwdiv@divisor,w
  3018  04E1  0473               	iorwf	___lwdiv@divisor+1,w
  3019  04E2  1903               	btfsc	3,2
  3020  04E3  2CE5               	goto	u711
  3021  04E4  2CE6               	goto	u710
  3022  04E5                     u711:
  3023  04E5  2D1D               	goto	l1328
  3024  04E6                     u710:
  3025  04E6                     l1310:
  3026  04E6  01F9               	clrf	___lwdiv@counter
  3027  04E7  0AF9               	incf	___lwdiv@counter,f
  3028  04E8  2CF4               	goto	l1316
  3029  04E9                     l1312:
  3030  04E9  3001               	movlw	1
  3031  04EA                     u725:
  3032  04EA  1003               	clrc
  3033  04EB  0DF2               	rlf	___lwdiv@divisor,f
  3034  04EC  0DF3               	rlf	___lwdiv@divisor+1,f
  3035  04ED  3EFF               	addlw	-1
  3036  04EE  1D03               	skipz
  3037  04EF  2CEA               	goto	u725
  3038  04F0                     l1314:
  3039  04F0  3001               	movlw	1
  3040  04F1  00F6               	movwf	??___lwdiv
  3041  04F2  0876               	movf	??___lwdiv,w
  3042  04F3  07F9               	addwf	___lwdiv@counter,f
  3043  04F4                     l1316:
  3044  04F4  1FF3               	btfss	___lwdiv@divisor+1,7
  3045  04F5  2CF7               	goto	u731
  3046  04F6  2CF8               	goto	u730
  3047  04F7                     u731:
  3048  04F7  2CE9               	goto	l1312
  3049  04F8                     u730:
  3050  04F8                     l1318:
  3051  04F8  3001               	movlw	1
  3052  04F9                     u745:
  3053  04F9  1003               	clrc
  3054  04FA  0DF7               	rlf	___lwdiv@quotient,f
  3055  04FB  0DF8               	rlf	___lwdiv@quotient+1,f
  3056  04FC  3EFF               	addlw	-1
  3057  04FD  1D03               	skipz
  3058  04FE  2CF9               	goto	u745
  3059  04FF  0873               	movf	___lwdiv@divisor+1,w
  3060  0500  0275               	subwf	___lwdiv@dividend+1,w
  3061  0501  1D03               	skipz
  3062  0502  2D05               	goto	u755
  3063  0503  0872               	movf	___lwdiv@divisor,w
  3064  0504  0274               	subwf	___lwdiv@dividend,w
  3065  0505                     u755:
  3066  0505  1C03               	skipc
  3067  0506  2D08               	goto	u751
  3068  0507  2D09               	goto	u750
  3069  0508                     u751:
  3070  0508  2D10               	goto	l1324
  3071  0509                     u750:
  3072  0509                     l1320:
  3073  0509  0872               	movf	___lwdiv@divisor,w
  3074  050A  02F4               	subwf	___lwdiv@dividend,f
  3075  050B  0873               	movf	___lwdiv@divisor+1,w
  3076  050C  1C03               	skipc
  3077  050D  03F5               	decf	___lwdiv@dividend+1,f
  3078  050E  02F5               	subwf	___lwdiv@dividend+1,f
  3079  050F                     l1322:
  3080  050F  1477               	bsf	___lwdiv@quotient,0
  3081  0510                     l1324:
  3082  0510  3001               	movlw	1
  3083  0511                     u765:
  3084  0511  1003               	clrc
  3085  0512  0CF3               	rrf	___lwdiv@divisor+1,f
  3086  0513  0CF2               	rrf	___lwdiv@divisor,f
  3087  0514  3EFF               	addlw	-1
  3088  0515  1D03               	skipz
  3089  0516  2D11               	goto	u765
  3090  0517                     l1326:
  3091  0517  3001               	movlw	1
  3092  0518  02F9               	subwf	___lwdiv@counter,f
  3093  0519  1D03               	btfss	3,2
  3094  051A  2D1C               	goto	u771
  3095  051B  2D1D               	goto	u770
  3096  051C                     u771:
  3097  051C  2CF8               	goto	l1318
  3098  051D                     u770:
  3099  051D                     l1328:
  3100  051D  0878               	movf	___lwdiv@quotient+1,w
  3101  051E  00F3               	movwf	?___lwdiv+1
  3102  051F  0877               	movf	___lwdiv@quotient,w
  3103  0520  00F2               	movwf	?___lwdiv
  3104  0521                     l515:
  3105  0521  0008               	return
  3106  0522                     __end_of___lwdiv:
  3107                           
  3108                           	psect	text14
  3109  02AE                     __ptext14:	
  3110 ;; *************** function _atoi *****************
  3111 ;; Defined at:
  3112 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\atoi.c"
  3113 ;; Parameters:    Size  Location     Type
  3114 ;;  s               1    wreg     PTR const unsigned char 
  3115 ;;		 -> concat@s1(20), 
  3116 ;; Auto vars:     Size  Location     Type
  3117 ;;  s               1    5[BANK0 ] PTR const unsigned char 
  3118 ;;		 -> concat@s1(20), 
  3119 ;;  a               2    3[BANK0 ] int 
  3120 ;;  sign            1    2[BANK0 ] unsigned char 
  3121 ;; Return value:  Size  Location     Type
  3122 ;;                  2    8[COMMON] int 
  3123 ;; Registers used:
  3124 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3125 ;; Tracked objects:
  3126 ;;		On entry : 0/0
  3127 ;;		On exit  : 0/0
  3128 ;;		Unchanged: 0/0
  3129 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3130 ;;      Params:         2       0       0       0       0
  3131 ;;      Locals:         0       4       0       0       0
  3132 ;;      Temps:          0       2       0       0       0
  3133 ;;      Totals:         2       6       0       0       0
  3134 ;;Total ram usage:        8 bytes
  3135 ;; Hardware stack levels used:    1
  3136 ;; Hardware stack levels required when called:    2
  3137 ;; This function calls:
  3138 ;;		___wmul
  3139 ;;		_isdigit
  3140 ;; This function is called by:
  3141 ;;		_concat
  3142 ;; This function uses a non-reentrant model
  3143 ;;
  3144                           
  3145                           
  3146                           ;psect for function _atoi
  3147  02AE                     _atoi:
  3148                           
  3149                           ;incstack = 0
  3150                           ; Regs used in _atoi: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3151                           ;atoi@s stored from wreg
  3152  02AE  1283               	bcf	3,5	;RP0=0, select bank0
  3153  02AF  1303               	bcf	3,6	;RP1=0, select bank0
  3154  02B0  00A5               	movwf	atoi@s
  3155  02B1                     l1874:
  3156  02B1  2AB6               	goto	l1878
  3157  02B2                     l1876:
  3158  02B2  3001               	movlw	1
  3159  02B3  00A0               	movwf	??_atoi
  3160  02B4  0820               	movf	??_atoi,w
  3161  02B5  07A5               	addwf	atoi@s,f
  3162  02B6                     l1878:
  3163  02B6  0825               	movf	atoi@s,w
  3164  02B7  0084               	movwf	4
  3165  02B8  3020               	movlw	32
  3166  02B9  1383               	bcf	3,7	;select IRP bank0
  3167  02BA  0600               	xorwf	0,w
  3168  02BB  1903               	btfsc	3,2
  3169  02BC  2ABE               	goto	u1551
  3170  02BD  2ABF               	goto	u1550
  3171  02BE                     u1551:
  3172  02BE  2AB2               	goto	l1876
  3173  02BF                     u1550:
  3174  02BF                     l1880:
  3175  02BF  0825               	movf	atoi@s,w
  3176  02C0  0084               	movwf	4
  3177  02C1  3009               	movlw	9
  3178  02C2  0600               	xorwf	0,w
  3179  02C3  1903               	btfsc	3,2
  3180  02C4  2AC6               	goto	u1561
  3181  02C5  2AC7               	goto	u1560
  3182  02C6                     u1561:
  3183  02C6  2AB2               	goto	l1876
  3184  02C7                     u1560:
  3185  02C7                     l1882:
  3186  02C7  01A3               	clrf	atoi@a
  3187  02C8  01A4               	clrf	atoi@a+1
  3188  02C9  01A2               	clrf	atoi@sign
  3189  02CA                     l1884:
  3190  02CA  0825               	movf	atoi@s,w
  3191  02CB  0084               	movwf	4
  3192  02CC  302D               	movlw	45
  3193  02CD  0600               	xorwf	0,w
  3194  02CE  1D03               	btfss	3,2
  3195  02CF  2AD1               	goto	u1571
  3196  02D0  2AD2               	goto	u1570
  3197  02D1                     u1571:
  3198  02D1  2ADB               	goto	l1888
  3199  02D2                     u1570:
  3200  02D2                     l1886:
  3201  02D2  3001               	movlw	1
  3202  02D3  00A0               	movwf	??_atoi
  3203  02D4  0820               	movf	??_atoi,w
  3204  02D5  07A2               	addwf	atoi@sign,f
  3205  02D6  3001               	movlw	1
  3206  02D7  00A0               	movwf	??_atoi
  3207  02D8  0820               	movf	??_atoi,w
  3208  02D9  07A5               	addwf	atoi@s,f
  3209  02DA  2B0D               	goto	l1896
  3210  02DB                     l1888:
  3211  02DB  0825               	movf	atoi@s,w
  3212  02DC  0084               	movwf	4
  3213  02DD  302B               	movlw	43
  3214  02DE  0600               	xorwf	0,w
  3215  02DF  1D03               	btfss	3,2
  3216  02E0  2AE2               	goto	u1581
  3217  02E1  2AE3               	goto	u1580
  3218  02E2                     u1581:
  3219  02E2  2B0D               	goto	l1896
  3220  02E3                     u1580:
  3221  02E3                     l1890:
  3222  02E3  3001               	movlw	1
  3223  02E4  00A0               	movwf	??_atoi
  3224  02E5  0820               	movf	??_atoi,w
  3225  02E6  07A5               	addwf	atoi@s,f
  3226  02E7  2B0D               	goto	l1896
  3227  02E8                     l1892:
  3228  02E8  1283               	bcf	3,5	;RP0=0, select bank0
  3229  02E9  1303               	bcf	3,6	;RP1=0, select bank0
  3230  02EA  0825               	movf	atoi@s,w
  3231  02EB  0084               	movwf	4
  3232  02EC  0824               	movf	atoi@a+1,w
  3233  02ED  00F3               	movwf	___wmul@multiplier+1
  3234  02EE  0823               	movf	atoi@a,w
  3235  02EF  00F2               	movwf	___wmul@multiplier
  3236  02F0  300A               	movlw	10
  3237  02F1  00F4               	movwf	___wmul@multiplicand
  3238  02F2  3000               	movlw	0
  3239  02F3  00F5               	movwf	___wmul@multiplicand+1
  3240  02F4  120A  118A  262C  120A  118A  	fcall	___wmul
  3241  02F9  1383               	bcf	3,7	;select IRP bank0
  3242  02FA  0800               	movf	0,w
  3243  02FB  0772               	addwf	?___wmul,w
  3244  02FC  1283               	bcf	3,5	;RP0=0, select bank0
  3245  02FD  1303               	bcf	3,6	;RP1=0, select bank0
  3246  02FE  00A0               	movwf	??_atoi
  3247  02FF  3000               	movlw	0
  3248  0300  1803               	skipnc
  3249  0301  3001               	movlw	1
  3250  0302  0773               	addwf	?___wmul+1,w
  3251  0303  00A1               	movwf	??_atoi+1
  3252  0304  0820               	movf	??_atoi,w
  3253  0305  3ED0               	addlw	208
  3254  0306  00A3               	movwf	atoi@a
  3255  0307  0821               	movf	??_atoi+1,w
  3256  0308  1803               	skipnc
  3257  0309  3E01               	addlw	1
  3258  030A  3EFF               	addlw	255
  3259  030B  00A4               	movwf	atoi@a+1
  3260  030C  2AE3               	goto	l1890
  3261  030D                     l1896:
  3262  030D  0825               	movf	atoi@s,w
  3263  030E  0084               	movwf	4
  3264  030F  0800               	movf	0,w
  3265  0310  120A  118A  26A7  120A  118A  	fcall	_isdigit
  3266  0315  1803               	btfsc	3,0
  3267  0316  2B18               	goto	u1591
  3268  0317  2B19               	goto	u1590
  3269  0318                     u1591:
  3270  0318  2AE8               	goto	l1892
  3271  0319                     u1590:
  3272  0319                     l1898:
  3273  0319  1283               	bcf	3,5	;RP0=0, select bank0
  3274  031A  1303               	bcf	3,6	;RP1=0, select bank0
  3275  031B  0822               	movf	atoi@sign,w
  3276  031C  1903               	btfsc	3,2
  3277  031D  2B1F               	goto	u1601
  3278  031E  2B20               	goto	u1600
  3279  031F                     u1601:
  3280  031F  2B2C               	goto	l1904
  3281  0320                     u1600:
  3282  0320                     l1900:
  3283  0320  0923               	comf	atoi@a,w
  3284  0321  00A0               	movwf	??_atoi
  3285  0322  0924               	comf	atoi@a+1,w
  3286  0323  00A1               	movwf	??_atoi+1
  3287  0324  0AA0               	incf	??_atoi,f
  3288  0325  1903               	skipnz
  3289  0326  0AA1               	incf	??_atoi+1,f
  3290  0327  0820               	movf	??_atoi,w
  3291  0328  00F8               	movwf	?_atoi
  3292  0329  0821               	movf	??_atoi+1,w
  3293  032A  00F9               	movwf	?_atoi+1
  3294  032B  2B30               	goto	l706
  3295  032C                     l1904:
  3296  032C  0824               	movf	atoi@a+1,w
  3297  032D  00F9               	movwf	?_atoi+1
  3298  032E  0823               	movf	atoi@a,w
  3299  032F  00F8               	movwf	?_atoi
  3300  0330                     l706:
  3301  0330  0008               	return
  3302  0331                     __end_of_atoi:
  3303                           
  3304                           	psect	text15
  3305  06A7                     __ptext15:	
  3306 ;; *************** function _isdigit *****************
  3307 ;; Defined at:
  3308 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\isdigit.c"
  3309 ;; Parameters:    Size  Location     Type
  3310 ;;  c               1    wreg     unsigned char 
  3311 ;; Auto vars:     Size  Location     Type
  3312 ;;  c               1    3[COMMON] unsigned char 
  3313 ;; Return value:  Size  Location     Type
  3314 ;;		None               void
  3315 ;; Registers used:
  3316 ;;		wreg, status,2, status,0
  3317 ;; Tracked objects:
  3318 ;;		On entry : 0/0
  3319 ;;		On exit  : 0/0
  3320 ;;		Unchanged: 0/0
  3321 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3322 ;;      Params:         0       0       0       0       0
  3323 ;;      Locals:         2       0       0       0       0
  3324 ;;      Temps:          0       0       0       0       0
  3325 ;;      Totals:         2       0       0       0       0
  3326 ;;Total ram usage:        2 bytes
  3327 ;; Hardware stack levels used:    1
  3328 ;; Hardware stack levels required when called:    1
  3329 ;; This function calls:
  3330 ;;		Nothing
  3331 ;; This function is called by:
  3332 ;;		_atoi
  3333 ;; This function uses a non-reentrant model
  3334 ;;
  3335                           
  3336                           
  3337                           ;psect for function _isdigit
  3338  06A7                     _isdigit:
  3339                           
  3340                           ;incstack = 0
  3341                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  3342                           ;isdigit@c stored from wreg
  3343  06A7  00F3               	movwf	isdigit@c
  3344  06A8                     l1368:
  3345  06A8  01F2               	clrf	_isdigit$934
  3346  06A9                     l1370:
  3347  06A9  303A               	movlw	58
  3348  06AA  0273               	subwf	isdigit@c,w
  3349  06AB  1803               	skipnc
  3350  06AC  2EAE               	goto	u881
  3351  06AD  2EAF               	goto	u880
  3352  06AE                     u881:
  3353  06AE  2EB7               	goto	l1376
  3354  06AF                     u880:
  3355  06AF                     l1372:
  3356  06AF  3030               	movlw	48
  3357  06B0  0273               	subwf	isdigit@c,w
  3358  06B1  1C03               	skipc
  3359  06B2  2EB4               	goto	u891
  3360  06B3  2EB5               	goto	u890
  3361  06B4                     u891:
  3362  06B4  2EB7               	goto	l1376
  3363  06B5                     u890:
  3364  06B5                     l1374:
  3365  06B5  01F2               	clrf	_isdigit$934
  3366  06B6  0AF2               	incf	_isdigit$934,f
  3367  06B7                     l1376:
  3368  06B7  0C72               	rrf	_isdigit$934,w
  3369  06B8                     l711:
  3370  06B8  0008               	return
  3371  06B9                     __end_of_isdigit:
  3372                           
  3373                           	psect	text16
  3374  062C                     __ptext16:	
  3375 ;; *************** function ___wmul *****************
  3376 ;; Defined at:
  3377 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul16.c"
  3378 ;; Parameters:    Size  Location     Type
  3379 ;;  multiplier      2    2[COMMON] unsigned int 
  3380 ;;  multiplicand    2    4[COMMON] unsigned int 
  3381 ;; Auto vars:     Size  Location     Type
  3382 ;;  product         2    6[COMMON] unsigned int 
  3383 ;; Return value:  Size  Location     Type
  3384 ;;                  2    2[COMMON] unsigned int 
  3385 ;; Registers used:
  3386 ;;		wreg, status,2, status,0
  3387 ;; Tracked objects:
  3388 ;;		On entry : 0/0
  3389 ;;		On exit  : 0/0
  3390 ;;		Unchanged: 0/0
  3391 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3392 ;;      Params:         4       0       0       0       0
  3393 ;;      Locals:         2       0       0       0       0
  3394 ;;      Temps:          0       0       0       0       0
  3395 ;;      Totals:         6       0       0       0       0
  3396 ;;Total ram usage:        6 bytes
  3397 ;; Hardware stack levels used:    1
  3398 ;; Hardware stack levels required when called:    1
  3399 ;; This function calls:
  3400 ;;		Nothing
  3401 ;; This function is called by:
  3402 ;;		_atoi
  3403 ;; This function uses a non-reentrant model
  3404 ;;
  3405                           
  3406                           
  3407                           ;psect for function ___wmul
  3408  062C                     ___wmul:
  3409  062C                     l1354:	
  3410                           ;incstack = 0
  3411                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  3412                           
  3413  062C  01F6               	clrf	___wmul@product
  3414  062D  01F7               	clrf	___wmul@product+1
  3415  062E                     l1356:
  3416  062E  1C72               	btfss	___wmul@multiplier,0
  3417  062F  2E31               	goto	u841
  3418  0630  2E32               	goto	u840
  3419  0631                     u841:
  3420  0631  2E38               	goto	l243
  3421  0632                     u840:
  3422  0632                     l1358:
  3423  0632  0874               	movf	___wmul@multiplicand,w
  3424  0633  07F6               	addwf	___wmul@product,f
  3425  0634  1803               	skipnc
  3426  0635  0AF7               	incf	___wmul@product+1,f
  3427  0636  0875               	movf	___wmul@multiplicand+1,w
  3428  0637  07F7               	addwf	___wmul@product+1,f
  3429  0638                     l243:
  3430  0638  3001               	movlw	1
  3431  0639                     u855:
  3432  0639  1003               	clrc
  3433  063A  0DF4               	rlf	___wmul@multiplicand,f
  3434  063B  0DF5               	rlf	___wmul@multiplicand+1,f
  3435  063C  3EFF               	addlw	-1
  3436  063D  1D03               	skipz
  3437  063E  2E39               	goto	u855
  3438  063F                     l1360:
  3439  063F  3001               	movlw	1
  3440  0640                     u865:
  3441  0640  1003               	clrc
  3442  0641  0CF3               	rrf	___wmul@multiplier+1,f
  3443  0642  0CF2               	rrf	___wmul@multiplier,f
  3444  0643  3EFF               	addlw	-1
  3445  0644  1D03               	skipz
  3446  0645  2E40               	goto	u865
  3447  0646                     l1362:
  3448  0646  0872               	movf	___wmul@multiplier,w
  3449  0647  0473               	iorwf	___wmul@multiplier+1,w
  3450  0648  1D03               	btfss	3,2
  3451  0649  2E4B               	goto	u871
  3452  064A  2E4C               	goto	u870
  3453  064B                     u871:
  3454  064B  2E2E               	goto	l1356
  3455  064C                     u870:
  3456  064C                     l1364:
  3457  064C  0877               	movf	___wmul@product+1,w
  3458  064D  00F3               	movwf	?___wmul+1
  3459  064E  0876               	movf	___wmul@product,w
  3460  064F  00F2               	movwf	?___wmul
  3461  0650                     l245:
  3462  0650  0008               	return
  3463  0651                     __end_of___wmul:
  3464                           
  3465                           	psect	text17
  3466  05D8                     __ptext17:	
  3467 ;; *************** function _isr *****************
  3468 ;; Defined at:
  3469 ;;		line 305 in file "D2_main5.c"
  3470 ;; Parameters:    Size  Location     Type
  3471 ;;		None
  3472 ;; Auto vars:     Size  Location     Type
  3473 ;;		None
  3474 ;; Return value:  Size  Location     Type
  3475 ;;                  1    wreg      void 
  3476 ;; Registers used:
  3477 ;;		wreg, status,2, status,0
  3478 ;; Tracked objects:
  3479 ;;		On entry : 0/0
  3480 ;;		On exit  : 0/0
  3481 ;;		Unchanged: 0/0
  3482 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3483 ;;      Params:         0       0       0       0       0
  3484 ;;      Locals:         0       0       0       0       0
  3485 ;;      Temps:          2       0       0       0       0
  3486 ;;      Totals:         2       0       0       0       0
  3487 ;;Total ram usage:        2 bytes
  3488 ;; Hardware stack levels used:    1
  3489 ;; This function calls:
  3490 ;;		Nothing
  3491 ;; This function is called by:
  3492 ;;		Interrupt level 1
  3493 ;; This function uses a non-reentrant model
  3494 ;;
  3495                           
  3496                           
  3497                           ;psect for function _isr
  3498  05D8                     _isr:
  3499  05D8                     i1l1728:
  3500                           
  3501                           ;D2_main5.c: 309:     if (RBIF == 1)
  3502  05D8  1C0B               	btfss	11,0	;volatile
  3503  05D9  2DDB               	goto	u136_21
  3504  05DA  2DDC               	goto	u136_20
  3505  05DB                     u136_21:
  3506  05DB  2DFC               	goto	i1l108
  3507  05DC                     u136_20:
  3508  05DC                     i1l1730:
  3509                           
  3510                           ;D2_main5.c: 310:     {;D2_main5.c: 311:         if (PORTBbits.RB0 == 0)
  3511  05DC  1283               	bcf	3,5	;RP0=0, select bank0
  3512  05DD  1303               	bcf	3,6	;RP1=0, select bank0
  3513  05DE  1806               	btfsc	6,0	;volatile
  3514  05DF  2DE1               	goto	u137_21
  3515  05E0  2DE2               	goto	u137_20
  3516  05E1                     u137_21:
  3517  05E1  2DEC               	goto	i1l1734
  3518  05E2                     u137_20:
  3519  05E2                     i1l1732:
  3520                           
  3521                           ;D2_main5.c: 312:         {;D2_main5.c: 313:             count = count + 1;
  3522  05E2  1683               	bsf	3,5	;RP0=1, select bank1
  3523  05E3  1303               	bcf	3,6	;RP1=0, select bank1
  3524  05E4  0824               	movf	_count^(0+128),w
  3525  05E5  3E01               	addlw	1
  3526  05E6  00A4               	movwf	_count^(0+128)
  3527  05E7  0825               	movf	(_count+1)^(0+128),w
  3528  05E8  1803               	skipnc
  3529  05E9  3E01               	addlw	1
  3530  05EA  3E00               	addlw	0
  3531  05EB  00A5               	movwf	(_count+1)^(0+128)
  3532  05EC                     i1l1734:
  3533                           
  3534                           ;D2_main5.c: 315:         if (PORTBbits.RB1 == 0)
  3535  05EC  1283               	bcf	3,5	;RP0=0, select bank0
  3536  05ED  1886               	btfsc	6,1	;volatile
  3537  05EE  2DF0               	goto	u138_21
  3538  05EF  2DF1               	goto	u138_20
  3539  05F0                     u138_21:
  3540  05F0  2DFB               	goto	i1l1738
  3541  05F1                     u138_20:
  3542  05F1                     i1l1736:
  3543                           
  3544                           ;D2_main5.c: 316:         {;D2_main5.c: 317:             count = count - 1;
  3545  05F1  1683               	bsf	3,5	;RP0=1, select bank1
  3546  05F2  1303               	bcf	3,6	;RP1=0, select bank1
  3547  05F3  0824               	movf	_count^(0+128),w
  3548  05F4  3EFF               	addlw	255
  3549  05F5  00A4               	movwf	_count^(0+128)
  3550  05F6  0825               	movf	(_count+1)^(0+128),w
  3551  05F7  1803               	skipnc
  3552  05F8  3E01               	addlw	1
  3553  05F9  3EFF               	addlw	255
  3554  05FA  00A5               	movwf	(_count+1)^(0+128)
  3555  05FB                     i1l1738:
  3556                           
  3557                           ;D2_main5.c: 319:         INTCONbits.RBIF = 0;
  3558  05FB  100B               	bcf	11,0	;volatile
  3559  05FC                     i1l108:
  3560  05FC  0871               	movf	??_isr+1,w
  3561  05FD  008A               	movwf	10
  3562  05FE  0E70               	swapf	??_isr,w
  3563  05FF  0083               	movwf	3
  3564  0600  0EFE               	swapf	btemp,f
  3565  0601  0E7E               	swapf	btemp,w
  3566  0602  0009               	retfie
  3567  0603                     __end_of_isr:
  3568  0002                     
  3569                           	psect	intentry
  3570  0004                     __pintentry:	
  3571                           ;incstack = 0
  3572                           ; Regs used in _isr: [wreg+status,2+status,0]
  3573                           
  3574  0004                     interrupt_function:
  3575  007E                     saved_w	set	btemp
  3576  0004  00FE               	movwf	btemp
  3577  0005  0E03               	swapf	3,w
  3578  0006  00F0               	movwf	??_isr
  3579  0007  080A               	movf	10,w
  3580  0008  00F1               	movwf	??_isr+1
  3581  0009  120A  118A  2DD8   	ljmp	_isr
  3582                           
  3583                           	psect	functab
  3584  0027                     __pfunctab:
  3585  0027                     __fptable:
  3586  0027                     fptable:
  3587  0027  00FF               	movwf	(btemp+1)& (0+127)
  3588  0028  3000               	movlw	high fptable
  3589  0029  008A               	movwf	10
  3590  002A  087F               	movf	(btemp+1)& (0+127),w
  3591  002B  0782               	addwf	2,f
  3592  002C                     fpbase:
  3593  002C  282C               	goto	fpbase	; Call via a null pointer and you will get stuck here.
  3594  002D                     fp__putch:
  3595  002D  120A  118A  2EB9   	ljmp	_putch
  3596  0030                     __end_of__fptable:
  3597  007E                     btemp	set	126	;btemp
  3598  007E                     wtemp0	set	126
  3599                           
  3600                           	psect	config
  3601                           
  3602                           ;Config register CONFIG1 @ 0x2007
  3603                           ;	Oscillator Selection bits
  3604                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  3605                           ;	Watchdog Timer Enable bit
  3606                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  3607                           ;	Power-up Timer Enable bit
  3608                           ;	PWRTE = OFF, PWRT disabled
  3609                           ;	RE3/MCLR pin function select bit
  3610                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  3611                           ;	Code Protection bit
  3612                           ;	CP = OFF, Program memory code protection is disabled
  3613                           ;	Data Code Protection bit
  3614                           ;	CPD = OFF, Data memory code protection is disabled
  3615                           ;	Brown Out Reset Selection bits
  3616                           ;	BOREN = OFF, BOR disabled
  3617                           ;	Internal External Switchover bit
  3618                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  3619                           ;	Fail-Safe Clock Monitor Enabled bit
  3620                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  3621                           ;	Low Voltage Programming Enable bit
  3622                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  3623                           ;	In-Circuit Debugger Mode bit
  3624                           ;	DEBUG = 0x1, unprogrammed default
  3625  2007                     	org	8199
  3626  2007  20D4               	dw	8404
  3627                           
  3628                           ;Config register CONFIG2 @ 0x2008
  3629                           ;	Brown-out Reset Selection bit
  3630                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  3631                           ;	Flash Program Memory Self Write Enable bits
  3632                           ;	WRT = OFF, Write protection off
  3633  2008                     	org	8200
  3634  2008  3FFF               	dw	16383

Data Sizes:
    Strings     112
    Constant    10
    Data        0
    BSS         16
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      12
    BANK0            80     73      77
    BANK1            80      5      15
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    strcat@from	PTR const unsigned char  size(1) Largest target is 20
		 -> concat@s2(BANK0[20]), 

    strcat@to	PTR unsigned char  size(1) Largest target is 20
		 -> concat@s1(BANK0[20]), 

    strcat@cp	PTR unsigned char  size(1) Largest target is 20
		 -> concat@s1(BANK0[20]), 

    sprintf@f	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_8(CODE[3]), STR_7(CODE[3]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), ?_printf(BANK0[2]), 

    sprintf@wh	PTR unsigned char  size(1) Largest target is 20
		 -> concat@s2(BANK0[20]), concat@s1(BANK0[20]), 

    pb.func	PTR FTN(unsigned char ,)void  size(1) Largest target is 1
		 -> Absolute function(), putch(), 

    pb.ptr	PTR unsigned char  size(1) Largest target is 20
		 -> NULL(NULL[0]), concat@s2(BANK0[20]), concat@s1(BANK0[20]), 

    _doprnt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), printf@ap(BANK0[1]), 

    _doprnt@f	PTR const unsigned char  size(1) Largest target is 27
		 -> STR_8(CODE[3]), STR_7(CODE[3]), STR_6(CODE[27]), STR_5(CODE[21]), 
		 -> STR_4(CODE[20]), STR_3(CODE[20]), STR_2(CODE[2]), STR_1(CODE[21]), 

    _doprnt@pb.func	PTR FTN(unsigned char ,)void  size(1) Largest target is 1
		 -> Absolute function(), putch(), 

    _doprnt@pb.ptr	PTR unsigned char  size(1) Largest target is 20
		 -> NULL(NULL[0]), concat@s2(BANK0[20]), concat@s1(BANK0[20]), 

    _doprnt@pb	PTR struct __prbuf size(1) Largest target is 3
		 -> sprintf@pb(BANK0[2]), printf@pb(BANK0[2]), 

    printf@f	PTR const unsigned char  size(1) Largest target is 27
		 -> STR_6(CODE[27]), STR_5(CODE[21]), STR_4(CODE[20]), STR_3(CODE[20]), 
		 -> STR_2(CODE[2]), STR_1(CODE[21]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), ?_printf(BANK0[2]), 

    S936__prbuf$func	PTR FTN(unsigned char ,)void  size(1) Largest target is 1
		 -> Absolute function(), putch(), 

    pb.func	PTR FTN(unsigned char ,)void  size(1) Largest target is 1
		 -> Absolute function(), putch(), 

    S936__prbuf$ptr	PTR unsigned char  size(1) Largest target is 20
		 -> NULL(NULL[0]), concat@s2(BANK0[20]), concat@s1(BANK0[20]), 

    pb.ptr	PTR unsigned char  size(1) Largest target is 20
		 -> NULL(NULL[0]), concat@s2(BANK0[20]), concat@s1(BANK0[20]), 

    atoi@s	PTR const unsigned char  size(1) Largest target is 20
		 -> concat@s1(BANK0[20]), 

    sp__strcat	PTR unsigned char  size(1) Largest target is 20
		 -> concat@s1(BANK0[20]), 


Critical Paths under _main in COMMON

    _Text->_division
    _division->___awmod
    _concat->_atoi
    __doprnt->___lwdiv
    ___lwmod->___lwdiv
    _atoi->___wmul

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _Text->_concat
    _printf->__doprnt
    _division->___awdiv
    _concat->_sprintf
    _sprintf->__doprnt
    __doprnt->___lwmod

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_Text

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    8623
                               _Text
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Text                                                 5     5      0    8623
                                              0 BANK1      5     5      0
                             _concat
                           _division
                             _printf
 ---------------------------------------------------------------------------------
 (2) _printf                                               8     6      2    2733
                                             17 BANK0      8     6      2
                            __doprnt
 ---------------------------------------------------------------------------------
 (2) _division                                             4     4      0    1467
                                              9 COMMON     1     1      0
                                              4 BANK0      3     3      0
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4     600
                                              2 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4     805
                                              2 COMMON     5     1      4
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (2) _concat                                              47    43      4    4423
                                             26 BANK0     47    43      4
                               _atoi
                            _sprintf
                             _strcat
 ---------------------------------------------------------------------------------
 (3) _strcat                                               4     3      1     207
                                              2 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (3) _sprintf                                              9     6      3    2845
                                             17 BANK0      9     6      3
                            __doprnt
 ---------------------------------------------------------------------------------
 (3) __doprnt                                             19    17      2    2330
                                              6 BANK0     11     9      2
                   Absolute function *
                            ___lwdiv
                            ___lwmod
                              _putch *
 ---------------------------------------------------------------------------------
 (4) _putch                                                1     0      1     181
                                              2 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              6     2      4     412
                                              0 BANK0      6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              8     4      4     314
                                              2 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (4) Absolute function(Fake)                               1     0      1       0
 ---------------------------------------------------------------------------------
 (3) _atoi                                                 8     6      2     682
                                              8 COMMON     2     0      2
                                              0 BANK0      6     6      0
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              2     2      0      68
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     244
                                              2 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _isr                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Text
     _concat
       _atoi
         ___wmul
         _isdigit
       _sprintf
         __doprnt
           Absolute function(Fake) *
           ___lwdiv *
           ___lwmod *
             ___lwdiv (ARG)
           _putch *
       _strcat
     _division
       ___awdiv
       ___awmod
     _printf
       __doprnt
         Absolute function(Fake) *
         ___lwdiv *
         ___lwmod *
           ___lwdiv (ARG)
         _putch *
   _setup

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      A       C       1       85.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      68       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     49      4D       5       96.2%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      5       F       7       18.8%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      68      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Wed Aug 18 14:07:54 2021

                      pc 0002             ___awdiv@sign 0021                       fsr 0004  
    ___wmul@multiplicand 0074                      l130 00B7                      l123 009C  
                    l151 059B                      l119 055E                      l145 0177  
                    l154 06B9                      l138 00D8                      l243 0638  
                    l148 041B                      l245 0650                      l157 06C1  
                    l409 04DD                      l515 0521                      l525 05D7  
                    l711 06B8                      l720 068C                      l706 0330  
                    l396 0484                      l765 0671                      l758 02AD  
                    l774 062B                      u700 06BF                      u701 06BE  
                    u710 04E6                      u711 04E5                      u730 04F8  
                    u731 04F7                      u725 04EA                      u750 0509  
                    u751 0508                      u840 0632                      u841 0631  
                    u745 04F9                      u770 051D                      u771 051C  
                    u755 0505                      u765 0511                      u870 064C  
                    u871 064B                      u855 0639                      u880 06AF  
                    u865 0640                      u881 06AE                      u890 06B5  
                    u891 06B4                      _dec 007A                      _cen 0069  
                    _con 00A6                      _isr 05D8                      _var 00A7  
                    fsr0 0004                      _uni 00A8                      indf 0000  
           ___awmod@sign 0078                     l2000 0090                     l2010 00BD  
                   l2002 0096                     l1300 06B9                     l2020 00ED  
                   l2004 00A2                     l1310 04E6                     l1302 06BF  
                   l2030 015F                     l2014 00CC                     l2006 00AB  
                   l1320 0509                     l1312 04E9                     l2024 00F3  
                   l2016 00D2                     l2008 00B1                     l2032 068D  
                   l1322 050F                     l1314 04F0                     l1306 04DE  
                   l2026 00F9                     l2018 00DE                     l2034 0692  
                   l1324 0510                     l1316 04F4                     l1308 04E0  
                   l2060 01BB                     l2028 0151                     l2036 0698  
                   l1326 0517                     l1318 04F8                     l2038 069E  
                   l1360 063F                     l1328 051D                     l1362 0646  
                   l1354 062C                     l1370 06A9                     l1364 064C  
                   l1356 062E                     l1372 06AF                     l1620 0529  
                   l1358 0632                     l1374 06B5                     l1470 0616  
                   l1630 0538                     l1622 052A                     l1376 06B7  
                   l1368 06A8                     l1800 01A1                     l1472 061E  
                   l1464 0604                     l1560 0491                     l1552 0485  
                   l1640 053E                     l1632 0539                     l1624 0533  
                   l1810 01D4                     l1802 01A8                     l1466 0609  
                   l1570 04AA                     l1562 0495                     l1554 0486  
                   l1650 0549                     l1642 053F                     l1634 053A  
                   l1626 0536                     l1618 0522                     l1900 0320  
                   l1812 01D8                     l1468 060D                     l1580 04C9  
                   l1572 04AE                     l1564 049A                     l1556 048A  
                   l1660 0552                     l1652 054C                     l1644 0540  
                   l1636 053C                     l1628 0537                     l1830 020F  
                   l1822 01E3                     l1814 01DC                     l1806 01A9  
                   l1910 041F                     l1574 04B2                     l1566 04A0  
                   l1582 04CF                     l1558 048F                     l1670 055B  
                   l1662 0555                     l1654 054D                     l1646 0543  
                   l1638 053D                     l1904 032C                     l1840 0239  
                   l1832 0217                     l1816 01E1                     l1808 01C6  
                   l1920 0433                     l1912 0423                     l1584 04D4  
                   l1576 04BC                     l1568 04A3                     l1672 055C  
                   l1664 0556                     l1656 054E                     l1648 0547  
                   l1770 05A4                     l1842 0269                     l1850 028C  
                   l1834 0224                     l1826 01FF                     l1930 0449  
                   l1922 0437                     l1914 0428                     l1586 04D9  
                   l1578 04C2                     l1674 055D                     l1666 0557  
                   l1658 0551                     l1780 05C0                     l1772 05A7  
                   l1844 0271                     l1836 022C                     l1828 0209  
                   l1852 0297                     l1940 0469                     l1932 044D  
                   l1924 0439                     l1916 042A                     l1908 041C  
                   l1668 0558                     l1782 05C6                     l1774 05AE  
                   l1846 027E                     l1838 0232                     l1854 02AB  
                   l1790 017B                     l1870 066B                     l1862 0654  
                   l1942 0470                     l1934 0451                     l1926 043F  
                   l1918 042E                     l1880 02BF                     l1784 05CD  
                   l1776 05B2                     l1768 059C                     l1848 0286  
                   l1792 017C                     l1864 0658                     l1936 0462  
                   l1928 0442                     l1944 0476                     l1952 03B2  
                   l1960 0675                     l1890 02E3                     l1882 02C7  
                   l1874 02B1                     l1778 05B6                     l1786 05D3  
                   l1794 0182                     l1866 0659                     l1970 055F  
                   l1946 047B                     l1938 0468                     l1954 040C  
                   l1962 0676                     l1892 02E8                     l1884 02CA  
                   l1876 02B2                     l1796 018A                     l1868 065D  
                   l1972 057F                     l1948 0480                     l1956 0411  
                   l1964 067A                     l1980 0030                     l1886 02D2  
                   l1878 02B6                     l1798 0199                     l1974 058B  
                   l1958 0416                     l1966 067E                     l1990 005E  
                   l1982 003E                     l1896 030D                     l1888 02DB  
                   l1976 0597                     l1992 006C                     l1984 0046  
                   l1898 0319                     l1994 0070                     l1986 004C  
                   l1996 007E                     l1988 005A                     l1998 0082  
                   ?_isr 0070                     STR_1 0371                     STR_2 0398  
                   STR_3 0386                     STR_4 039A                     STR_5 035C  
                   STR_6 0341                     STR_7 03AE                     STR_8 03AE  
                   u1000 0615                     u1001 0614                     u1010 062B  
                   u1011 062A                     u1200 04A0                     u1201 049F  
                   u1220 04B2                     u1221 04B1                     u1230 04BC  
                   u1231 04BB                     u1215 04A4                     u1410 05B6  
                   u1250 04CF                     u1411 05B5                     u1251 04CE  
                   u1235 04B8                     u1420 05C0                     u1500 020F  
                   u1260 04D4                     u1180 048A                     u1421 05BF  
                   u1405 05A8                     u1501 020E                     u1261 04D3  
                   u1245 04C3                     u1181 0489                     u1510 0217  
                   u1190 0495                     u1511 0216                     u1191 0494  
                   u1600 0320                     u1440 05D3                     u1520 0271  
                   u1601 031F                     u1441 05D2                     u1425 05BC  
                   u1521 0270                     u1530 0297                     u1450 0182  
                   u1610 0423                     u1435 05C7                     u1531 0296  
                   u1451 0181                     u1611 0422                     u1540 02AB  
                   u1460 018A                     u1700 047B                     u1620 042E  
                   u1541 02AA                     u1461 0189                     u1701 047A  
                   u1621 042D                     u1550 02BF                     u1390 05A4  
                   u1470 01D8                     u1630 043F                     u1710 00A2  
                   u1551 02BE                     u1391 05A3                     u1471 01D7  
                   u1631 043E                     u1711 00A1                     u1560 02C7  
                   u1480 01FE                     u1720 00B1                     u1561 02C6  
                   u1481 01FD                     u1721 00B0                     u1570 02D2  
                   u1490 0209                     u1650 0451                     u1730 00BD  
                   u1571 02D1                     u1491 0208                     u1651 0450  
                   u1731 00BC                     u1580 02E3                     u1740 00CC  
                   u1581 02E2                     u1485 01FA                     u1645 0443  
                   u1741 00CB                     u1590 0319                     u1670 0462  
                   u1750 00D2                     u1591 0318                     u1671 0461  
                   u1751 00D1                     u1807 0038                     u1760 00DE  
                   u1665 0452                     u1761 00DD                     u1817 0054  
                   u1690 0476                     u1770 00ED                     u1691 0475  
                   u1675 045E                     u1771 00EC                     u1827 0066  
                   u1780 00F3                     u1685 046A                     u1781 00F2  
                   u1837 0078                     u1790 00F9                     u1791 00F8  
                   u1847 008A                     u1857 0159                     _RBIF 0058  
                   _RCIF 0065                     _TXIF 0064                     _WPUB 0095  
                   _Text 0030                     _atoi 02AE                     _main 068D  
                   _full 00A0                     _tens 006B                     btemp 007E  
                   start 000C                    ??_isr 0070                    ?_Text 0070  
                  ?_atoi 0078                    ?_main 0070          __end_of___awdiv 0485  
        __end_of___awmod 04DE                    _ANSEL 0188          ___awdiv@divisor 0072  
        __end_of___lwdiv 0522                    i1l108 05FC          __end_of___lwmod 05D8  
        ___awdiv@counter 0020                    _RCREG 001A                    _SPBRG 0099  
                  _PORTA 0005                    _PORTB 0006                    _PORTC 0007  
                  _PORTD 0008                    _PORTE 0009          __end_of__doprnt 02AE  
                  _TRISA 0085                    _TRISD 0088                    _TXREG 0019  
        __end_of_dpowers 0341                    _count 00A4          __end_of_isdigit 06B9  
                  _valor 00A9                    atoi@a 0023                    _setup 0522  
                  atoi@s 0025                    _putch 06B9                    fpbase 002C  
                  _units 006A                    pclath 000A                    status 0003  
                  wtemp0 007E          __end_of_sprintf 0672          __initialization 000F  
           __end_of_Text 0178             __end_of_atoi 0331             __end_of_main 06A7  
                 ??_Text 00AA                   ??_atoi 0020                   ??_main 007A  
       ___awdiv@dividend 0074                   ?_setup 0070                   ?_putch 0072  
                 _ANSELH 0189                   i1l1730 05DC                   i1l1732 05E2  
                 i1l1734 05EC                   i1l1736 05F1                   i1l1728 05D8  
                 i1l1738 05FB                   u136_20 05DC                   u136_21 05DB  
                 u137_20 05E2                   u137_21 05E1                   u138_20 05F1  
                 u138_21 05F0                   _SPBRGH 009A         __end_of__fptable 0030  
       __end_of_division 041C                   ___wmul 062C                ??___awdiv 0076  
              ??___awmod 0076                ??___lwdiv 0076                ??___lwmod 0024  
                 _concat 055F                ??__doprnt 0028         ___awdiv@quotient 0022  
        ___awmod@divisor 0072                   _select 00A2             __doprnt@flag 002B  
        ___awmod@counter 0077                   _printf 0672             __doprnt@prec 002C  
                 _strcat 0603                   fptable 0027                   fptotal 0002  
              ??_isdigit 0072                   saved_w 007E                ??_sprintf 0034  
__end_of__initialization 0023           __pcstackCOMMON 0070            __end_of_setup 055F  
          __end_of_putch 06C2            division@valor 0079           _OPTION_REGbits 0081  
             __doprnt@ap 0027               __doprnt@pb 0030                  ??_setup 0072  
                ??_putch 0073               __pbssBANK0 0069               __pbssBANK1 00A0  
             __pmaintext 068D                  ?___wmul 0072               __pintentry 0004  
                ?_concat 003A                  ?_printf 0031                  ?_strcat 0072  
             __stringtab 0331                ?_division 0070                  ___awdiv 041C  
                ___awmod 0485          __size_of___wmul 0025                  ___lwdiv 04DE  
                ___lwmod 059C          __size_of_concat 003D                  __doprnt 0178  
                __ptext1 0522                  __ptext2 0030                  __ptext3 0672  
                __ptext4 03B1                  __ptext5 0485                  __ptext6 041C  
                __ptext7 055F                  __ptext8 0603                  __ptext9 0651  
        __size_of_printf 001B          __size_of_strcat 0029                  _dpowers 0337  
                _isdigit 06A7             __size_of_isr 002B         ___awmod@dividend 0074  
                _residuo 007B                  concat@a 003A                  concat@b 003C  
                concat@c 0067                  _sprintf 0651     end_of_initialization 0023  
             ??_division 0024                _RCSTAbits 0018                  printf@f 0036  
              _PORTBbits 0006                _TRISBbits 0086                _TXSTAbits 0098  
         __end_of___wmul 0651              _BAUDCTLbits 0187           __end_of_concat 059C  
         __end_of_printf 068D           __end_of_strcat 062C      start_initialization 000F  
            __end_of_isr 0603                 ??___wmul 0076              __doprnt@val 002D  
               ??_concat 003E                 ??_printf 0033                 ??_strcat 0073  
            __pbssCOMMON 007A                ___latbits 0002            __pcstackBANK0 0020  
          __pcstackBANK1 00AA        __size_of__fptable 0009                __doprnt@c 002F  
              __doprnt@f 0026        __size_of_division 006B         ___lwdiv@dividend 0074  
              __pfunctab 0027                 ?___awdiv 0072                 ?___awmod 0072  
               ?___lwdiv 0072                 ?___lwmod 0020                 ?__doprnt 0026  
              __pstrings 0331                 ?_isdigit 0070         ___lwdiv@quotient 0077  
               ?_sprintf 0031           __size_of_setup 003D           __size_of_putch 0009  
      interrupt_function 0004           ___wmul@product 0076                 _IOCBbits 0096  
               _PIE1bits 008C                 _PIR1bits 000C              __stringbase 0336  
      ___wmul@multiplier 0072         __size_of___awdiv 0069         __size_of___awmod 0059  
       __size_of___lwdiv 0044         __size_of___lwmod 003C         __size_of__doprnt 0136  
     __end_of__stringtab 0337              _isdigit$934 0072                 __fptable 0027  
             strcat@from 0072         __size_of_isdigit 0012          ___lwdiv@divisor 0072  
        ___lwdiv@counter 0079                 __ptext10 0178                 __ptext11 06B9  
               __ptext12 059C                 __ptext13 04DE                 __ptext14 02AE  
               __ptext15 06A7                 __ptext16 062C                 __ptext17 05D8  
               _division 03B1         __size_of_sprintf 0021            __size_of_Text 0148  
          __size_of_atoi 0083            __size_of_main 001A                 _hundreds 006C  
               concat@s1 0053                 concat@s2 003F                 atoi@sign 0022  
               fp__putch 002D                putch@data 0072               _INTCONbits 000B  
               isdigit@c 0073                 intlevel1 0027                sprintf@ap 0037  
              sprintf@pb 0038                sprintf@wh 0036         ___lwmod@dividend 0022  
              stringcode 0331               _OSCCONbits 008F                 printf@ap 0035  
               printf@pb 0037                 sprintf@f 0031                 strcat@cp 0075  
               strcat@to 0074          ___lwmod@divisor 0020          ___lwmod@counter 0025  
               stringdir 0331                 stringtab 0331  
