

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Thu Jul 22 11:16:26 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	inittext,global,class=CODE,delta=2
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	intentry,global,class=CODE,delta=2
    17                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    18                           	dabs	1,0x7E,2
    19  0000                     
    20                           ; Version 2.20
    21                           ; Generated 12/02/2020 GMT
    22                           ; 
    23                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    24                           ; All rights reserved.
    25                           ; 
    26                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    27                           ; 
    28                           ; Redistribution and use in source and binary forms, with or without modification, are
    29                           ; permitted provided that the following conditions are met:
    30                           ; 
    31                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    32                           ;        conditions and the following disclaimer.
    33                           ; 
    34                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    35                           ;        of conditions and the following disclaimer in the documentation and/or other
    36                           ;        materials provided with the distribution.
    37                           ; 
    38                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    39                           ;        software without specific prior written permission.
    40                           ; 
    41                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    42                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    43                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    44                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    45                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    46                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    47                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    48                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    49                           ; 
    50                           ; 
    51                           ; Code-generator required, PIC16F887 Definitions
    52                           ; 
    53                           ; SFR Addresses
    54  0000                     	;# 
    55  0001                     	;# 
    56  0002                     	;# 
    57  0003                     	;# 
    58  0004                     	;# 
    59  0005                     	;# 
    60  0006                     	;# 
    61  0007                     	;# 
    62  0008                     	;# 
    63  0009                     	;# 
    64  000A                     	;# 
    65  000B                     	;# 
    66  000C                     	;# 
    67  000D                     	;# 
    68  000E                     	;# 
    69  000E                     	;# 
    70  000F                     	;# 
    71  0010                     	;# 
    72  0011                     	;# 
    73  0012                     	;# 
    74  0013                     	;# 
    75  0014                     	;# 
    76  0015                     	;# 
    77  0015                     	;# 
    78  0016                     	;# 
    79  0017                     	;# 
    80  0018                     	;# 
    81  0019                     	;# 
    82  001A                     	;# 
    83  001B                     	;# 
    84  001B                     	;# 
    85  001C                     	;# 
    86  001D                     	;# 
    87  001E                     	;# 
    88  001F                     	;# 
    89  0081                     	;# 
    90  0085                     	;# 
    91  0086                     	;# 
    92  0087                     	;# 
    93  0088                     	;# 
    94  0089                     	;# 
    95  008C                     	;# 
    96  008D                     	;# 
    97  008E                     	;# 
    98  008F                     	;# 
    99  0090                     	;# 
   100  0091                     	;# 
   101  0092                     	;# 
   102  0093                     	;# 
   103  0093                     	;# 
   104  0093                     	;# 
   105  0094                     	;# 
   106  0095                     	;# 
   107  0096                     	;# 
   108  0097                     	;# 
   109  0098                     	;# 
   110  0099                     	;# 
   111  009A                     	;# 
   112  009B                     	;# 
   113  009C                     	;# 
   114  009D                     	;# 
   115  009E                     	;# 
   116  009F                     	;# 
   117  0105                     	;# 
   118  0107                     	;# 
   119  0108                     	;# 
   120  0109                     	;# 
   121  010C                     	;# 
   122  010C                     	;# 
   123  010D                     	;# 
   124  010E                     	;# 
   125  010F                     	;# 
   126  0185                     	;# 
   127  0187                     	;# 
   128  0188                     	;# 
   129  0189                     	;# 
   130  018C                     	;# 
   131  018D                     	;# 
   132  0000                     	;# 
   133  0001                     	;# 
   134  0002                     	;# 
   135  0003                     	;# 
   136  0004                     	;# 
   137  0005                     	;# 
   138  0006                     	;# 
   139  0007                     	;# 
   140  0008                     	;# 
   141  0009                     	;# 
   142  000A                     	;# 
   143  000B                     	;# 
   144  000C                     	;# 
   145  000D                     	;# 
   146  000E                     	;# 
   147  000E                     	;# 
   148  000F                     	;# 
   149  0010                     	;# 
   150  0011                     	;# 
   151  0012                     	;# 
   152  0013                     	;# 
   153  0014                     	;# 
   154  0015                     	;# 
   155  0015                     	;# 
   156  0016                     	;# 
   157  0017                     	;# 
   158  0018                     	;# 
   159  0019                     	;# 
   160  001A                     	;# 
   161  001B                     	;# 
   162  001B                     	;# 
   163  001C                     	;# 
   164  001D                     	;# 
   165  001E                     	;# 
   166  001F                     	;# 
   167  0081                     	;# 
   168  0085                     	;# 
   169  0086                     	;# 
   170  0087                     	;# 
   171  0088                     	;# 
   172  0089                     	;# 
   173  008C                     	;# 
   174  008D                     	;# 
   175  008E                     	;# 
   176  008F                     	;# 
   177  0090                     	;# 
   178  0091                     	;# 
   179  0092                     	;# 
   180  0093                     	;# 
   181  0093                     	;# 
   182  0093                     	;# 
   183  0094                     	;# 
   184  0095                     	;# 
   185  0096                     	;# 
   186  0097                     	;# 
   187  0098                     	;# 
   188  0099                     	;# 
   189  009A                     	;# 
   190  009B                     	;# 
   191  009C                     	;# 
   192  009D                     	;# 
   193  009E                     	;# 
   194  009F                     	;# 
   195  0105                     	;# 
   196  0107                     	;# 
   197  0108                     	;# 
   198  0109                     	;# 
   199  010C                     	;# 
   200  010C                     	;# 
   201  010D                     	;# 
   202  010E                     	;# 
   203  010F                     	;# 
   204  0185                     	;# 
   205  0187                     	;# 
   206  0188                     	;# 
   207  0189                     	;# 
   208  018C                     	;# 
   209  018D                     	;# 
   210  0000                     	;# 
   211  0001                     	;# 
   212  0002                     	;# 
   213  0003                     	;# 
   214  0004                     	;# 
   215  0005                     	;# 
   216  0006                     	;# 
   217  0007                     	;# 
   218  0008                     	;# 
   219  0009                     	;# 
   220  000A                     	;# 
   221  000B                     	;# 
   222  000C                     	;# 
   223  000D                     	;# 
   224  000E                     	;# 
   225  000E                     	;# 
   226  000F                     	;# 
   227  0010                     	;# 
   228  0011                     	;# 
   229  0012                     	;# 
   230  0013                     	;# 
   231  0014                     	;# 
   232  0015                     	;# 
   233  0015                     	;# 
   234  0016                     	;# 
   235  0017                     	;# 
   236  0018                     	;# 
   237  0019                     	;# 
   238  001A                     	;# 
   239  001B                     	;# 
   240  001B                     	;# 
   241  001C                     	;# 
   242  001D                     	;# 
   243  001E                     	;# 
   244  001F                     	;# 
   245  0081                     	;# 
   246  0085                     	;# 
   247  0086                     	;# 
   248  0087                     	;# 
   249  0088                     	;# 
   250  0089                     	;# 
   251  008C                     	;# 
   252  008D                     	;# 
   253  008E                     	;# 
   254  008F                     	;# 
   255  0090                     	;# 
   256  0091                     	;# 
   257  0092                     	;# 
   258  0093                     	;# 
   259  0093                     	;# 
   260  0093                     	;# 
   261  0094                     	;# 
   262  0095                     	;# 
   263  0096                     	;# 
   264  0097                     	;# 
   265  0098                     	;# 
   266  0099                     	;# 
   267  009A                     	;# 
   268  009B                     	;# 
   269  009C                     	;# 
   270  009D                     	;# 
   271  009E                     	;# 
   272  009F                     	;# 
   273  0105                     	;# 
   274  0107                     	;# 
   275  0108                     	;# 
   276  0109                     	;# 
   277  010C                     	;# 
   278  010C                     	;# 
   279  010D                     	;# 
   280  010E                     	;# 
   281  010F                     	;# 
   282  0185                     	;# 
   283  0187                     	;# 
   284  0188                     	;# 
   285  0189                     	;# 
   286  018C                     	;# 
   287  018D                     	;# 
   288                           
   289                           	psect	idataCOMMON
   290  0106                     __pidataCOMMON:
   291                           
   292                           ;initializer for _flag_ADC
   293  0106  3401               	retlw	1
   294                           
   295                           	psect	idataBANK0
   296  00E7                     __pidataBANK0:
   297                           
   298                           ;initializer for _table4Disp
   299  00E7  343F               	retlw	63
   300  00E8  3406               	retlw	6
   301  00E9  345B               	retlw	91
   302  00EA  344F               	retlw	79
   303  00EB  3466               	retlw	102
   304  00EC  346D               	retlw	109
   305  00ED  347D               	retlw	125
   306  00EE  3407               	retlw	7
   307  00EF  347F               	retlw	127
   308  00F0  346F               	retlw	111
   309  00F1  3477               	retlw	119
   310  00F2  347C               	retlw	124
   311  00F3  3439               	retlw	57
   312  00F4  345E               	retlw	94
   313  00F5  3479               	retlw	121
   314  00F6  3471               	retlw	113
   315  001F                     _ADCON0bits	set	31
   316  000B                     _INTCON	set	11
   317  0009                     _PORTE	set	9
   318  0005                     _PORTA	set	5
   319  001F                     _ADCON0	set	31
   320  0007                     _PORTC	set	7
   321  0006                     _PORTBbits	set	6
   322  000C                     _PIR1bits	set	12
   323  0008                     _PORTD	set	8
   324  0009                     _PORTEbits	set	9
   325  0001                     _TMR0	set	1
   326  000B                     _INTCONbits	set	11
   327  0081                     _OPTION_REG	set	129
   328  009F                     _ADCON1bits	set	159
   329  008C                     _PIE1bits	set	140
   330  009F                     _ADCON1	set	159
   331  0096                     _IOCBbits	set	150
   332  0089                     _TRISE	set	137
   333  0088                     _TRISD	set	136
   334  0087                     _TRISC	set	135
   335  0086                     _TRISB	set	134
   336  0085                     _TRISA	set	133
   337  0189                     _ANSELH	set	393
   338  0188                     _ANSEL	set	392
   339                           
   340                           	psect	cinit
   341  000F                     start_initialization:	
   342                           ; #config settings
   343                           
   344  000F                     __initialization:
   345                           
   346                           ; Initialize objects allocated to BANK0
   347  000F  1383               	bcf	3,7	;select IRP bank0
   348  0010  3030               	movlw	low (__pdataBANK0+16)
   349  0011  00FD               	movwf	btemp+-1
   350  0012  3000               	movlw	high __pidataBANK0
   351  0013  00FE               	movwf	btemp
   352  0014  30E7               	movlw	low __pidataBANK0
   353  0015  00FF               	movwf	btemp+1
   354  0016  3020               	movlw	low __pdataBANK0
   355  0017  0084               	movwf	4
   356  0018  120A  118A  20D8  120A  118A  	fcall	init_ram0
   357                           
   358                           ; Initialize objects allocated to COMMON
   359  001D  120A  118A  2106  120A  118A  	fcall	__pidataCOMMON	;fetch initializer
   360  0022  00FC               	movwf	__pdataCOMMON& (0+127)
   361                           
   362                           ; Clear objects allocated to COMMON
   363  0023  01F0               	clrf	__pbssCOMMON& (0+127)
   364  0024  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
   365  0025  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
   366  0026  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
   367  0027  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
   368  0028  01F5               	clrf	(__pbssCOMMON+5)& (0+127)
   369  0029                     end_of_initialization:	
   370                           ;End of C runtime variable initialization code
   371                           
   372  0029                     __end_of__initialization:
   373  0029  0183               	clrf	3
   374  002A  120A  118A  28A9   	ljmp	_main	;jump to C main() function
   375                           
   376                           	psect	bssCOMMON
   377  0070                     __pbssCOMMON:
   378  0070                     _value_ADC:
   379  0070                     	ds	1
   380  0071                     _decrease_ADC:
   381  0071                     	ds	1
   382  0072                     _increase_ADC:
   383  0072                     	ds	1
   384  0073                     _counter:
   385  0073                     	ds	1
   386  0074                     _var4Disp2:
   387  0074                     	ds	1
   388  0075                     _var4Disp1:
   389  0075                     	ds	1
   390                           
   391                           	psect	dataCOMMON
   392  007C                     __pdataCOMMON:
   393  007C                     _flag_ADC:
   394  007C                     	ds	1
   395                           
   396                           	psect	dataBANK0
   397  0020                     __pdataBANK0:
   398  0020                     _table4Disp:
   399  0020                     	ds	16
   400                           
   401                           	psect	inittext
   402  00D4                     init_fetch0:	
   403                           ;	Called with low address in FSR and high address in W
   404                           
   405  00D4  087E               	movf	btemp,w
   406  00D5  008A               	movwf	10
   407  00D6  087F               	movf	btemp+1,w
   408  00D7  0082               	movwf	2
   409  00D8                     init_ram0:	
   410                           ;Called with:
   411                           ;	high address of idata address in btemp 
   412                           ;	low address of idata address in btemp+1 
   413                           ;	low address of data in FSR
   414                           ;	high address + 1 of data in btemp-1
   415                           
   416  00D8  120A  118A  20D4  120A  118A  	fcall	init_fetch0
   417  00DD  0080               	movwf	0
   418  00DE  0A84               	incf	4,f
   419  00DF  0804               	movf	4,w
   420  00E0  067D               	xorwf	btemp+-1,w
   421  00E1  1903               	btfsc	3,2
   422  00E2  3400               	retlw	0
   423  00E3  0AFF               	incf	btemp+1,f
   424  00E4  1903               	btfsc	3,2
   425  00E5  0AFE               	incf	btemp,f
   426  00E6  28D8               	goto	init_ram0
   427                           
   428                           	psect	cstackCOMMON
   429  0076                     __pcstackCOMMON:
   430  0076                     ?_setup:
   431  0076                     ?_SetUp_adc:	
   432                           ; 1 bytes @ 0x0
   433                           
   434  0076                     ?_isr:	
   435                           ; 1 bytes @ 0x0
   436                           
   437  0076                     ??_isr:	
   438                           ; 1 bytes @ 0x0
   439                           
   440  0076                     ?_main:	
   441                           ; 1 bytes @ 0x0
   442                           
   443                           
   444                           ; 1 bytes @ 0x0
   445  0076                     	ds	3
   446  0079                     ??_setup:
   447  0079                     ??_SetUp_adc:	
   448                           ; 1 bytes @ 0x3
   449                           
   450                           
   451                           ; 1 bytes @ 0x3
   452  0079                     	ds	1
   453  007A                     SetUp_adc@flag:
   454                           
   455                           ; 1 bytes @ 0x4
   456  007A                     	ds	1
   457  007B                     ??_main:
   458                           
   459                           ; 1 bytes @ 0x5
   460  007B                     	ds	1
   461                           
   462                           	psect	maintext
   463  00A9                     __pmaintext:	
   464 ;;
   465 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   466 ;;
   467 ;; *************** function _main *****************
   468 ;; Defined at:
   469 ;;		line 118 in file "D2_main1.c"
   470 ;; Parameters:    Size  Location     Type
   471 ;;		None
   472 ;; Auto vars:     Size  Location     Type
   473 ;;		None
   474 ;; Return value:  Size  Location     Type
   475 ;;                  1    wreg      void 
   476 ;; Registers used:
   477 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   478 ;; Tracked objects:
   479 ;;		On entry : B00/0
   480 ;;		On exit  : 0/0
   481 ;;		Unchanged: 0/0
   482 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   483 ;;      Params:         0       0       0       0       0
   484 ;;      Locals:         0       0       0       0       0
   485 ;;      Temps:          1       0       0       0       0
   486 ;;      Totals:         1       0       0       0       0
   487 ;;Total ram usage:        1 bytes
   488 ;; Hardware stack levels required when called:    2
   489 ;; This function calls:
   490 ;;		_SetUp_adc
   491 ;;		_setup
   492 ;; This function is called by:
   493 ;;		Startup code after reset
   494 ;; This function uses a non-reentrant model
   495 ;;
   496                           
   497                           
   498                           ;psect for function _main
   499  00A9                     _main:
   500  00A9                     l779:	
   501                           ;incstack = 0
   502                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   503                           
   504                           
   505                           ;D2_main1.c: 119:     setup();
   506  00A9  120A  118A  2073  120A  118A  	fcall	_setup
   507  00AE                     l83:	
   508                           ;D2_main1.c: 123: while (1) {
   509                           
   510                           
   511                           ;D2_main1.c: 124:     SetUp_adc(flag_ADC);
   512  00AE  087C               	movf	_flag_ADC,w
   513  00AF  120A  118A  20F7  120A  118A  	fcall	_SetUp_adc
   514  00B4                     l781:
   515                           
   516                           ;D2_main1.c: 125:     var4Disp1 = table4Disp[increase_ADC];
   517  00B4  0872               	movf	_increase_ADC,w
   518  00B5  3E20               	addlw	(low (_table4Disp| 0))& (0+255)
   519  00B6  0084               	movwf	4
   520  00B7  1383               	bcf	3,7	;select IRP bank0
   521  00B8  0800               	movf	0,w
   522  00B9  00FB               	movwf	??_main
   523  00BA  087B               	movf	??_main,w
   524  00BB  00F5               	movwf	_var4Disp1
   525  00BC                     l783:
   526                           
   527                           ;D2_main1.c: 126:     var4Disp2 = table4Disp[decrease_ADC];
   528  00BC  0871               	movf	_decrease_ADC,w
   529  00BD  3E20               	addlw	(low (_table4Disp| 0))& (0+255)
   530  00BE  0084               	movwf	4
   531  00BF  0800               	movf	0,w
   532  00C0  00FB               	movwf	??_main
   533  00C1  087B               	movf	??_main,w
   534  00C2  00F4               	movwf	_var4Disp2
   535  00C3                     l785:
   536                           
   537                           ;D2_main1.c: 127:     PORTC = counter;
   538  00C3  0873               	movf	_counter,w
   539  00C4  1283               	bcf	3,5	;RP0=0, select bank0
   540  00C5  1303               	bcf	3,6	;RP1=0, select bank0
   541  00C6  0087               	movwf	7	;volatile
   542  00C7                     l787:
   543                           
   544                           ;D2_main1.c: 128:     if (value_ADC > counter){
   545  00C7  0870               	movf	_value_ADC,w
   546  00C8  0273               	subwf	_counter,w
   547  00C9  1803               	skipnc
   548  00CA  28CC               	goto	u81
   549  00CB  28CD               	goto	u80
   550  00CC                     u81:
   551  00CC  28CF               	goto	l84
   552  00CD                     u80:
   553  00CD                     l789:
   554                           
   555                           ;D2_main1.c: 129:         PORTEbits.RE2 = 1;
   556  00CD  1509               	bsf	9,2	;volatile
   557                           
   558                           ;D2_main1.c: 130:        }
   559  00CE  28AE               	goto	l83
   560  00CF                     l84:	
   561                           ;D2_main1.c: 131:     else {
   562                           
   563                           
   564                           ;D2_main1.c: 132:         PORTEbits.RE2 = 0;
   565  00CF  1109               	bcf	9,2	;volatile
   566  00D0  28AE               	goto	l83
   567  00D1  120A  118A  280C   	ljmp	start
   568  00D4                     __end_of_main:
   569                           
   570                           	psect	text1
   571  0073                     __ptext1:	
   572 ;; *************** function _setup *****************
   573 ;; Defined at:
   574 ;;		line 140 in file "D2_main1.c"
   575 ;; Parameters:    Size  Location     Type
   576 ;;		None
   577 ;; Auto vars:     Size  Location     Type
   578 ;;		None
   579 ;; Return value:  Size  Location     Type
   580 ;;                  1    wreg      void 
   581 ;; Registers used:
   582 ;;		wreg, status,2
   583 ;; Tracked objects:
   584 ;;		On entry : 0/0
   585 ;;		On exit  : 0/0
   586 ;;		Unchanged: 0/0
   587 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   588 ;;      Params:         0       0       0       0       0
   589 ;;      Locals:         0       0       0       0       0
   590 ;;      Temps:          0       0       0       0       0
   591 ;;      Totals:         0       0       0       0       0
   592 ;;Total ram usage:        0 bytes
   593 ;; Hardware stack levels used:    1
   594 ;; Hardware stack levels required when called:    1
   595 ;; This function calls:
   596 ;;		Nothing
   597 ;; This function is called by:
   598 ;;		_main
   599 ;; This function uses a non-reentrant model
   600 ;;
   601                           
   602                           
   603                           ;psect for function _setup
   604  0073                     _setup:
   605  0073                     l691:	
   606                           ;incstack = 0
   607                           ; Regs used in _setup: [wreg+status,2]
   608                           
   609                           
   610                           ;D2_main1.c: 142:     ADCON0 = 0b01010101;
   611  0073  3055               	movlw	85
   612  0074  1283               	bcf	3,5	;RP0=0, select bank0
   613  0075  1303               	bcf	3,6	;RP1=0, select bank0
   614  0076  009F               	movwf	31	;volatile
   615                           
   616                           ;D2_main1.c: 143:     ANSEL = 0b01;
   617  0077  3001               	movlw	1
   618  0078  1683               	bsf	3,5	;RP0=1, select bank3
   619  0079  1703               	bsf	3,6	;RP1=1, select bank3
   620  007A  0088               	movwf	8	;volatile
   621  007B                     l693:
   622                           
   623                           ;D2_main1.c: 144:     TRISA = 0;
   624  007B  1683               	bsf	3,5	;RP0=1, select bank1
   625  007C  1303               	bcf	3,6	;RP1=0, select bank1
   626  007D  0185               	clrf	5	;volatile
   627  007E                     l695:
   628                           
   629                           ;D2_main1.c: 146:     TRISB = 0b00000011;
   630  007E  3003               	movlw	3
   631  007F  0086               	movwf	6	;volatile
   632                           
   633                           ;D2_main1.c: 147:     ANSELH = 0;
   634  0080  1683               	bsf	3,5	;RP0=1, select bank3
   635  0081  1703               	bsf	3,6	;RP1=1, select bank3
   636  0082  0189               	clrf	9	;volatile
   637  0083                     l697:
   638                           
   639                           ;D2_main1.c: 150:     TRISA = 0b01;
   640  0083  3001               	movlw	1
   641  0084  1683               	bsf	3,5	;RP0=1, select bank1
   642  0085  1303               	bcf	3,6	;RP1=0, select bank1
   643  0086  0085               	movwf	5	;volatile
   644  0087                     l699:
   645                           
   646                           ;D2_main1.c: 151:     TRISC = 0;
   647  0087  0187               	clrf	7	;volatile
   648  0088                     l701:
   649                           
   650                           ;D2_main1.c: 152:     TRISD = 0;
   651  0088  0188               	clrf	8	;volatile
   652  0089                     l703:
   653                           
   654                           ;D2_main1.c: 153:     TRISE = 0;
   655  0089  0189               	clrf	9	;volatile
   656  008A                     l705:
   657                           
   658                           ;D2_main1.c: 155:     PORTA = 0;
   659  008A  1283               	bcf	3,5	;RP0=0, select bank0
   660  008B  1303               	bcf	3,6	;RP1=0, select bank0
   661  008C  0185               	clrf	5	;volatile
   662  008D                     l707:
   663                           
   664                           ;D2_main1.c: 156:     PORTC = 0;
   665  008D  0187               	clrf	7	;volatile
   666  008E                     l709:
   667                           
   668                           ;D2_main1.c: 157:     PORTD = 0;
   669  008E  0188               	clrf	8	;volatile
   670  008F                     l711:
   671                           
   672                           ;D2_main1.c: 158:     PORTE = 0;
   673  008F  0189               	clrf	9	;volatile
   674                           
   675                           ;D2_main1.c: 161:     INTCON = 0b11101000;
   676  0090  30E8               	movlw	232
   677  0091  008B               	movwf	11	;volatile
   678  0092                     l713:
   679                           
   680                           ;D2_main1.c: 162:     IOCBbits.IOCB0 =1;
   681  0092  1683               	bsf	3,5	;RP0=1, select bank1
   682  0093  1303               	bcf	3,6	;RP1=0, select bank1
   683  0094  1416               	bsf	22,0	;volatile
   684  0095                     l715:
   685                           
   686                           ;D2_main1.c: 163:     IOCBbits.IOCB1 =1;
   687  0095  1496               	bsf	22,1	;volatile
   688  0096                     l717:
   689                           
   690                           ;D2_main1.c: 166:     ADCON1 = 0b00000000;
   691  0096  019F               	clrf	31	;volatile
   692  0097                     l719:
   693                           
   694                           ;D2_main1.c: 167:     ADCON0 = 0b10000001;
   695  0097  3081               	movlw	129
   696  0098  1283               	bcf	3,5	;RP0=0, select bank0
   697  0099  1303               	bcf	3,6	;RP1=0, select bank0
   698  009A  009F               	movwf	31	;volatile
   699  009B                     l721:
   700                           
   701                           ;D2_main1.c: 168:     PIR1bits.ADIF = 0;
   702  009B  130C               	bcf	12,6	;volatile
   703  009C                     l723:
   704                           
   705                           ;D2_main1.c: 169:     PIE1bits.ADIE = 1;
   706  009C  1683               	bsf	3,5	;RP0=1, select bank1
   707  009D  1303               	bcf	3,6	;RP1=0, select bank1
   708  009E  170C               	bsf	12,6	;volatile
   709  009F                     l725:
   710                           
   711                           ;D2_main1.c: 170:     ADCON1bits.ADFM = 0;
   712  009F  139F               	bcf	31,7	;volatile
   713  00A0                     l727:
   714                           
   715                           ;D2_main1.c: 173:     OPTION_REG = 0x84;
   716  00A0  3084               	movlw	132
   717  00A1  0081               	movwf	1	;volatile
   718  00A2                     l729:
   719                           
   720                           ;D2_main1.c: 174:     TMR0 = 100;
   721  00A2  3064               	movlw	100
   722  00A3  1283               	bcf	3,5	;RP0=0, select bank0
   723  00A4  1303               	bcf	3,6	;RP1=0, select bank0
   724  00A5  0081               	movwf	1	;volatile
   725  00A6                     l731:
   726                           
   727                           ;D2_main1.c: 175:     INTCON = 0b11101000;
   728  00A6  30E8               	movlw	232
   729  00A7  008B               	movwf	11	;volatile
   730  00A8                     l91:
   731  00A8  0008               	return
   732  00A9                     __end_of_setup:
   733                           
   734                           	psect	text2
   735  00F7                     __ptext2:	
   736 ;; *************** function _SetUp_adc *****************
   737 ;; Defined at:
   738 ;;		line 6 in file "ADC.c"
   739 ;; Parameters:    Size  Location     Type
   740 ;;  flag            1    wreg     unsigned char 
   741 ;; Auto vars:     Size  Location     Type
   742 ;;  flag            1    4[COMMON] unsigned char 
   743 ;; Return value:  Size  Location     Type
   744 ;;                  1    wreg      void 
   745 ;; Registers used:
   746 ;;		wreg, status,2, status,0
   747 ;; Tracked objects:
   748 ;;		On entry : 0/0
   749 ;;		On exit  : 0/0
   750 ;;		Unchanged: 0/0
   751 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   752 ;;      Params:         0       0       0       0       0
   753 ;;      Locals:         1       0       0       0       0
   754 ;;      Temps:          1       0       0       0       0
   755 ;;      Totals:         2       0       0       0       0
   756 ;;Total ram usage:        2 bytes
   757 ;; Hardware stack levels used:    1
   758 ;; Hardware stack levels required when called:    1
   759 ;; This function calls:
   760 ;;		Nothing
   761 ;; This function is called by:
   762 ;;		_main
   763 ;; This function uses a non-reentrant model
   764 ;;
   765                           
   766                           
   767                           ;psect for function _SetUp_adc
   768  00F7                     _SetUp_adc:
   769                           
   770                           ;incstack = 0
   771                           ; Regs used in _SetUp_adc: [wreg+status,2+status,0]
   772                           ;SetUp_adc@flag stored from wreg
   773  00F7  00FA               	movwf	SetUp_adc@flag
   774  00F8                     l733:
   775                           
   776                           ;ADC.c: 7:     if(flag == 1){
   777  00F8  037A               	decf	SetUp_adc@flag,w
   778  00F9  1D03               	btfss	3,2
   779  00FA  28FC               	goto	u11
   780  00FB  28FD               	goto	u10
   781  00FC                     u11:
   782  00FC  2905               	goto	l99
   783  00FD                     u10:
   784  00FD                     l735:
   785                           
   786                           ;ADC.c: 8:         _delay((unsigned long)((10)*(8000000/4000000.0)));
   787  00FD  3006               	movlw	6
   788  00FE  00F9               	movwf	??_SetUp_adc
   789  00FF                     u97:
   790  00FF  0BF9               	decfsz	??_SetUp_adc,f
   791  0100  28FF               	goto	u97
   792  0101  0000               	nop
   793  0102                     l737:
   794  0102                     l739:
   795                           
   796                           ;ADC.c: 10:         ADCON0bits.GO = 1;
   797  0102  1283               	bcf	3,5	;RP0=0, select bank0
   798  0103  1303               	bcf	3,6	;RP1=0, select bank0
   799  0104  149F               	bsf	31,1	;volatile
   800  0105                     l99:
   801  0105  0008               	return
   802  0106                     __end_of_SetUp_adc:
   803                           
   804                           	psect	text3
   805  002D                     __ptext3:	
   806 ;; *************** function _isr *****************
   807 ;; Defined at:
   808 ;;		line 63 in file "D2_main1.c"
   809 ;; Parameters:    Size  Location     Type
   810 ;;		None
   811 ;; Auto vars:     Size  Location     Type
   812 ;;		None
   813 ;; Return value:  Size  Location     Type
   814 ;;                  1    wreg      void 
   815 ;; Registers used:
   816 ;;		wreg, status,2, status,0
   817 ;; Tracked objects:
   818 ;;		On entry : 0/0
   819 ;;		On exit  : 0/0
   820 ;;		Unchanged: 0/0
   821 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   822 ;;      Params:         0       0       0       0       0
   823 ;;      Locals:         0       0       0       0       0
   824 ;;      Temps:          3       0       0       0       0
   825 ;;      Totals:         3       0       0       0       0
   826 ;;Total ram usage:        3 bytes
   827 ;; Hardware stack levels used:    1
   828 ;; This function calls:
   829 ;;		Nothing
   830 ;; This function is called by:
   831 ;;		Interrupt level 1
   832 ;; This function uses a non-reentrant model
   833 ;;
   834                           
   835                           
   836                           ;psect for function _isr
   837  002D                     _isr:
   838  002D                     i1l741:
   839                           
   840                           ;D2_main1.c: 65:     if (INTCONbits.T0IF == 1){
   841  002D  1D0B               	btfss	11,2	;volatile
   842  002E  2830               	goto	u2_21
   843  002F  2831               	goto	u2_20
   844  0030                     u2_21:
   845  0030  2845               	goto	i1l765
   846  0031                     u2_20:
   847  0031                     i1l743:
   848                           
   849                           ;D2_main1.c: 66:         TMR0 = 100;
   850  0031  3064               	movlw	100
   851  0032  1283               	bcf	3,5	;RP0=0, select bank0
   852  0033  1303               	bcf	3,6	;RP1=0, select bank0
   853  0034  0081               	movwf	1	;volatile
   854  0035                     i1l745:
   855                           
   856                           ;D2_main1.c: 68:     if(PORTEbits.RE1 == 1) {
   857  0035  1C89               	btfss	9,1	;volatile
   858  0036  2838               	goto	u3_21
   859  0037  2839               	goto	u3_20
   860  0038                     u3_21:
   861  0038  283F               	goto	i1l755
   862  0039                     u3_20:
   863  0039                     i1l747:
   864                           
   865                           ;D2_main1.c: 69:         PORTD = 0;
   866  0039  0188               	clrf	8	;volatile
   867  003A                     i1l749:
   868                           
   869                           ;D2_main1.c: 70:         PORTEbits.RE1 = 0;
   870  003A  1089               	bcf	9,1	;volatile
   871  003B                     i1l751:
   872                           
   873                           ;D2_main1.c: 71:         PORTEbits.RE0 = 1;
   874  003B  1409               	bsf	9,0	;volatile
   875  003C                     i1l753:
   876                           
   877                           ;D2_main1.c: 72:         PORTD = var4Disp1;
   878  003C  0875               	movf	_var4Disp1,w
   879  003D  0088               	movwf	8	;volatile
   880                           
   881                           ;D2_main1.c: 73:                             }
   882  003E  2844               	goto	i1l763
   883  003F                     i1l755:
   884                           
   885                           ;D2_main1.c: 76:         PORTD = 0;
   886  003F  0188               	clrf	8	;volatile
   887  0040                     i1l757:
   888                           
   889                           ;D2_main1.c: 77:         PORTEbits.RE1 = 1;
   890  0040  1489               	bsf	9,1	;volatile
   891  0041                     i1l759:
   892                           
   893                           ;D2_main1.c: 78:         PORTEbits.RE0 = 0;
   894  0041  1009               	bcf	9,0	;volatile
   895  0042                     i1l761:
   896                           
   897                           ;D2_main1.c: 79:         PORTD = var4Disp2;
   898  0042  0874               	movf	_var4Disp2,w
   899  0043  0088               	movwf	8	;volatile
   900  0044                     i1l763:
   901                           
   902                           ;D2_main1.c: 81:     INTCONbits.T0IF = 0;
   903  0044  110B               	bcf	11,2	;volatile
   904  0045                     i1l765:
   905                           
   906                           ;D2_main1.c: 84:      if (PIR1bits.ADIF == 1){
   907  0045  1283               	bcf	3,5	;RP0=0, select bank0
   908  0046  1303               	bcf	3,6	;RP1=0, select bank0
   909  0047  1F0C               	btfss	12,6	;volatile
   910  0048  284A               	goto	u4_21
   911  0049  284B               	goto	u4_20
   912  004A                     u4_21:
   913  004A  2859               	goto	i1l74
   914  004B                     u4_20:
   915  004B                     i1l767:
   916                           
   917                           ;D2_main1.c: 85:         flag_ADC = 1;
   918  004B  01FC               	clrf	_flag_ADC
   919  004C  0AFC               	incf	_flag_ADC,f
   920  004D  081E               	movf	30,w	;# 
   921  004E  00F0               	movwf	_value_ADC	;# 
   922  004F  00F1               	movwf	_decrease_ADC	;# 
   923  0050  0E1E               	swapf	30,w	;# 
   924  0051  390F               	andlw	15	;# 
   925  0052  00F2               	movwf	_increase_ADC	;# 
   926  0053  0871               	movf	_decrease_ADC,w	;# 
   927  0054  390F               	andlw	15	;# 
   928  0055  00F1               	movwf	_decrease_ADC	;# 
   929                           
   930                           ;D2_main1.c: 98:     PIR1bits.ADIF = 0;
   931  0056  1283               	bcf	3,5	;RP0=0, select bank0
   932  0057  1303               	bcf	3,6	;RP1=0, select bank0
   933  0058  130C               	bcf	12,6	;volatile
   934  0059                     i1l74:	
   935                           ;D2_main1.c: 99:                             }
   936                           
   937                           
   938                           ;D2_main1.c: 101:     if (INTCONbits.RBIF == 1){
   939  0059  1C0B               	btfss	11,0	;volatile
   940  005A  285C               	goto	u5_21
   941  005B  285D               	goto	u5_20
   942  005C                     u5_21:
   943  005C  286B               	goto	i1l777
   944  005D                     u5_20:
   945  005D                     i1l769:
   946                           
   947                           ;D2_main1.c: 103:     if (PORTBbits.RB0 == 1){
   948  005D  1C06               	btfss	6,0	;volatile
   949  005E  2860               	goto	u6_21
   950  005F  2861               	goto	u6_20
   951  0060                     u6_21:
   952  0060  2863               	goto	i1l773
   953  0061                     u6_20:
   954  0061                     i1l771:
   955                           
   956                           ;D2_main1.c: 104:         counter--;
   957  0061  3001               	movlw	1
   958  0062  02F3               	subwf	_counter,f
   959  0063                     i1l773:
   960                           
   961                           ;D2_main1.c: 106:     if (PORTBbits.RB1 == 1){
   962  0063  1C86               	btfss	6,1	;volatile
   963  0064  2866               	goto	u7_21
   964  0065  2867               	goto	u7_20
   965  0066                     u7_21:
   966  0066  286B               	goto	i1l777
   967  0067                     u7_20:
   968  0067                     i1l775:
   969                           
   970                           ;D2_main1.c: 107:         counter++;
   971  0067  3001               	movlw	1
   972  0068  00F6               	movwf	??_isr
   973  0069  0876               	movf	??_isr,w
   974  006A  07F3               	addwf	_counter,f
   975  006B                     i1l777:
   976                           
   977                           ;D2_main1.c: 110:     INTCONbits.RBIF = 0;
   978  006B  100B               	bcf	11,0	;volatile
   979  006C                     i1l78:
   980  006C  0878               	movf	??_isr+2,w
   981  006D  008A               	movwf	10
   982  006E  0E77               	swapf	??_isr+1,w
   983  006F  0083               	movwf	3
   984  0070  0EFE               	swapf	btemp,f
   985  0071  0E7E               	swapf	btemp,w
   986  0072  0009               	retfie
   987  0073                     __end_of_isr:
   988  007E                     btemp	set	126	;btemp
   989  007E                     wtemp0	set	126
   990                           
   991                           	psect	intentry
   992  0004                     __pintentry:	
   993                           ;incstack = 0
   994                           ; Regs used in _isr: [wreg+status,2+status,0]
   995                           
   996  0004                     interrupt_function:
   997  007E                     saved_w	set	btemp
   998  0004  00FE               	movwf	btemp
   999  0005  0E03               	swapf	3,w
  1000  0006  00F7               	movwf	??_isr+1
  1001  0007  080A               	movf	10,w
  1002  0008  00F8               	movwf	??_isr+2
  1003  0009  120A  118A  282D   	ljmp	_isr
  1004                           
  1005                           	psect	config
  1006                           
  1007                           ;Config register CONFIG1 @ 0x2007
  1008                           ;	Oscillator Selection bits
  1009                           ;	FOSC = XT, XT oscillator: Crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1/CLKIN
  1010                           ;	Watchdog Timer Enable bit
  1011                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1012                           ;	Power-up Timer Enable bit
  1013                           ;	PWRTE = OFF, PWRT disabled
  1014                           ;	RE3/MCLR pin function select bit
  1015                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1016                           ;	Code Protection bit
  1017                           ;	CP = OFF, Program memory code protection is disabled
  1018                           ;	Data Code Protection bit
  1019                           ;	CPD = OFF, Data memory code protection is disabled
  1020                           ;	Brown Out Reset Selection bits
  1021                           ;	BOREN = OFF, BOR disabled
  1022                           ;	Internal External Switchover bit
  1023                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1024                           ;	Fail-Safe Clock Monitor Enabled bit
  1025                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1026                           ;	Low Voltage Programming Enable bit
  1027                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1028                           ;	In-Circuit Debugger Mode bit
  1029                           ;	DEBUG = 0x1, unprogrammed default
  1030  2007                     	org	8199
  1031  2007  20D1               	dw	8401
  1032                           
  1033                           ;Config register CONFIG2 @ 0x2008
  1034                           ;	Brown-out Reset Selection bit
  1035                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1036                           ;	Flash Program Memory Self Write Enable bits
  1037                           ;	WRT = OFF, Write protection off
  1038  2008                     	org	8200
  1039  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        17
    BSS         6
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      13
    BANK0            80      0      16
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_SetUp_adc

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0      15
                                              5 COMMON     1     1      0
                          _SetUp_adc
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SetUp_adc                                            2     2      0      15
                                              3 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _isr                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SetUp_adc
   _setup

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      0      10       5       20.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      6       D       1       92.9%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      1D      12        0.0%
ABS                  0      0      1D       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Thu Jul 22 11:16:26 2021

                      pc 0002                       l91 00A8                       l83 00AE  
                     l84 00CF                       l99 0105                       u10 00FD  
                     u11 00FC                       u80 00CD                       u81 00CC  
                     u97 00FF                       fsr 0004                      l701 0088  
                    l711 008F                      l703 0089                      l721 009B  
                    l713 0092                      l705 008A                      l731 00A6  
                    l723 009C                      l715 0095                      l707 008D  
                    l733 00F8                      l725 009F                      l717 0096  
                    l709 008E                      l735 00FD                      l727 00A0  
                    l719 0097                      l737 0102                      l729 00A2  
                    l739 0102                      l691 0073                      l693 007B  
                    l781 00B4                      l695 007E                      l783 00BC  
                    l697 0083                      l785 00C3                      l699 0087  
                    l787 00C7                      l779 00A9                      l789 00CD  
                    _isr 002D                      fsr0 0004                      indf 0000  
                   ?_isr 0076                     i1l74 0059                     i1l78 006C  
                   _TMR0 0001                     u2_20 0031                     u2_21 0030  
                   u3_20 0039                     u3_21 0038                     u4_20 004B  
                   u4_21 004A                     u5_20 005D                     u5_21 005C  
                   u6_20 0061                     u6_21 0060                     u7_20 0067  
                   u7_21 0066                     _main 00A9                     btemp 007E  
                   start 000C                    ADRESH 001E                    ??_isr 0076  
                  ?_main 0076                    _ANSEL 0188                    i1l741 002D  
                  i1l751 003B                    i1l743 0031                    i1l761 0042  
                  i1l753 003C                    i1l745 0035                    i1l771 0061  
                  i1l763 0044                    i1l747 0039                    i1l755 003F  
                  i1l773 0063                    i1l757 0040                    i1l749 003A  
                  i1l765 0045                    i1l775 0067                    i1l767 004B  
                  i1l759 0041                    i1l769 005D                    i1l777 006B  
                  _PORTA 0005                    _PORTC 0007                    _PORTD 0008  
                  _PORTE 0009                    _TRISA 0085                    _TRISB 0086  
                  _TRISC 0087                    _TRISD 0088                    _TRISE 0089  
                  _setup 0073                    pclath 000A                    status 0003  
                  wtemp0 007E          __initialization 000F             __end_of_main 00D4  
                 ??_main 007B                   _ADCON0 001F                   _ADCON1 009F  
                 ?_setup 0076                   _ANSELH 0189                   _INTCON 000B  
          SetUp_adc@flag 007A       __size_of_SetUp_adc 000F             __pdataCOMMON 007C  
                 saved_w 007E  __end_of__initialization 0029           __pcstackCOMMON 0076  
           __pidataBANK0 00E7             _decrease_ADC 0071            __end_of_setup 00A9  
                ??_setup 0079        __end_of_SetUp_adc 0106               __pmaintext 00A9  
             __pintentry 0004               _table4Disp 0020                  __ptext1 0073  
                __ptext2 00F7                  __ptext3 002D                  _counter 0073  
           __size_of_isr 0046     end_of_initialization 0029                _PORTBbits 0006  
              _PORTEbits 0009            __pidataCOMMON 0106      start_initialization 000F  
            __end_of_isr 0073                _SetUp_adc 00F7             _increase_ADC 0072  
             init_fetch0 00D4              __pdataBANK0 0020              __pbssCOMMON 0070  
              ___latbits 0002               ?_SetUp_adc 0076                _var4Disp1 0075  
              _var4Disp2 0074           __size_of_setup 0036        interrupt_function 0004  
               _IOCBbits 0096                 _PIE1bits 008C                 _PIR1bits 000C  
              _value_ADC 0070               _ADCON0bits 001F               _ADCON1bits 009F  
            ??_SetUp_adc 0079                 _flag_ADC 007C            __size_of_main 002B  
             _INTCONbits 000B                 init_ram0 00D8                 intlevel1 0000  
             _OPTION_REG 0081  
