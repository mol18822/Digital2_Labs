

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Wed Aug 04 23:05:49 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     9                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2,group=3
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2,group=3
    22                           	psect	text10,local,class=CODE,merge=1,delta=2,group=3
    23                           	psect	text11,local,class=CODE,merge=1,delta=2,group=1
    24                           	psect	text12,local,class=CODE,merge=1,delta=2
    25                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text15,local,class=CODE,merge=1,delta=2,group=3
    28                           	psect	text16,local,class=CODE,merge=1,delta=2,group=3
    29                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text18,local,class=CODE,merge=1,delta=2
    31                           	psect	text19,local,class=CODE,merge=1,delta=2
    32                           	psect	text20,local,class=CODE,merge=1,delta=2
    33                           	psect	text21,local,class=CODE,merge=1,delta=2
    34                           	psect	intentry,global,class=CODE,delta=2
    35                           	psect	functab,global,class=ENTRY,delta=2
    36                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    37                           	dabs	1,0x7E,2
    38  0000                     
    39                           ; Version 2.20
    40                           ; Generated 12/02/2020 GMT
    41                           ; 
    42                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    43                           ; All rights reserved.
    44                           ; 
    45                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    46                           ; 
    47                           ; Redistribution and use in source and binary forms, with or without modification, are
    48                           ; permitted provided that the following conditions are met:
    49                           ; 
    50                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    51                           ;        conditions and the following disclaimer.
    52                           ; 
    53                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    54                           ;        of conditions and the following disclaimer in the documentation and/or other
    55                           ;        materials provided with the distribution.
    56                           ; 
    57                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    58                           ;        software without specific prior written permission.
    59                           ; 
    60                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    61                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    62                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    63                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    64                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    65                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    66                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    67                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    68                           ; 
    69                           ; 
    70                           ; Code-generator required, PIC16F887 Definitions
    71                           ; 
    72                           ; SFR Addresses
    73  0000                     	;# 
    74  0001                     	;# 
    75  0002                     	;# 
    76  0003                     	;# 
    77  0004                     	;# 
    78  0005                     	;# 
    79  0006                     	;# 
    80  0007                     	;# 
    81  0008                     	;# 
    82  0009                     	;# 
    83  000A                     	;# 
    84  000B                     	;# 
    85  000C                     	;# 
    86  000D                     	;# 
    87  000E                     	;# 
    88  000E                     	;# 
    89  000F                     	;# 
    90  0010                     	;# 
    91  0011                     	;# 
    92  0012                     	;# 
    93  0013                     	;# 
    94  0014                     	;# 
    95  0015                     	;# 
    96  0015                     	;# 
    97  0016                     	;# 
    98  0017                     	;# 
    99  0018                     	;# 
   100  0019                     	;# 
   101  001A                     	;# 
   102  001B                     	;# 
   103  001B                     	;# 
   104  001C                     	;# 
   105  001D                     	;# 
   106  001E                     	;# 
   107  001F                     	;# 
   108  0081                     	;# 
   109  0085                     	;# 
   110  0086                     	;# 
   111  0087                     	;# 
   112  0088                     	;# 
   113  0089                     	;# 
   114  008C                     	;# 
   115  008D                     	;# 
   116  008E                     	;# 
   117  008F                     	;# 
   118  0090                     	;# 
   119  0091                     	;# 
   120  0092                     	;# 
   121  0093                     	;# 
   122  0093                     	;# 
   123  0093                     	;# 
   124  0094                     	;# 
   125  0095                     	;# 
   126  0096                     	;# 
   127  0097                     	;# 
   128  0098                     	;# 
   129  0099                     	;# 
   130  009A                     	;# 
   131  009B                     	;# 
   132  009C                     	;# 
   133  009D                     	;# 
   134  009E                     	;# 
   135  009F                     	;# 
   136  0105                     	;# 
   137  0107                     	;# 
   138  0108                     	;# 
   139  0109                     	;# 
   140  010C                     	;# 
   141  010C                     	;# 
   142  010D                     	;# 
   143  010E                     	;# 
   144  010F                     	;# 
   145  0185                     	;# 
   146  0187                     	;# 
   147  0188                     	;# 
   148  0189                     	;# 
   149  018C                     	;# 
   150  018D                     	;# 
   151  0000                     	;# 
   152  0001                     	;# 
   153  0002                     	;# 
   154  0003                     	;# 
   155  0004                     	;# 
   156  0005                     	;# 
   157  0006                     	;# 
   158  0007                     	;# 
   159  0008                     	;# 
   160  0009                     	;# 
   161  000A                     	;# 
   162  000B                     	;# 
   163  000C                     	;# 
   164  000D                     	;# 
   165  000E                     	;# 
   166  000E                     	;# 
   167  000F                     	;# 
   168  0010                     	;# 
   169  0011                     	;# 
   170  0012                     	;# 
   171  0013                     	;# 
   172  0014                     	;# 
   173  0015                     	;# 
   174  0015                     	;# 
   175  0016                     	;# 
   176  0017                     	;# 
   177  0018                     	;# 
   178  0019                     	;# 
   179  001A                     	;# 
   180  001B                     	;# 
   181  001B                     	;# 
   182  001C                     	;# 
   183  001D                     	;# 
   184  001E                     	;# 
   185  001F                     	;# 
   186  0081                     	;# 
   187  0085                     	;# 
   188  0086                     	;# 
   189  0087                     	;# 
   190  0088                     	;# 
   191  0089                     	;# 
   192  008C                     	;# 
   193  008D                     	;# 
   194  008E                     	;# 
   195  008F                     	;# 
   196  0090                     	;# 
   197  0091                     	;# 
   198  0092                     	;# 
   199  0093                     	;# 
   200  0093                     	;# 
   201  0093                     	;# 
   202  0094                     	;# 
   203  0095                     	;# 
   204  0096                     	;# 
   205  0097                     	;# 
   206  0098                     	;# 
   207  0099                     	;# 
   208  009A                     	;# 
   209  009B                     	;# 
   210  009C                     	;# 
   211  009D                     	;# 
   212  009E                     	;# 
   213  009F                     	;# 
   214  0105                     	;# 
   215  0107                     	;# 
   216  0108                     	;# 
   217  0109                     	;# 
   218  010C                     	;# 
   219  010C                     	;# 
   220  010D                     	;# 
   221  010E                     	;# 
   222  010F                     	;# 
   223  0185                     	;# 
   224  0187                     	;# 
   225  0188                     	;# 
   226  0189                     	;# 
   227  018C                     	;# 
   228  018D                     	;# 
   229  0000                     	;# 
   230  0001                     	;# 
   231  0002                     	;# 
   232  0003                     	;# 
   233  0004                     	;# 
   234  0005                     	;# 
   235  0006                     	;# 
   236  0007                     	;# 
   237  0008                     	;# 
   238  0009                     	;# 
   239  000A                     	;# 
   240  000B                     	;# 
   241  000C                     	;# 
   242  000D                     	;# 
   243  000E                     	;# 
   244  000E                     	;# 
   245  000F                     	;# 
   246  0010                     	;# 
   247  0011                     	;# 
   248  0012                     	;# 
   249  0013                     	;# 
   250  0014                     	;# 
   251  0015                     	;# 
   252  0015                     	;# 
   253  0016                     	;# 
   254  0017                     	;# 
   255  0018                     	;# 
   256  0019                     	;# 
   257  001A                     	;# 
   258  001B                     	;# 
   259  001B                     	;# 
   260  001C                     	;# 
   261  001D                     	;# 
   262  001E                     	;# 
   263  001F                     	;# 
   264  0081                     	;# 
   265  0085                     	;# 
   266  0086                     	;# 
   267  0087                     	;# 
   268  0088                     	;# 
   269  0089                     	;# 
   270  008C                     	;# 
   271  008D                     	;# 
   272  008E                     	;# 
   273  008F                     	;# 
   274  0090                     	;# 
   275  0091                     	;# 
   276  0092                     	;# 
   277  0093                     	;# 
   278  0093                     	;# 
   279  0093                     	;# 
   280  0094                     	;# 
   281  0095                     	;# 
   282  0096                     	;# 
   283  0097                     	;# 
   284  0098                     	;# 
   285  0099                     	;# 
   286  009A                     	;# 
   287  009B                     	;# 
   288  009C                     	;# 
   289  009D                     	;# 
   290  009E                     	;# 
   291  009F                     	;# 
   292  0105                     	;# 
   293  0107                     	;# 
   294  0108                     	;# 
   295  0109                     	;# 
   296  010C                     	;# 
   297  010C                     	;# 
   298  010D                     	;# 
   299  010E                     	;# 
   300  010F                     	;# 
   301  0185                     	;# 
   302  0187                     	;# 
   303  0188                     	;# 
   304  0189                     	;# 
   305  018C                     	;# 
   306  018D                     	;# 
   307                           
   308                           	psect	strings
   309  0400                     __pstrings:
   310  0400                     stringtab:
   311  0400                     __stringtab:
   312  0400                     stringcode:	
   313                           ;	String table - string pointers are 1 byte each
   314                           
   315  0400                     stringdir:
   316  0400  3004               	movlw	high stringdir
   317  0401  008A               	movwf	10
   318  0402  0804               	movf	4,w
   319  0403  0A84               	incf	4,f
   320  0404  0782               	addwf	2,f
   321  0405                     __stringbase:
   322  0405  3400               	retlw	0
   323  0406                     __end_of__stringtab:
   324  0406                     _dpowers:
   325  0406  3401               	retlw	1
   326  0407  3400               	retlw	0
   327  0408  340A               	retlw	10
   328  0409  3400               	retlw	0
   329  040A  3464               	retlw	100
   330  040B  3400               	retlw	0
   331  040C  34E8               	retlw	232
   332  040D  3403               	retlw	3
   333  040E  3410               	retlw	16
   334  040F  3427               	retlw	39
   335  0410                     __end_of_dpowers:
   336  0013                     _SSPBUF	set	19
   337  0014                     _SSPCON	set	20
   338  000C                     _PIR1bits	set	12
   339  0018                     _RCSTAbits	set	24
   340  0007                     _PORTC	set	7
   341  001A                     _RCREG	set	26
   342  0019                     _TXREG	set	25
   343  0008                     _PORTD	set	8
   344  0007                     _PORTCbits	set	7
   345  0064                     _TXIF	set	100
   346  0065                     _RCIF	set	101
   347  0094                     _SSPSTATbits	set	148
   348  0094                     _SSPSTAT	set	148
   349  009A                     _SPBRGH	set	154
   350  0099                     _SPBRG	set	153
   351  0098                     _TXSTAbits	set	152
   352  008F                     _OSCCONbits	set	143
   353  0088                     _TRISD	set	136
   354  043B                     _TRISC3	set	1083
   355  043D                     _TRISC5	set	1085
   356  043A                     _TRISC2	set	1082
   357  0187                     _BAUDCTLbits	set	391
   358  0189                     _ANSELH	set	393
   359  0188                     _ANSEL	set	392
   360  0410                     STR_5:
   361  0410  340D               	retlw	13
   362  0411  3420               	retlw	32	;' '
   363  0412  3445               	retlw	69	;'E'
   364  0413  346C               	retlw	108	;'l'
   365  0414  3420               	retlw	32	;' '
   366  0415  3476               	retlw	118	;'v'
   367  0416  3461               	retlw	97	;'a'
   368  0417  346C               	retlw	108	;'l'
   369  0418  346F               	retlw	111	;'o'
   370  0419  3472               	retlw	114	;'r'
   371  041A  3420               	retlw	32	;' '
   372  041B  3464               	retlw	100	;'d'
   373  041C  3465               	retlw	101	;'e'
   374  041D  346C               	retlw	108	;'l'
   375  041E  3420               	retlw	32	;' '
   376  041F  3450               	retlw	80	;'P'
   377  0420  344F               	retlw	79	;'O'
   378  0421  3454               	retlw	84	;'T'
   379  0422  3432               	retlw	50	;'2'
   380  0423  3420               	retlw	32	;' '
   381  0424  3465               	retlw	101	;'e'
   382  0425  3473               	retlw	115	;'s'
   383  0426  343A               	retlw	58	;':'
   384  0427  3420               	retlw	32	;' '
   385  0428  340D               	retlw	13
   386  0429  3400               	retlw	0
   387  042A                     STR_1:
   388  042A  340D               	retlw	13
   389  042B  3420               	retlw	32	;' '
   390  042C  3445               	retlw	69	;'E'
   391  042D  346C               	retlw	108	;'l'
   392  042E  3420               	retlw	32	;' '
   393  042F  3476               	retlw	118	;'v'
   394  0430  3461               	retlw	97	;'a'
   395  0431  346C               	retlw	108	;'l'
   396  0432  346F               	retlw	111	;'o'
   397  0433  3472               	retlw	114	;'r'
   398  0434  3420               	retlw	32	;' '
   399  0435  3464               	retlw	100	;'d'
   400  0436  3465               	retlw	101	;'e'
   401  0437  346C               	retlw	108	;'l'
   402  0438  3420               	retlw	32	;' '
   403  0439  3450               	retlw	80	;'P'
   404  043A  344F               	retlw	79	;'O'
   405  043B  3454               	retlw	84	;'T'
   406  043C  3431               	retlw	49	;'1'
   407  043D  3420               	retlw	32	;' '
   408  043E  3465               	retlw	101	;'e'
   409  043F  3473               	retlw	115	;'s'
   410  0440  343A               	retlw	58	;':'
   411  0441  340D               	retlw	13
   412  0442  3400               	retlw	0
   413  0443                     STR_12:
   414  0443  3445               	retlw	69	;'E'
   415  0444  346C               	retlw	108	;'l'
   416  0445  3420               	retlw	32	;' '
   417  0446  346E               	retlw	110	;'n'
   418  0447  3475               	retlw	117	;'u'
   419  0448  346D               	retlw	109	;'m'
   420  0449  3465               	retlw	101	;'e'
   421  044A  3472               	retlw	114	;'r'
   422  044B  346F               	retlw	111	;'o'
   423  044C  3420               	retlw	32	;' '
   424  044D  3465               	retlw	101	;'e'
   425  044E  346C               	retlw	108	;'l'
   426  044F  3465               	retlw	101	;'e'
   427  0450  3467               	retlw	103	;'g'
   428  0451  3469               	retlw	105	;'i'
   429  0452  3464               	retlw	100	;'d'
   430  0453  346F               	retlw	111	;'o'
   431  0454  3420               	retlw	32	;' '
   432  0455  3465               	retlw	101	;'e'
   433  0456  3473               	retlw	115	;'s'
   434  0457  343A               	retlw	58	;':'
   435  0458  3420               	retlw	32	;' '
   436  0459  3425               	retlw	37	;'%'
   437  045A  3464               	retlw	100	;'d'
   438  045B  3400               	retlw	0
   439  045C                     STR_11:
   440  045C  3449               	retlw	73	;'I'
   441  045D  346E               	retlw	110	;'n'
   442  045E  3467               	retlw	103	;'g'
   443  045F  3472               	retlw	114	;'r'
   444  0460  3465               	retlw	101	;'e'
   445  0461  3473               	retlw	115	;'s'
   446  0462  3461               	retlw	97	;'a'
   447  0463  3472               	retlw	114	;'r'
   448  0464  3420               	retlw	32	;' '
   449  0465  3455               	retlw	85	;'U'
   450  0466  346E               	retlw	110	;'n'
   451  0467  3469               	retlw	105	;'i'
   452  0468  3464               	retlw	100	;'d'
   453  0469  3461               	retlw	97	;'a'
   454  046A  3464               	retlw	100	;'d'
   455  046B  3465               	retlw	101	;'e'
   456  046C  3473               	retlw	115	;'s'
   457  046D  343A               	retlw	58	;':'
   458  046E  3420               	retlw	32	;' '
   459  046F  340D               	retlw	13
   460  0470  3400               	retlw	0
   461  0471                     STR_9:
   462  0471  3449               	retlw	73	;'I'
   463  0472  346E               	retlw	110	;'n'
   464  0473  3467               	retlw	103	;'g'
   465  0474  3472               	retlw	114	;'r'
   466  0475  3465               	retlw	101	;'e'
   467  0476  3473               	retlw	115	;'s'
   468  0477  3461               	retlw	97	;'a'
   469  0478  3472               	retlw	114	;'r'
   470  0479  3420               	retlw	32	;' '
   471  047A  3443               	retlw	67	;'C'
   472  047B  3465               	retlw	101	;'e'
   473  047C  346E               	retlw	110	;'n'
   474  047D  3474               	retlw	116	;'t'
   475  047E  3465               	retlw	101	;'e'
   476  047F  346E               	retlw	110	;'n'
   477  0480  3461               	retlw	97	;'a'
   478  0481  343A               	retlw	58	;':'
   479  0482  3420               	retlw	32	;' '
   480  0483  340D               	retlw	13
   481  0484  3400               	retlw	0
   482  0485                     STR_10:
   483  0485  3449               	retlw	73	;'I'
   484  0486  346E               	retlw	110	;'n'
   485  0487  3467               	retlw	103	;'g'
   486  0488  3472               	retlw	114	;'r'
   487  0489  3465               	retlw	101	;'e'
   488  048A  3473               	retlw	115	;'s'
   489  048B  3461               	retlw	97	;'a'
   490  048C  3472               	retlw	114	;'r'
   491  048D  3420               	retlw	32	;' '
   492  048E  3444               	retlw	68	;'D'
   493  048F  3465               	retlw	101	;'e'
   494  0490  3463               	retlw	99	;'c'
   495  0491  3465               	retlw	101	;'e'
   496  0492  346E               	retlw	110	;'n'
   497  0493  3461               	retlw	97	;'a'
   498  0494  3473               	retlw	115	;'s'
   499  0495  343A               	retlw	58	;':'
   500  0496  3420               	retlw	32	;' '
   501  0497  340D               	retlw	13
   502  0498  3400               	retlw	0
   503  0499                     STR_3:
   504  0499  3420               	retlw	32	;' '
   505  049A  3456               	retlw	86	;'V'
   506  049B  3420               	retlw	32	;' '
   507  049C  3400               	retlw	0
   508  049D                     STR_2:
   509  049D  3420               	retlw	32	;' '
   510  049E  3420               	retlw	32	;' '
   511  049F  3400               	retlw	0
   512  0483                     
   513                           	psect	cinit
   514  000F                     start_initialization:	
   515                           ; #config settings
   516                           
   517  000F                     __initialization:
   518                           
   519                           ; Clear objects allocated to COMMON
   520  000F  01FA               	clrf	__pbssCOMMON& (0+127)
   521  0010  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
   522                           
   523                           ; Clear objects allocated to BANK0
   524  0011  1283               	bcf	3,5	;RP0=0, select bank0
   525  0012  1303               	bcf	3,6	;RP1=0, select bank0
   526  0013  01EA               	clrf	__pbssBANK0& (0+127)
   527  0014  01EB               	clrf	(__pbssBANK0+1)& (0+127)
   528  0015  01EC               	clrf	(__pbssBANK0+2)& (0+127)
   529                           
   530                           ; Clear objects allocated to BANK1
   531  0016  1683               	bsf	3,5	;RP0=1, select bank1
   532  0017  1303               	bcf	3,6	;RP1=0, select bank1
   533  0018  01A0               	clrf	__pbssBANK1& (0+127)
   534  0019  01A1               	clrf	(__pbssBANK1+1)& (0+127)
   535  001A  01A2               	clrf	(__pbssBANK1+2)& (0+127)
   536  001B  01A3               	clrf	(__pbssBANK1+3)& (0+127)
   537  001C  01A4               	clrf	(__pbssBANK1+4)& (0+127)
   538  001D  01A5               	clrf	(__pbssBANK1+5)& (0+127)
   539  001E  01A6               	clrf	(__pbssBANK1+6)& (0+127)
   540  001F  01A7               	clrf	(__pbssBANK1+7)& (0+127)
   541  0020  01A8               	clrf	(__pbssBANK1+8)& (0+127)
   542  0021  01A9               	clrf	(__pbssBANK1+9)& (0+127)
   543  0022                     end_of_initialization:	
   544                           ;End of C runtime variable initialization code
   545                           
   546  0022                     __end_of__initialization:
   547  0022  0183               	clrf	3
   548  0023  120A  118A  2DF7   	ljmp	_main	;jump to C main() function
   549                           
   550                           	psect	bssCOMMON
   551  007A                     __pbssCOMMON:
   552  007A                     _Decenas:
   553  007A                     	ds	1
   554  007B                     _Centenas:
   555  007B                     	ds	1
   556                           
   557                           	psect	bssBANK0
   558  006A                     __pbssBANK0:
   559  006A                     _cen:
   560  006A                     	ds	1
   561  006B                     _Residuo:
   562  006B                     	ds	1
   563  006C                     _Unidades:
   564  006C                     	ds	1
   565                           
   566                           	psect	bssBANK1
   567  00A0                     __pbssBANK1:
   568  00A0                     _counter:
   569  00A0                     	ds	2
   570  00A2                     _complete:
   571  00A2                     	ds	2
   572  00A4                     _con:
   573  00A4                     	ds	1
   574  00A5                     _var:
   575  00A5                     	ds	1
   576  00A6                     _uni:
   577  00A6                     	ds	1
   578  00A7                     _dec:
   579  00A7                     	ds	1
   580  00A8                     _pot2:
   581  00A8                     	ds	1
   582  00A9                     _pot1:
   583  00A9                     	ds	1
   584                           
   585                           	psect	cstackBANK1
   586  00AA                     __pcstackBANK1:
   587  00AA                     ??_information:
   588                           
   589                           ; 1 bytes @ 0x0
   590  00AA                     	ds	5
   591                           
   592                           	psect	cstackCOMMON
   593  0070                     __pcstackCOMMON:
   594  0070                     ?_isdigit:
   595  0070                     ?_setup:	
   596                           ; 1 bit 
   597                           
   598  0070                     ?_Write_SPI:	
   599                           ; 1 bytes @ 0x0
   600                           
   601  0070                     ?_Read_SPI:	
   602                           ; 1 bytes @ 0x0
   603                           
   604  0070                     ?_information:	
   605                           ; 1 bytes @ 0x0
   606                           
   607  0070                     ?_isr:	
   608                           ; 1 bytes @ 0x0
   609                           
   610  0070                     ??_isr:	
   611                           ; 1 bytes @ 0x0
   612                           
   613  0070                     ?_main:	
   614                           ; 1 bytes @ 0x0
   615                           
   616  0070                     ?_division:	
   617                           ; 1 bytes @ 0x0
   618                           
   619  0070                     ?_spiReceiveWait:	
   620                           ; 1 bytes @ 0x0
   621                           
   622                           
   623                           ; 1 bytes @ 0x0
   624  0070                     	ds	2
   625  0072                     ??_Write_SPI:
   626  0072                     ??_Read_SPI:	
   627                           ; 1 bytes @ 0x2
   628                           
   629  0072                     ?_strcat:	
   630                           ; 1 bytes @ 0x2
   631                           
   632  0072                     ?_Init_SPI:	
   633                           ; 1 bytes @ 0x2
   634                           
   635  0072                     ??_isdigit:	
   636                           ; 1 bytes @ 0x2
   637                           
   638  0072                     ?_putch:	
   639                           ; 1 bytes @ 0x2
   640                           
   641  0072                     ??_spiReceiveWait:	
   642                           ; 1 bytes @ 0x2
   643                           
   644  0072                     ?___wmul:	
   645                           ; 1 bytes @ 0x2
   646                           
   647  0072                     ?___awdiv:	
   648                           ; 2 bytes @ 0x2
   649                           
   650  0072                     ?___awmod:	
   651                           ; 2 bytes @ 0x2
   652                           
   653  0072                     ?___lwdiv:	
   654                           ; 2 bytes @ 0x2
   655                           
   656  0072                     putch@data:	
   657                           ; 2 bytes @ 0x2
   658                           
   659  0072                     Init_SPI@sDataSample:	
   660                           ; 1 bytes @ 0x2
   661                           
   662  0072                     Write_SPI@dat:	
   663                           ; 1 bytes @ 0x2
   664                           
   665  0072                     _isdigit$954:	
   666                           ; 1 bytes @ 0x2
   667                           
   668  0072                     strcat@from:	
   669                           ; 1 bytes @ 0x2
   670                           
   671  0072                     ___wmul@multiplier:	
   672                           ; 1 bytes @ 0x2
   673                           
   674  0072                     ___awdiv@divisor:	
   675                           ; 2 bytes @ 0x2
   676                           
   677  0072                     ___awmod@divisor:	
   678                           ; 2 bytes @ 0x2
   679                           
   680  0072                     ___lwdiv@divisor:	
   681                           ; 2 bytes @ 0x2
   682                           
   683                           
   684                           ; 2 bytes @ 0x2
   685  0072                     	ds	1
   686  0073                     ??_strcat:
   687  0073                     ??_putch:	
   688                           ; 1 bytes @ 0x3
   689                           
   690  0073                     Init_SPI@sClockIdle:	
   691                           ; 1 bytes @ 0x3
   692                           
   693  0073                     isdigit@c:	
   694                           ; 1 bytes @ 0x3
   695                           
   696                           
   697                           ; 1 bytes @ 0x3
   698  0073                     	ds	1
   699  0074                     Init_SPI@sTransmitEdge:
   700  0074                     strcat@to:	
   701                           ; 1 bytes @ 0x4
   702                           
   703  0074                     ___wmul@multiplicand:	
   704                           ; 1 bytes @ 0x4
   705                           
   706  0074                     ___awdiv@dividend:	
   707                           ; 2 bytes @ 0x4
   708                           
   709  0074                     ___awmod@dividend:	
   710                           ; 2 bytes @ 0x4
   711                           
   712  0074                     ___lwdiv@dividend:	
   713                           ; 2 bytes @ 0x4
   714                           
   715                           
   716                           ; 2 bytes @ 0x4
   717  0074                     	ds	1
   718  0075                     ??_Init_SPI:
   719  0075                     Init_SPI@sType:	
   720                           ; 1 bytes @ 0x5
   721                           
   722  0075                     strcat@cp:	
   723                           ; 1 bytes @ 0x5
   724                           
   725                           
   726                           ; 1 bytes @ 0x5
   727  0075                     	ds	1
   728  0076                     ??_setup:
   729  0076                     ??___wmul:	
   730                           ; 1 bytes @ 0x6
   731                           
   732  0076                     ??___awdiv:	
   733                           ; 1 bytes @ 0x6
   734                           
   735  0076                     ??___awmod:	
   736                           ; 1 bytes @ 0x6
   737                           
   738  0076                     ??___lwdiv:	
   739                           ; 1 bytes @ 0x6
   740                           
   741  0076                     ___wmul@product:	
   742                           ; 1 bytes @ 0x6
   743                           
   744                           
   745                           ; 2 bytes @ 0x6
   746  0076                     	ds	1
   747  0077                     ___awmod@counter:
   748  0077                     ___lwdiv@quotient:	
   749                           ; 1 bytes @ 0x7
   750                           
   751                           
   752                           ; 2 bytes @ 0x7
   753  0077                     	ds	1
   754  0078                     ?_atoi:
   755  0078                     ___awmod@sign:	
   756                           ; 2 bytes @ 0x8
   757                           
   758                           
   759                           ; 1 bytes @ 0x8
   760  0078                     	ds	1
   761  0079                     division@value:
   762  0079                     ___lwdiv@counter:	
   763                           ; 1 bytes @ 0x9
   764                           
   765                           
   766                           ; 1 bytes @ 0x9
   767  0079                     	ds	1
   768                           
   769                           	psect	cstackBANK0
   770  0020                     __pcstackBANK0:
   771  0020                     ??_atoi:
   772  0020                     ?___lwmod:	
   773                           ; 1 bytes @ 0x0
   774                           
   775  0020                     ___awdiv@counter:	
   776                           ; 2 bytes @ 0x0
   777                           
   778  0020                     ___lwmod@divisor:	
   779                           ; 1 bytes @ 0x0
   780                           
   781                           
   782                           ; 2 bytes @ 0x0
   783  0020                     	ds	1
   784  0021                     ___awdiv@sign:
   785                           
   786                           ; 1 bytes @ 0x1
   787  0021                     	ds	1
   788  0022                     atoi@sign:
   789  0022                     ___awdiv@quotient:	
   790                           ; 1 bytes @ 0x2
   791                           
   792  0022                     ___lwmod@dividend:	
   793                           ; 2 bytes @ 0x2
   794                           
   795                           
   796                           ; 2 bytes @ 0x2
   797  0022                     	ds	1
   798  0023                     atoi@a:
   799                           
   800                           ; 2 bytes @ 0x3
   801  0023                     	ds	1
   802  0024                     ??_division:
   803  0024                     ??___lwmod:	
   804                           ; 1 bytes @ 0x4
   805                           
   806                           
   807                           ; 1 bytes @ 0x4
   808  0024                     	ds	1
   809  0025                     ___lwmod@counter:
   810  0025                     atoi@s:	
   811                           ; 1 bytes @ 0x5
   812                           
   813                           
   814                           ; 1 bytes @ 0x5
   815  0025                     	ds	1
   816  0026                     ?__doprnt:
   817  0026                     __doprnt@f:	
   818                           ; 2 bytes @ 0x6
   819                           
   820                           
   821                           ; 1 bytes @ 0x6
   822  0026                     	ds	1
   823  0027                     __doprnt@ap:
   824                           
   825                           ; 1 bytes @ 0x7
   826  0027                     	ds	1
   827  0028                     ??__doprnt:
   828                           
   829                           ; 1 bytes @ 0x8
   830  0028                     	ds	3
   831  002B                     __doprnt@flag:
   832                           
   833                           ; 1 bytes @ 0xB
   834  002B                     	ds	1
   835  002C                     __doprnt@prec:
   836                           
   837                           ; 1 bytes @ 0xC
   838  002C                     	ds	1
   839  002D                     __doprnt@val:
   840                           
   841                           ; 2 bytes @ 0xD
   842  002D                     	ds	2
   843  002F                     __doprnt@c:
   844                           
   845                           ; 1 bytes @ 0xF
   846  002F                     	ds	1
   847  0030                     __doprnt@pb:
   848                           
   849                           ; 1 bytes @ 0x10
   850  0030                     	ds	1
   851  0031                     ?_printf:
   852  0031                     ?_sprintf:	
   853                           ; 2 bytes @ 0x11
   854                           
   855  0031                     sprintf@f:	
   856                           ; 2 bytes @ 0x11
   857                           
   858                           
   859                           ; 1 bytes @ 0x11
   860  0031                     	ds	2
   861  0033                     ??_printf:
   862                           
   863                           ; 1 bytes @ 0x13
   864  0033                     	ds	1
   865  0034                     ??_sprintf:
   866                           
   867                           ; 1 bytes @ 0x14
   868  0034                     	ds	1
   869  0035                     printf@ap:
   870                           
   871                           ; 1 bytes @ 0x15
   872  0035                     	ds	1
   873  0036                     printf@f:
   874  0036                     sprintf@wh:	
   875                           ; 1 bytes @ 0x16
   876                           
   877                           
   878                           ; 1 bytes @ 0x16
   879  0036                     	ds	1
   880  0037                     sprintf@ap:
   881  0037                     printf@pb:	
   882                           ; 1 bytes @ 0x17
   883                           
   884                           
   885                           ; 2 bytes @ 0x17
   886  0037                     	ds	1
   887  0038                     sprintf@pb:
   888                           
   889                           ; 2 bytes @ 0x18
   890  0038                     	ds	2
   891  003A                     ?_concat:
   892  003A                     concat@a:	
   893                           ; 2 bytes @ 0x1A
   894                           
   895                           
   896                           ; 2 bytes @ 0x1A
   897  003A                     	ds	2
   898  003C                     concat@b:
   899                           
   900                           ; 2 bytes @ 0x1C
   901  003C                     	ds	2
   902  003E                     ??_concat:
   903                           
   904                           ; 1 bytes @ 0x1E
   905  003E                     	ds	1
   906  003F                     concat@s2:
   907                           
   908                           ; 20 bytes @ 0x1F
   909  003F                     	ds	20
   910  0053                     concat@s1:
   911                           
   912                           ; 20 bytes @ 0x33
   913  0053                     	ds	20
   914  0067                     concat@c:
   915                           
   916                           ; 2 bytes @ 0x47
   917  0067                     	ds	2
   918  0069                     ??_main:
   919                           
   920                           ; 1 bytes @ 0x49
   921  0069                     	ds	1
   922                           
   923                           	psect	maintext
   924  05F7                     __pmaintext:	
   925 ;;
   926 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   927 ;;
   928 ;; *************** function _main *****************
   929 ;; Defined at:
   930 ;;		line 71 in file "D2_main3M.c"
   931 ;; Parameters:    Size  Location     Type
   932 ;;		None
   933 ;; Auto vars:     Size  Location     Type
   934 ;;		None
   935 ;; Return value:  Size  Location     Type
   936 ;;                  1    wreg      void 
   937 ;; Registers used:
   938 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   939 ;; Tracked objects:
   940 ;;		On entry : B00/0
   941 ;;		On exit  : 0/0
   942 ;;		Unchanged: 0/0
   943 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   944 ;;      Params:         0       0       0       0       0
   945 ;;      Locals:         0       0       0       0       0
   946 ;;      Temps:          0       1       0       0       0
   947 ;;      Totals:         0       1       0       0       0
   948 ;;Total ram usage:        1 bytes
   949 ;; Hardware stack levels required when called:    6
   950 ;; This function calls:
   951 ;;		_Read_SPI
   952 ;;		_Write_SPI
   953 ;;		_information
   954 ;;		_setup
   955 ;; This function is called by:
   956 ;;		Startup code after reset
   957 ;; This function uses a non-reentrant model
   958 ;;
   959                           
   960                           
   961                           ;psect for function _main
   962  05F7                     _main:
   963  05F7                     l2193:	
   964                           ;incstack = 0
   965                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   966                           
   967                           
   968                           ;D2_main3M.c: 73:     setup();
   969  05F7  120A  118A  276B  120A  118A  	fcall	_setup
   970  05FC                     l2195:
   971                           
   972                           ;D2_main3M.c: 79:     PORTCbits.RC2 = 0;
   973  05FC  1283               	bcf	3,5	;RP0=0, select bank0
   974  05FD  1303               	bcf	3,6	;RP1=0, select bank0
   975  05FE  1107               	bcf	7,2	;volatile
   976  05FF                     l2197:
   977                           
   978                           ;D2_main3M.c: 80:        _delay((unsigned long)((1)*(4000000/4000.0)));
   979  05FF  30C7               	movlw	199
   980  0600  1283               	bcf	3,5	;RP0=0, select bank0
   981  0601  1303               	bcf	3,6	;RP1=0, select bank0
   982  0602  00E9               	movwf	??_main
   983  0603                     u1787:
   984  0603  2E04               	nop2
   985  0604  0BE9               	decfsz	??_main,f
   986  0605  2E03               	goto	u1787
   987  0606  2E07               	nop2
   988  0607                     l2199:
   989                           
   990                           ;D2_main3M.c: 82:        Write_SPI(0x0A);
   991  0607  300A               	movlw	10
   992  0608  120A  118A  23F8  120A  118A  	fcall	_Write_SPI
   993  060D                     l2201:
   994                           
   995                           ;D2_main3M.c: 83:        pot1 = Read_SPI();
   996  060D  120A  118A  23E1  120A  118A  	fcall	_Read_SPI
   997  0612  1283               	bcf	3,5	;RP0=0, select bank0
   998  0613  1303               	bcf	3,6	;RP1=0, select bank0
   999  0614  00E9               	movwf	??_main
  1000  0615  0869               	movf	??_main,w
  1001  0616  1683               	bsf	3,5	;RP0=1, select bank1
  1002  0617  1303               	bcf	3,6	;RP1=0, select bank1
  1003  0618  00A9               	movwf	_pot1^(0+128)
  1004  0619                     l2203:
  1005                           
  1006                           ;D2_main3M.c: 84:        _delay((unsigned long)((1)*(4000000/4000.0)));
  1007  0619  30C7               	movlw	199
  1008  061A  1283               	bcf	3,5	;RP0=0, select bank0
  1009  061B  1303               	bcf	3,6	;RP1=0, select bank0
  1010  061C  00E9               	movwf	??_main
  1011  061D                     u1797:
  1012  061D  2E1E               	nop2
  1013  061E  0BE9               	decfsz	??_main,f
  1014  061F  2E1D               	goto	u1797
  1015  0620  2E21               	nop2
  1016                           
  1017                           ;D2_main3M.c: 86:        Write_SPI(0x0A);
  1018  0621  300A               	movlw	10
  1019  0622  120A  118A  23F8  120A  118A  	fcall	_Write_SPI
  1020                           
  1021                           ;D2_main3M.c: 87:        pot2 = Read_SPI();
  1022  0627  120A  118A  23E1  120A  118A  	fcall	_Read_SPI
  1023  062C  1283               	bcf	3,5	;RP0=0, select bank0
  1024  062D  1303               	bcf	3,6	;RP1=0, select bank0
  1025  062E  00E9               	movwf	??_main
  1026  062F  0869               	movf	??_main,w
  1027  0630  1683               	bsf	3,5	;RP0=1, select bank1
  1028  0631  1303               	bcf	3,6	;RP1=0, select bank1
  1029  0632  00A8               	movwf	_pot2^(0+128)
  1030  0633                     l2205:
  1031                           
  1032                           ;D2_main3M.c: 88:        _delay((unsigned long)((1)*(4000000/4000.0)));
  1033  0633  30C7               	movlw	199
  1034  0634  1283               	bcf	3,5	;RP0=0, select bank0
  1035  0635  1303               	bcf	3,6	;RP1=0, select bank0
  1036  0636  00E9               	movwf	??_main
  1037  0637                     u1807:
  1038  0637  2E38               	nop2
  1039  0638  0BE9               	decfsz	??_main,f
  1040  0639  2E37               	goto	u1807
  1041  063A  2E3B               	nop2
  1042  063B                     l2207:
  1043                           
  1044                           ;D2_main3M.c: 90:        _delay((unsigned long)((1)*(4000000/4000.0)));
  1045  063B  30C7               	movlw	199
  1046  063C  1283               	bcf	3,5	;RP0=0, select bank0
  1047  063D  1303               	bcf	3,6	;RP1=0, select bank0
  1048  063E  00E9               	movwf	??_main
  1049  063F                     u1817:
  1050  063F  2E40               	nop2
  1051  0640  0BE9               	decfsz	??_main,f
  1052  0641  2E3F               	goto	u1817
  1053  0642  2E43               	nop2
  1054  0643                     l2209:
  1055                           
  1056                           ;D2_main3M.c: 91:        PORTCbits.RC2 = 1;
  1057  0643  1283               	bcf	3,5	;RP0=0, select bank0
  1058  0644  1303               	bcf	3,6	;RP1=0, select bank0
  1059  0645  1507               	bsf	7,2	;volatile
  1060  0646                     l2211:
  1061                           
  1062                           ;D2_main3M.c: 92:        information();
  1063  0646  120A  118A  202F  120A  118A  	fcall	_information
  1064  064B                     l2213:
  1065                           
  1066                           ;D2_main3M.c: 94:        PORTD = complete;
  1067  064B  1683               	bsf	3,5	;RP0=1, select bank1
  1068  064C  1303               	bcf	3,6	;RP1=0, select bank1
  1069  064D  0822               	movf	_complete^(0+128),w
  1070  064E  1283               	bcf	3,5	;RP0=0, select bank0
  1071  064F  1303               	bcf	3,6	;RP1=0, select bank0
  1072  0650  0088               	movwf	8	;volatile
  1073  0651  2DFC               	goto	l2195
  1074  0652  120A  118A  280C   	ljmp	start
  1075  0655                     __end_of_main:
  1076                           
  1077                           	psect	text1
  1078  076B                     __ptext1:	
  1079 ;; *************** function _setup *****************
  1080 ;; Defined at:
  1081 ;;		line 228 in file "D2_main3M.c"
  1082 ;; Parameters:    Size  Location     Type
  1083 ;;		None
  1084 ;; Auto vars:     Size  Location     Type
  1085 ;;		None
  1086 ;; Return value:  Size  Location     Type
  1087 ;;                  1    wreg      void 
  1088 ;; Registers used:
  1089 ;;		wreg, status,2, status,0, pclath, cstack
  1090 ;; Tracked objects:
  1091 ;;		On entry : 0/0
  1092 ;;		On exit  : 0/0
  1093 ;;		Unchanged: 0/0
  1094 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1095 ;;      Params:         0       0       0       0       0
  1096 ;;      Locals:         0       0       0       0       0
  1097 ;;      Temps:          0       0       0       0       0
  1098 ;;      Totals:         0       0       0       0       0
  1099 ;;Total ram usage:        0 bytes
  1100 ;; Hardware stack levels used:    1
  1101 ;; Hardware stack levels required when called:    2
  1102 ;; This function calls:
  1103 ;;		_Init_SPI
  1104 ;; This function is called by:
  1105 ;;		_main
  1106 ;; This function uses a non-reentrant model
  1107 ;;
  1108                           
  1109                           
  1110                           ;psect for function _setup
  1111  076B                     _setup:
  1112  076B                     l1699:	
  1113                           ;incstack = 0
  1114                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
  1115                           
  1116                           
  1117                           ;D2_main3M.c: 230:     ANSEL = 0x00;
  1118  076B  1683               	bsf	3,5	;RP0=1, select bank3
  1119  076C  1703               	bsf	3,6	;RP1=1, select bank3
  1120  076D  0188               	clrf	8	;volatile
  1121                           
  1122                           ;D2_main3M.c: 231:     ANSELH = 0x00;
  1123  076E  0189               	clrf	9	;volatile
  1124  076F                     l1701:
  1125                           
  1126                           ;D2_main3M.c: 233:     TRISC2 = 0;
  1127  076F  1683               	bsf	3,5	;RP0=1, select bank1
  1128  0770  1303               	bcf	3,6	;RP1=0, select bank1
  1129  0771  1107               	bcf	7,2	;volatile
  1130                           
  1131                           ;D2_main3M.c: 234:     TRISD = 0x00;
  1132  0772  0188               	clrf	8	;volatile
  1133                           
  1134                           ;D2_main3M.c: 238:     PORTC = 0x00;
  1135  0773  1283               	bcf	3,5	;RP0=0, select bank0
  1136  0774  1303               	bcf	3,6	;RP1=0, select bank0
  1137  0775  0187               	clrf	7	;volatile
  1138                           
  1139                           ;D2_main3M.c: 239:     PORTD = 0x00;
  1140  0776  0188               	clrf	8	;volatile
  1141  0777                     l1703:
  1142                           
  1143                           ;D2_main3M.c: 241:     PORTCbits.RC2 = 1;
  1144  0777  1507               	bsf	7,2	;volatile
  1145  0778                     l1705:
  1146                           
  1147                           ;D2_main3M.c: 242:     Init_SPI(SPI_MASTER_OSC_DIV4, SPI_DATA_SAMPLE_MIDDLE,
  1148  0778  01F2               	clrf	Init_SPI@sDataSample
  1149  0779  01F3               	clrf	Init_SPI@sClockIdle
  1150  077A  01F4               	clrf	Init_SPI@sTransmitEdge
  1151  077B  3020               	movlw	32
  1152  077C  120A  118A  23C2  120A  118A  	fcall	_Init_SPI
  1153  0781                     l1707:
  1154                           
  1155                           ;D2_main3M.c: 248:     OSCCONbits.IRCF2 = 1;
  1156  0781  1683               	bsf	3,5	;RP0=1, select bank1
  1157  0782  1303               	bcf	3,6	;RP1=0, select bank1
  1158  0783  170F               	bsf	15,6	;volatile
  1159  0784                     l1709:
  1160                           
  1161                           ;D2_main3M.c: 249:     OSCCONbits.IRCF1 = 1;
  1162  0784  168F               	bsf	15,5	;volatile
  1163  0785                     l1711:
  1164                           
  1165                           ;D2_main3M.c: 250:     OSCCONbits.IRCF0 = 0;
  1166  0785  120F               	bcf	15,4	;volatile
  1167  0786                     l1713:
  1168                           
  1169                           ;D2_main3M.c: 251:     OSCCONbits.SCS = 1;
  1170  0786  140F               	bsf	15,0	;volatile
  1171  0787                     l1715:
  1172                           
  1173                           ;D2_main3M.c: 255:     TXSTAbits.SYNC = 0;
  1174  0787  1218               	bcf	24,4	;volatile
  1175  0788                     l1717:
  1176                           
  1177                           ;D2_main3M.c: 256:     TXSTAbits.BRGH = 1;
  1178  0788  1518               	bsf	24,2	;volatile
  1179  0789                     l1719:
  1180                           
  1181                           ;D2_main3M.c: 257:     BAUDCTLbits.BRG16 = 0;
  1182  0789  1683               	bsf	3,5	;RP0=1, select bank3
  1183  078A  1703               	bsf	3,6	;RP1=1, select bank3
  1184  078B  1187               	bcf	7,3	;volatile
  1185  078C                     l1721:
  1186                           
  1187                           ;D2_main3M.c: 259:     SPBRG = 25;
  1188  078C  3019               	movlw	25
  1189  078D  1683               	bsf	3,5	;RP0=1, select bank1
  1190  078E  1303               	bcf	3,6	;RP1=0, select bank1
  1191  078F  0099               	movwf	25	;volatile
  1192  0790                     l1723:
  1193                           
  1194                           ;D2_main3M.c: 260:     SPBRGH = 1;
  1195  0790  3001               	movlw	1
  1196  0791  009A               	movwf	26	;volatile
  1197  0792                     l1725:
  1198                           
  1199                           ;D2_main3M.c: 262:     RCSTAbits.SPEN = 1;
  1200  0792  1283               	bcf	3,5	;RP0=0, select bank0
  1201  0793  1303               	bcf	3,6	;RP1=0, select bank0
  1202  0794  1798               	bsf	24,7	;volatile
  1203  0795                     l1727:
  1204                           
  1205                           ;D2_main3M.c: 263:     RCSTAbits.RX9 = 0;
  1206  0795  1318               	bcf	24,6	;volatile
  1207  0796                     l1729:
  1208                           
  1209                           ;D2_main3M.c: 264:     RCSTAbits.CREN = 1;
  1210  0796  1618               	bsf	24,4	;volatile
  1211  0797                     l1731:
  1212                           
  1213                           ;D2_main3M.c: 265:     TXSTAbits.TX9 = 0;
  1214  0797  1683               	bsf	3,5	;RP0=1, select bank1
  1215  0798  1303               	bcf	3,6	;RP1=0, select bank1
  1216  0799  1318               	bcf	24,6	;volatile
  1217  079A                     l1733:
  1218                           
  1219                           ;D2_main3M.c: 266:     TXSTAbits.TXEN = 1;
  1220  079A  1698               	bsf	24,5	;volatile
  1221  079B                     l1735:
  1222                           
  1223                           ;D2_main3M.c: 267:     PIR1bits.RCIF = 0;
  1224  079B  1283               	bcf	3,5	;RP0=0, select bank0
  1225  079C  1303               	bcf	3,6	;RP1=0, select bank0
  1226  079D  128C               	bcf	12,5	;volatile
  1227  079E                     l1737:
  1228                           
  1229                           ;D2_main3M.c: 268:     PIR1bits.TXIF = 0;
  1230  079E  120C               	bcf	12,4	;volatile
  1231  079F                     l138:
  1232  079F  0008               	return
  1233  07A0                     __end_of_setup:
  1234                           
  1235                           	psect	text2
  1236  03C2                     __ptext2:	
  1237 ;; *************** function _Init_SPI *****************
  1238 ;; Defined at:
  1239 ;;		line 3 in file "SPI.c"
  1240 ;; Parameters:    Size  Location     Type
  1241 ;;  sType           1    wreg     enum E1264
  1242 ;;  sDataSample     1    2[COMMON] enum E1272
  1243 ;;  sClockIdle      1    3[COMMON] enum E1276
  1244 ;;  sTransmitEdg    1    4[COMMON] enum E1280
  1245 ;; Auto vars:     Size  Location     Type
  1246 ;;  sType           1    5[COMMON] enum E1264
  1247 ;; Return value:  Size  Location     Type
  1248 ;;                  1    wreg      void 
  1249 ;; Registers used:
  1250 ;;		wreg, status,2, status,0
  1251 ;; Tracked objects:
  1252 ;;		On entry : 0/0
  1253 ;;		On exit  : 0/0
  1254 ;;		Unchanged: 0/0
  1255 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1256 ;;      Params:         3       0       0       0       0
  1257 ;;      Locals:         1       0       0       0       0
  1258 ;;      Temps:          0       0       0       0       0
  1259 ;;      Totals:         4       0       0       0       0
  1260 ;;Total ram usage:        4 bytes
  1261 ;; Hardware stack levels used:    1
  1262 ;; Hardware stack levels required when called:    1
  1263 ;; This function calls:
  1264 ;;		Nothing
  1265 ;; This function is called by:
  1266 ;;		_setup
  1267 ;; This function uses a non-reentrant model
  1268 ;;
  1269                           
  1270                           
  1271                           ;psect for function _Init_SPI
  1272  03C2                     _Init_SPI:
  1273                           
  1274                           ;incstack = 0
  1275                           ; Regs used in _Init_SPI: [wreg+status,2+status,0]
  1276                           ;Init_SPI@sType stored from wreg
  1277  03C2  00F5               	movwf	Init_SPI@sType
  1278  03C3                     l1687:
  1279                           
  1280                           ;SPI.c: 3: void Init_SPI(SPI_Type sType, SPI_Data_Sample sDataSample,;SPI.c: 4:      SPI
      +                          _Clock_Idle sClockIdle, SPI_Transmit_Edge sTransmitEdge);SPI.c: 5: {;SPI.c: 6:     TRISC
      +                          5 = 0;
  1281  03C3  1683               	bsf	3,5	;RP0=1, select bank1
  1282  03C4  1303               	bcf	3,6	;RP1=0, select bank1
  1283  03C5  1287               	bcf	7,5	;volatile
  1284                           
  1285                           ;SPI.c: 7:     if(sType & 0b00000100)
  1286  03C6  1D75               	btfss	Init_SPI@sType,2
  1287  03C7  2BC9               	goto	u1261
  1288  03C8  2BCA               	goto	u1260
  1289  03C9                     u1261:
  1290  03C9  2BCE               	goto	l1693
  1291  03CA                     u1260:
  1292  03CA                     l1689:
  1293                           
  1294                           ;SPI.c: 8:     {;SPI.c: 9:         SSPSTAT = sTransmitEdge;
  1295  03CA  0874               	movf	Init_SPI@sTransmitEdge,w
  1296  03CB  0094               	movwf	20	;volatile
  1297  03CC                     l1691:
  1298                           
  1299                           ;SPI.c: 10:         TRISC3 = 1;
  1300  03CC  1587               	bsf	7,3	;volatile
  1301                           
  1302                           ;SPI.c: 11:     }
  1303  03CD  2BD2               	goto	l154
  1304  03CE                     l1693:
  1305                           
  1306                           ;SPI.c: 13:     {;SPI.c: 14:         SSPSTAT = sDataSample | sTransmitEdge;
  1307  03CE  0872               	movf	Init_SPI@sDataSample,w
  1308  03CF  0474               	iorwf	Init_SPI@sTransmitEdge,w
  1309  03D0  0094               	movwf	20	;volatile
  1310  03D1                     l1695:
  1311                           
  1312                           ;SPI.c: 15:         TRISC3 = 0;
  1313  03D1  1187               	bcf	7,3	;volatile
  1314  03D2                     l154:	
  1315                           ;SPI.c: 16:     }
  1316                           
  1317                           
  1318                           ;SPI.c: 18:     SSPCON = sType | sClockIdle;
  1319  03D2  0875               	movf	Init_SPI@sType,w
  1320  03D3  0473               	iorwf	Init_SPI@sClockIdle,w
  1321  03D4  1283               	bcf	3,5	;RP0=0, select bank0
  1322  03D5  1303               	bcf	3,6	;RP1=0, select bank0
  1323  03D6  0094               	movwf	20	;volatile
  1324  03D7                     l155:
  1325  03D7  0008               	return
  1326  03D8                     __end_of_Init_SPI:
  1327                           
  1328                           	psect	text3
  1329  002F                     __ptext3:	
  1330 ;; *************** function _information *****************
  1331 ;; Defined at:
  1332 ;;		line 114 in file "D2_main3M.c"
  1333 ;; Parameters:    Size  Location     Type
  1334 ;;		None
  1335 ;; Auto vars:     Size  Location     Type
  1336 ;;		None
  1337 ;; Return value:  Size  Location     Type
  1338 ;;                  1    wreg      void 
  1339 ;; Registers used:
  1340 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1341 ;; Tracked objects:
  1342 ;;		On entry : 0/0
  1343 ;;		On exit  : 0/0
  1344 ;;		Unchanged: 0/0
  1345 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1346 ;;      Params:         0       0       0       0       0
  1347 ;;      Locals:         0       0       0       0       0
  1348 ;;      Temps:          0       0       5       0       0
  1349 ;;      Totals:         0       0       5       0       0
  1350 ;;Total ram usage:        5 bytes
  1351 ;; Hardware stack levels used:    1
  1352 ;; Hardware stack levels required when called:    5
  1353 ;; This function calls:
  1354 ;;		_concat
  1355 ;;		_division
  1356 ;;		_printf
  1357 ;; This function is called by:
  1358 ;;		_main
  1359 ;; This function uses a non-reentrant model
  1360 ;;
  1361                           
  1362                           
  1363                           ;psect for function _information
  1364  002F                     _information:
  1365  002F                     l2097:	
  1366                           ;incstack = 0
  1367                           ; Regs used in _information: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1368                           
  1369                           
  1370                           ;D2_main3M.c: 117:     division(pot1);
  1371  002F  1683               	bsf	3,5	;RP0=1, select bank1
  1372  0030  1303               	bcf	3,6	;RP1=0, select bank1
  1373  0031  0829               	movf	_pot1^(0+128),w
  1374  0032  120A  118A  2523  120A  118A  	fcall	_division
  1375  0037                     l2099:
  1376                           
  1377                           ;D2_main3M.c: 118:     _delay((unsigned long)((250)*(4000000/4000.0)));
  1378  0037  3002               	movlw	2
  1379  0038  1683               	bsf	3,5	;RP0=1, select bank1
  1380  0039  1303               	bcf	3,6	;RP1=0, select bank1
  1381  003A  00AC               	movwf	(??_information^(0+128)+2)
  1382  003B  3045               	movlw	69
  1383  003C  00AB               	movwf	(??_information^(0+128)+1)
  1384  003D  30A9               	movlw	169
  1385  003E  00AA               	movwf	??_information^(0+128)
  1386  003F                     u1827:
  1387  003F  0BAA               	decfsz	??_information^(0+128),f
  1388  0040  283F               	goto	u1827
  1389  0041  0BAB               	decfsz	(??_information^(0+128)+1),f
  1390  0042  283F               	goto	u1827
  1391  0043  0BAC               	decfsz	(??_information^(0+128)+2),f
  1392  0044  283F               	goto	u1827
  1393  0045                     l2101:
  1394                           
  1395                           ;D2_main3M.c: 119:     printf("\r El valor del POT1 es:\r");
  1396  0045  3025               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1397  0046  120A  118A  23A7  120A  118A  	fcall	_printf
  1398  004B                     l2103:
  1399                           
  1400                           ;D2_main3M.c: 120:     _delay((unsigned long)((250)*(4000000/4000.0)));
  1401  004B  3002               	movlw	2
  1402  004C  1683               	bsf	3,5	;RP0=1, select bank1
  1403  004D  1303               	bcf	3,6	;RP1=0, select bank1
  1404  004E  00AC               	movwf	(??_information^(0+128)+2)
  1405  004F  3045               	movlw	69
  1406  0050  00AB               	movwf	(??_information^(0+128)+1)
  1407  0051  30A9               	movlw	169
  1408  0052  00AA               	movwf	??_information^(0+128)
  1409  0053                     u1837:
  1410  0053  0BAA               	decfsz	??_information^(0+128),f
  1411  0054  2853               	goto	u1837
  1412  0055  0BAB               	decfsz	(??_information^(0+128)+1),f
  1413  0056  2853               	goto	u1837
  1414  0057  0BAC               	decfsz	(??_information^(0+128)+2),f
  1415  0058  2853               	goto	u1837
  1416  0059                     l2105:
  1417                           
  1418                           ;D2_main3M.c: 121:     printf("  ");
  1419  0059  3098               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1420  005A  120A  118A  23A7  120A  118A  	fcall	_printf
  1421  005F                     l2107:
  1422                           
  1423                           ;D2_main3M.c: 122:     _delay((unsigned long)((250)*(4000000/4000.0)));
  1424  005F  3002               	movlw	2
  1425  0060  1683               	bsf	3,5	;RP0=1, select bank1
  1426  0061  1303               	bcf	3,6	;RP1=0, select bank1
  1427  0062  00AC               	movwf	(??_information^(0+128)+2)
  1428  0063  3045               	movlw	69
  1429  0064  00AB               	movwf	(??_information^(0+128)+1)
  1430  0065  30A9               	movlw	169
  1431  0066  00AA               	movwf	??_information^(0+128)
  1432  0067                     u1847:
  1433  0067  0BAA               	decfsz	??_information^(0+128),f
  1434  0068  2867               	goto	u1847
  1435  0069  0BAB               	decfsz	(??_information^(0+128)+1),f
  1436  006A  2867               	goto	u1847
  1437  006B  0BAC               	decfsz	(??_information^(0+128)+2),f
  1438  006C  2867               	goto	u1847
  1439  006D                     l2109:
  1440                           
  1441                           ;D2_main3M.c: 124:     TXREG = Centenas;
  1442  006D  087B               	movf	_Centenas,w
  1443  006E  1283               	bcf	3,5	;RP0=0, select bank0
  1444  006F  1303               	bcf	3,6	;RP1=0, select bank0
  1445  0070  0099               	movwf	25	;volatile
  1446  0071                     l2111:
  1447                           
  1448                           ;D2_main3M.c: 125:     _delay((unsigned long)((250)*(4000000/4000.0)));
  1449  0071  3002               	movlw	2
  1450  0072  1683               	bsf	3,5	;RP0=1, select bank1
  1451  0073  1303               	bcf	3,6	;RP1=0, select bank1
  1452  0074  00AC               	movwf	(??_information^(0+128)+2)
  1453  0075  3045               	movlw	69
  1454  0076  00AB               	movwf	(??_information^(0+128)+1)
  1455  0077  30A9               	movlw	169
  1456  0078  00AA               	movwf	??_information^(0+128)
  1457  0079                     u1857:
  1458  0079  0BAA               	decfsz	??_information^(0+128),f
  1459  007A  2879               	goto	u1857
  1460  007B  0BAB               	decfsz	(??_information^(0+128)+1),f
  1461  007C  2879               	goto	u1857
  1462  007D  0BAC               	decfsz	(??_information^(0+128)+2),f
  1463  007E  2879               	goto	u1857
  1464  007F                     l2113:
  1465                           
  1466                           ;D2_main3M.c: 126:     TXREG = 46;
  1467  007F  302E               	movlw	46
  1468  0080  1283               	bcf	3,5	;RP0=0, select bank0
  1469  0081  1303               	bcf	3,6	;RP1=0, select bank0
  1470  0082  0099               	movwf	25	;volatile
  1471  0083                     l2115:
  1472                           
  1473                           ;D2_main3M.c: 127:     _delay((unsigned long)((250)*(4000000/4000.0)));
  1474  0083  3002               	movlw	2
  1475  0084  1683               	bsf	3,5	;RP0=1, select bank1
  1476  0085  1303               	bcf	3,6	;RP1=0, select bank1
  1477  0086  00AC               	movwf	(??_information^(0+128)+2)
  1478  0087  3045               	movlw	69
  1479  0088  00AB               	movwf	(??_information^(0+128)+1)
  1480  0089  30A9               	movlw	169
  1481  008A  00AA               	movwf	??_information^(0+128)
  1482  008B                     u1867:
  1483  008B  0BAA               	decfsz	??_information^(0+128),f
  1484  008C  288B               	goto	u1867
  1485  008D  0BAB               	decfsz	(??_information^(0+128)+1),f
  1486  008E  288B               	goto	u1867
  1487  008F  0BAC               	decfsz	(??_information^(0+128)+2),f
  1488  0090  288B               	goto	u1867
  1489  0091                     l2117:
  1490                           
  1491                           ;D2_main3M.c: 129:     TXREG = Decenas;
  1492  0091  087A               	movf	_Decenas,w
  1493  0092  1283               	bcf	3,5	;RP0=0, select bank0
  1494  0093  1303               	bcf	3,6	;RP1=0, select bank0
  1495  0094  0099               	movwf	25	;volatile
  1496  0095                     l2119:
  1497                           
  1498                           ;D2_main3M.c: 130:     _delay((unsigned long)((250)*(4000000/4000.0)));
  1499  0095  3002               	movlw	2
  1500  0096  1683               	bsf	3,5	;RP0=1, select bank1
  1501  0097  1303               	bcf	3,6	;RP1=0, select bank1
  1502  0098  00AC               	movwf	(??_information^(0+128)+2)
  1503  0099  3045               	movlw	69
  1504  009A  00AB               	movwf	(??_information^(0+128)+1)
  1505  009B  30A9               	movlw	169
  1506  009C  00AA               	movwf	??_information^(0+128)
  1507  009D                     u1877:
  1508  009D  0BAA               	decfsz	??_information^(0+128),f
  1509  009E  289D               	goto	u1877
  1510  009F  0BAB               	decfsz	(??_information^(0+128)+1),f
  1511  00A0  289D               	goto	u1877
  1512  00A1  0BAC               	decfsz	(??_information^(0+128)+2),f
  1513  00A2  289D               	goto	u1877
  1514  00A3                     l2121:
  1515                           
  1516                           ;D2_main3M.c: 132:     TXREG = Unidades;
  1517  00A3  1283               	bcf	3,5	;RP0=0, select bank0
  1518  00A4  1303               	bcf	3,6	;RP1=0, select bank0
  1519  00A5  086C               	movf	_Unidades,w
  1520  00A6  0099               	movwf	25	;volatile
  1521  00A7                     l2123:
  1522                           
  1523                           ;D2_main3M.c: 133:     _delay((unsigned long)((250)*(4000000/4000.0)));
  1524  00A7  3002               	movlw	2
  1525  00A8  1683               	bsf	3,5	;RP0=1, select bank1
  1526  00A9  1303               	bcf	3,6	;RP1=0, select bank1
  1527  00AA  00AC               	movwf	(??_information^(0+128)+2)
  1528  00AB  3045               	movlw	69
  1529  00AC  00AB               	movwf	(??_information^(0+128)+1)
  1530  00AD  30A9               	movlw	169
  1531  00AE  00AA               	movwf	??_information^(0+128)
  1532  00AF                     u1887:
  1533  00AF  0BAA               	decfsz	??_information^(0+128),f
  1534  00B0  28AF               	goto	u1887
  1535  00B1  0BAB               	decfsz	(??_information^(0+128)+1),f
  1536  00B2  28AF               	goto	u1887
  1537  00B3  0BAC               	decfsz	(??_information^(0+128)+2),f
  1538  00B4  28AF               	goto	u1887
  1539  00B5                     l2125:
  1540                           
  1541                           ;D2_main3M.c: 134:     printf(" V ");
  1542  00B5  3094               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1543  00B6  120A  118A  23A7  120A  118A  	fcall	_printf
  1544  00BB                     l2127:
  1545                           
  1546                           ;D2_main3M.c: 135:     _delay((unsigned long)((250)*(4000000/4000.0)));
  1547  00BB  3002               	movlw	2
  1548  00BC  1683               	bsf	3,5	;RP0=1, select bank1
  1549  00BD  1303               	bcf	3,6	;RP1=0, select bank1
  1550  00BE  00AC               	movwf	(??_information^(0+128)+2)
  1551  00BF  3045               	movlw	69
  1552  00C0  00AB               	movwf	(??_information^(0+128)+1)
  1553  00C1  30A9               	movlw	169
  1554  00C2  00AA               	movwf	??_information^(0+128)
  1555  00C3                     u1897:
  1556  00C3  0BAA               	decfsz	??_information^(0+128),f
  1557  00C4  28C3               	goto	u1897
  1558  00C5  0BAB               	decfsz	(??_information^(0+128)+1),f
  1559  00C6  28C3               	goto	u1897
  1560  00C7  0BAC               	decfsz	(??_information^(0+128)+2),f
  1561  00C8  28C3               	goto	u1897
  1562  00C9                     l2129:
  1563                           
  1564                           ;D2_main3M.c: 136:     printf("\r");
  1565  00C9  307E               	movlw	(low (((STR_9+18)-__stringbase)| (0+32768)))& (0+255)
  1566  00CA  120A  118A  23A7  120A  118A  	fcall	_printf
  1567                           
  1568                           ;D2_main3M.c: 140:     division(pot2);
  1569  00CF  1683               	bsf	3,5	;RP0=1, select bank1
  1570  00D0  1303               	bcf	3,6	;RP1=0, select bank1
  1571  00D1  0828               	movf	_pot2^(0+128),w
  1572  00D2  120A  118A  2523  120A  118A  	fcall	_division
  1573  00D7                     l2131:
  1574                           
  1575                           ;D2_main3M.c: 141:     _delay((unsigned long)((250)*(4000000/4000.0)));
  1576  00D7  3002               	movlw	2
  1577  00D8  1683               	bsf	3,5	;RP0=1, select bank1
  1578  00D9  1303               	bcf	3,6	;RP1=0, select bank1
  1579  00DA  00AC               	movwf	(??_information^(0+128)+2)
  1580  00DB  3045               	movlw	69
  1581  00DC  00AB               	movwf	(??_information^(0+128)+1)
  1582  00DD  30A9               	movlw	169
  1583  00DE  00AA               	movwf	??_information^(0+128)
  1584  00DF                     u1907:
  1585  00DF  0BAA               	decfsz	??_information^(0+128),f
  1586  00E0  28DF               	goto	u1907
  1587  00E1  0BAB               	decfsz	(??_information^(0+128)+1),f
  1588  00E2  28DF               	goto	u1907
  1589  00E3  0BAC               	decfsz	(??_information^(0+128)+2),f
  1590  00E4  28DF               	goto	u1907
  1591  00E5                     l2133:
  1592                           
  1593                           ;D2_main3M.c: 142:     printf("\r El valor del POT2 es: \r");
  1594  00E5  300B               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  1595  00E6  120A  118A  23A7  120A  118A  	fcall	_printf
  1596  00EB                     l2135:
  1597                           
  1598                           ;D2_main3M.c: 143:     _delay((unsigned long)((250)*(4000000/4000.0)));
  1599  00EB  3002               	movlw	2
  1600  00EC  1683               	bsf	3,5	;RP0=1, select bank1
  1601  00ED  1303               	bcf	3,6	;RP1=0, select bank1
  1602  00EE  00AC               	movwf	(??_information^(0+128)+2)
  1603  00EF  3045               	movlw	69
  1604  00F0  00AB               	movwf	(??_information^(0+128)+1)
  1605  00F1  30A9               	movlw	169
  1606  00F2  00AA               	movwf	??_information^(0+128)
  1607  00F3                     u1917:
  1608  00F3  0BAA               	decfsz	??_information^(0+128),f
  1609  00F4  28F3               	goto	u1917
  1610  00F5  0BAB               	decfsz	(??_information^(0+128)+1),f
  1611  00F6  28F3               	goto	u1917
  1612  00F7  0BAC               	decfsz	(??_information^(0+128)+2),f
  1613  00F8  28F3               	goto	u1917
  1614  00F9                     l2137:
  1615                           
  1616                           ;D2_main3M.c: 144:     printf("  ");
  1617  00F9  3098               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1618  00FA  120A  118A  23A7  120A  118A  	fcall	_printf
  1619  00FF                     l2139:
  1620                           
  1621                           ;D2_main3M.c: 145:     _delay((unsigned long)((250)*(4000000/4000.0)));
  1622  00FF  3002               	movlw	2
  1623  0100  1683               	bsf	3,5	;RP0=1, select bank1
  1624  0101  1303               	bcf	3,6	;RP1=0, select bank1
  1625  0102  00AC               	movwf	(??_information^(0+128)+2)
  1626  0103  3045               	movlw	69
  1627  0104  00AB               	movwf	(??_information^(0+128)+1)
  1628  0105  30A9               	movlw	169
  1629  0106  00AA               	movwf	??_information^(0+128)
  1630  0107                     u1927:
  1631  0107  0BAA               	decfsz	??_information^(0+128),f
  1632  0108  2907               	goto	u1927
  1633  0109  0BAB               	decfsz	(??_information^(0+128)+1),f
  1634  010A  2907               	goto	u1927
  1635  010B  0BAC               	decfsz	(??_information^(0+128)+2),f
  1636  010C  2907               	goto	u1927
  1637  010D                     l2141:
  1638                           
  1639                           ;D2_main3M.c: 147:     TXREG = Centenas;
  1640  010D  087B               	movf	_Centenas,w
  1641  010E  1283               	bcf	3,5	;RP0=0, select bank0
  1642  010F  1303               	bcf	3,6	;RP1=0, select bank0
  1643  0110  0099               	movwf	25	;volatile
  1644  0111                     l2143:
  1645                           
  1646                           ;D2_main3M.c: 148:     _delay((unsigned long)((250)*(4000000/4000.0)));
  1647  0111  3002               	movlw	2
  1648  0112  1683               	bsf	3,5	;RP0=1, select bank1
  1649  0113  1303               	bcf	3,6	;RP1=0, select bank1
  1650  0114  00AC               	movwf	(??_information^(0+128)+2)
  1651  0115  3045               	movlw	69
  1652  0116  00AB               	movwf	(??_information^(0+128)+1)
  1653  0117  30A9               	movlw	169
  1654  0118  00AA               	movwf	??_information^(0+128)
  1655  0119                     u1937:
  1656  0119  0BAA               	decfsz	??_information^(0+128),f
  1657  011A  2919               	goto	u1937
  1658  011B  0BAB               	decfsz	(??_information^(0+128)+1),f
  1659  011C  2919               	goto	u1937
  1660  011D  0BAC               	decfsz	(??_information^(0+128)+2),f
  1661  011E  2919               	goto	u1937
  1662  011F                     l2145:
  1663                           
  1664                           ;D2_main3M.c: 149:     TXREG = 46;
  1665  011F  302E               	movlw	46
  1666  0120  1283               	bcf	3,5	;RP0=0, select bank0
  1667  0121  1303               	bcf	3,6	;RP1=0, select bank0
  1668  0122  0099               	movwf	25	;volatile
  1669  0123                     l2147:
  1670                           
  1671                           ;D2_main3M.c: 150:     _delay((unsigned long)((250)*(4000000/4000.0)));
  1672  0123  3002               	movlw	2
  1673  0124  1683               	bsf	3,5	;RP0=1, select bank1
  1674  0125  1303               	bcf	3,6	;RP1=0, select bank1
  1675  0126  00AC               	movwf	(??_information^(0+128)+2)
  1676  0127  3045               	movlw	69
  1677  0128  00AB               	movwf	(??_information^(0+128)+1)
  1678  0129  30A9               	movlw	169
  1679  012A  00AA               	movwf	??_information^(0+128)
  1680  012B                     u1947:
  1681  012B  0BAA               	decfsz	??_information^(0+128),f
  1682  012C  292B               	goto	u1947
  1683  012D  0BAB               	decfsz	(??_information^(0+128)+1),f
  1684  012E  292B               	goto	u1947
  1685  012F  0BAC               	decfsz	(??_information^(0+128)+2),f
  1686  0130  292B               	goto	u1947
  1687  0131                     l2149:
  1688                           
  1689                           ;D2_main3M.c: 152:     TXREG = Decenas;
  1690  0131  087A               	movf	_Decenas,w
  1691  0132  1283               	bcf	3,5	;RP0=0, select bank0
  1692  0133  1303               	bcf	3,6	;RP1=0, select bank0
  1693  0134  0099               	movwf	25	;volatile
  1694  0135                     l2151:
  1695                           
  1696                           ;D2_main3M.c: 153:     _delay((unsigned long)((250)*(4000000/4000.0)));
  1697  0135  3002               	movlw	2
  1698  0136  1683               	bsf	3,5	;RP0=1, select bank1
  1699  0137  1303               	bcf	3,6	;RP1=0, select bank1
  1700  0138  00AC               	movwf	(??_information^(0+128)+2)
  1701  0139  3045               	movlw	69
  1702  013A  00AB               	movwf	(??_information^(0+128)+1)
  1703  013B  30A9               	movlw	169
  1704  013C  00AA               	movwf	??_information^(0+128)
  1705  013D                     u1957:
  1706  013D  0BAA               	decfsz	??_information^(0+128),f
  1707  013E  293D               	goto	u1957
  1708  013F  0BAB               	decfsz	(??_information^(0+128)+1),f
  1709  0140  293D               	goto	u1957
  1710  0141  0BAC               	decfsz	(??_information^(0+128)+2),f
  1711  0142  293D               	goto	u1957
  1712  0143                     l2153:
  1713                           
  1714                           ;D2_main3M.c: 155:     TXREG = Unidades;
  1715  0143  1283               	bcf	3,5	;RP0=0, select bank0
  1716  0144  1303               	bcf	3,6	;RP1=0, select bank0
  1717  0145  086C               	movf	_Unidades,w
  1718  0146  0099               	movwf	25	;volatile
  1719  0147                     l2155:
  1720                           
  1721                           ;D2_main3M.c: 156:     _delay((unsigned long)((250)*(4000000/4000.0)));
  1722  0147  3002               	movlw	2
  1723  0148  1683               	bsf	3,5	;RP0=1, select bank1
  1724  0149  1303               	bcf	3,6	;RP1=0, select bank1
  1725  014A  00AC               	movwf	(??_information^(0+128)+2)
  1726  014B  3045               	movlw	69
  1727  014C  00AB               	movwf	(??_information^(0+128)+1)
  1728  014D  30A9               	movlw	169
  1729  014E  00AA               	movwf	??_information^(0+128)
  1730  014F                     u1967:
  1731  014F  0BAA               	decfsz	??_information^(0+128),f
  1732  0150  294F               	goto	u1967
  1733  0151  0BAB               	decfsz	(??_information^(0+128)+1),f
  1734  0152  294F               	goto	u1967
  1735  0153  0BAC               	decfsz	(??_information^(0+128)+2),f
  1736  0154  294F               	goto	u1967
  1737  0155                     l2157:
  1738                           
  1739                           ;D2_main3M.c: 157:     printf(" V ");
  1740  0155  3094               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1741  0156  120A  118A  23A7  120A  118A  	fcall	_printf
  1742  015B                     l2159:
  1743                           
  1744                           ;D2_main3M.c: 158:     _delay((unsigned long)((250)*(4000000/4000.0)));
  1745  015B  3002               	movlw	2
  1746  015C  1683               	bsf	3,5	;RP0=1, select bank1
  1747  015D  1303               	bcf	3,6	;RP1=0, select bank1
  1748  015E  00AC               	movwf	(??_information^(0+128)+2)
  1749  015F  3045               	movlw	69
  1750  0160  00AB               	movwf	(??_information^(0+128)+1)
  1751  0161  30A9               	movlw	169
  1752  0162  00AA               	movwf	??_information^(0+128)
  1753  0163                     u1977:
  1754  0163  0BAA               	decfsz	??_information^(0+128),f
  1755  0164  2963               	goto	u1977
  1756  0165  0BAB               	decfsz	(??_information^(0+128)+1),f
  1757  0166  2963               	goto	u1977
  1758  0167  0BAC               	decfsz	(??_information^(0+128)+2),f
  1759  0168  2963               	goto	u1977
  1760  0169                     l2161:
  1761                           
  1762                           ;D2_main3M.c: 159:     printf("\r");
  1763  0169  307E               	movlw	(low (((STR_9+18)-__stringbase)| (0+32768)))& (0+255)
  1764  016A  120A  118A  23A7  120A  118A  	fcall	_printf
  1765  016F                     l2163:
  1766                           
  1767                           ;D2_main3M.c: 164:     printf("Ingresar Centena: \r");
  1768  016F  306C               	movlw	(low ((STR_9-__stringbase)| (0+32768)))& (0+255)
  1769  0170  120A  118A  23A7  120A  118A  	fcall	_printf
  1770  0175                     l104:
  1771  0175  1283               	bcf	3,5	;RP0=0, select bank0
  1772  0176  1303               	bcf	3,6	;RP1=0, select bank0
  1773  0177  1E8C               	btfss	12,5	;volatile
  1774  0178  297A               	goto	u1691
  1775  0179  297B               	goto	u1690
  1776  017A                     u1691:
  1777  017A  2975               	goto	l104
  1778  017B                     u1690:
  1779  017B                     l2165:
  1780                           
  1781                           ;D2_main3M.c: 167:         cen = RCREG -48;
  1782  017B  081A               	movf	26,w	;volatile
  1783  017C  3ED0               	addlw	208
  1784  017D  1683               	bsf	3,5	;RP0=1, select bank1
  1785  017E  1303               	bcf	3,6	;RP1=0, select bank1
  1786  017F  00AA               	movwf	??_information^(0+128)
  1787  0180  082A               	movf	??_information^(0+128),w
  1788  0181  1283               	bcf	3,5	;RP0=0, select bank0
  1789  0182  1303               	bcf	3,6	;RP1=0, select bank0
  1790  0183  00EA               	movwf	_cen
  1791  0184                     l2167:	
  1792                           ;D2_main3M.c: 169:        while(RCREG > '4'){
  1793                           
  1794                           
  1795                           ;D2_main3M.c: 169:        while(RCREG > '4'){
  1796  0184  3035               	movlw	53
  1797  0185  021A               	subwf	26,w	;volatile
  1798  0186  1803               	skipnc
  1799  0187  2989               	goto	u1701
  1800  0188  298A               	goto	u1700
  1801  0189                     u1701:
  1802  0189  2975               	goto	l104
  1803  018A                     u1700:
  1804  018A                     l2169:
  1805                           
  1806                           ;D2_main3M.c: 173:     printf("Ingresar Decenas: \r");
  1807  018A  3080               	movlw	(low ((STR_10-__stringbase)| (0+32768)))& (0+255)
  1808  018B  120A  118A  23A7  120A  118A  	fcall	_printf
  1809  0190                     l111:
  1810  0190  1283               	bcf	3,5	;RP0=0, select bank0
  1811  0191  1303               	bcf	3,6	;RP1=0, select bank0
  1812  0192  1E8C               	btfss	12,5	;volatile
  1813  0193  2995               	goto	u1711
  1814  0194  2996               	goto	u1710
  1815  0195                     u1711:
  1816  0195  2990               	goto	l111
  1817  0196                     u1710:
  1818  0196                     l2171:
  1819                           
  1820                           ;D2_main3M.c: 176:          dec = RCREG -48;
  1821  0196  081A               	movf	26,w	;volatile
  1822  0197  3ED0               	addlw	208
  1823  0198  1683               	bsf	3,5	;RP0=1, select bank1
  1824  0199  1303               	bcf	3,6	;RP1=0, select bank1
  1825  019A  00AA               	movwf	??_information^(0+128)
  1826  019B  082A               	movf	??_information^(0+128),w
  1827  019C  00A7               	movwf	_dec^(0+128)
  1828                           
  1829                           ;D2_main3M.c: 178:         if(cen == 4){
  1830  019D  3004               	movlw	4
  1831  019E  1283               	bcf	3,5	;RP0=0, select bank0
  1832  019F  1303               	bcf	3,6	;RP1=0, select bank0
  1833  01A0  066A               	xorwf	_cen,w
  1834  01A1  1D03               	btfss	3,2
  1835  01A2  29A4               	goto	u1721
  1836  01A3  29A5               	goto	u1720
  1837  01A4                     u1721:
  1838  01A4  29AB               	goto	l2177
  1839  01A5                     u1720:
  1840  01A5                     l2175:
  1841                           
  1842                           ;D2_main3M.c: 179:            while(RCREG > '5'){
  1843  01A5  3036               	movlw	54
  1844  01A6  021A               	subwf	26,w	;volatile
  1845  01A7  1803               	skipnc
  1846  01A8  29AA               	goto	u1731
  1847  01A9  29AB               	goto	u1730
  1848  01AA                     u1731:
  1849  01AA  2990               	goto	l111
  1850  01AB                     u1730:
  1851  01AB                     l2177:
  1852                           
  1853                           ;D2_main3M.c: 184:     printf("Ingresar Unidades: \r");
  1854  01AB  3057               	movlw	(low ((STR_11-__stringbase)| (0+32768)))& (0+255)
  1855  01AC  120A  118A  23A7  120A  118A  	fcall	_printf
  1856  01B1                     l119:
  1857  01B1  1283               	bcf	3,5	;RP0=0, select bank0
  1858  01B2  1303               	bcf	3,6	;RP1=0, select bank0
  1859  01B3  1E8C               	btfss	12,5	;volatile
  1860  01B4  29B6               	goto	u1741
  1861  01B5  29B7               	goto	u1740
  1862  01B6                     u1741:
  1863  01B6  29B1               	goto	l119
  1864  01B7                     u1740:
  1865  01B7                     l2179:
  1866                           
  1867                           ;D2_main3M.c: 187:         uni = RCREG - 48;
  1868  01B7  081A               	movf	26,w	;volatile
  1869  01B8  3ED0               	addlw	208
  1870  01B9  1683               	bsf	3,5	;RP0=1, select bank1
  1871  01BA  1303               	bcf	3,6	;RP1=0, select bank1
  1872  01BB  00AA               	movwf	??_information^(0+128)
  1873  01BC  082A               	movf	??_information^(0+128),w
  1874  01BD  00A6               	movwf	_uni^(0+128)
  1875                           
  1876                           ;D2_main3M.c: 189:        if(cen == 4 && dec == 5){
  1877  01BE  3004               	movlw	4
  1878  01BF  1283               	bcf	3,5	;RP0=0, select bank0
  1879  01C0  1303               	bcf	3,6	;RP1=0, select bank0
  1880  01C1  066A               	xorwf	_cen,w
  1881  01C2  1D03               	btfss	3,2
  1882  01C3  29C5               	goto	u1751
  1883  01C4  29C6               	goto	u1750
  1884  01C5                     u1751:
  1885  01C5  29D6               	goto	l2187
  1886  01C6                     u1750:
  1887  01C6                     l2181:
  1888  01C6  3005               	movlw	5
  1889  01C7  1683               	bsf	3,5	;RP0=1, select bank1
  1890  01C8  1303               	bcf	3,6	;RP1=0, select bank1
  1891  01C9  0627               	xorwf	_dec^(0+128),w
  1892  01CA  1D03               	btfss	3,2
  1893  01CB  29CD               	goto	u1761
  1894  01CC  29CE               	goto	u1760
  1895  01CD                     u1761:
  1896  01CD  29D6               	goto	l2187
  1897  01CE                     u1760:
  1898  01CE                     l2185:
  1899                           
  1900                           ;D2_main3M.c: 190:            while(RCREG > '5'){
  1901  01CE  3036               	movlw	54
  1902  01CF  1283               	bcf	3,5	;RP0=0, select bank0
  1903  01D0  1303               	bcf	3,6	;RP1=0, select bank0
  1904  01D1  021A               	subwf	26,w	;volatile
  1905  01D2  1803               	skipnc
  1906  01D3  29D5               	goto	u1771
  1907  01D4  29D6               	goto	u1770
  1908  01D5                     u1771:
  1909  01D5  29B1               	goto	l119
  1910  01D6                     u1770:
  1911  01D6                     l2187:
  1912                           
  1913                           ;D2_main3M.c: 194:       con = concat(cen, dec);
  1914  01D6  1283               	bcf	3,5	;RP0=0, select bank0
  1915  01D7  086A               	movf	_cen,w
  1916  01D8  1683               	bsf	3,5	;RP0=1, select bank1
  1917  01D9  1303               	bcf	3,6	;RP1=0, select bank1
  1918  01DA  00AA               	movwf	??_information^(0+128)
  1919  01DB  01AB               	clrf	(??_information^(0+128)+1)
  1920  01DC  082A               	movf	??_information^(0+128),w
  1921  01DD  1283               	bcf	3,5	;RP0=0, select bank0
  1922  01DE  1303               	bcf	3,6	;RP1=0, select bank0
  1923  01DF  00BA               	movwf	concat@a
  1924  01E0  1683               	bsf	3,5	;RP0=1, select bank1
  1925  01E1  1303               	bcf	3,6	;RP1=0, select bank1
  1926  01E2  082B               	movf	(??_information+1)^(0+128),w
  1927  01E3  1283               	bcf	3,5	;RP0=0, select bank0
  1928  01E4  1303               	bcf	3,6	;RP1=0, select bank0
  1929  01E5  00BB               	movwf	concat@a+1
  1930  01E6  1683               	bsf	3,5	;RP0=1, select bank1
  1931  01E7  1303               	bcf	3,6	;RP1=0, select bank1
  1932  01E8  0827               	movf	_dec^(0+128),w
  1933  01E9  00AC               	movwf	(??_information+2)^(0+128)
  1934  01EA  01AD               	clrf	((??_information+2)^(0+128)+1)
  1935  01EB  082C               	movf	(??_information+2)^(0+128),w
  1936  01EC  1283               	bcf	3,5	;RP0=0, select bank0
  1937  01ED  1303               	bcf	3,6	;RP1=0, select bank0
  1938  01EE  00BC               	movwf	concat@b
  1939  01EF  1683               	bsf	3,5	;RP0=1, select bank1
  1940  01F0  1303               	bcf	3,6	;RP1=0, select bank1
  1941  01F1  082D               	movf	(??_information+3)^(0+128),w
  1942  01F2  1283               	bcf	3,5	;RP0=0, select bank0
  1943  01F3  1303               	bcf	3,6	;RP1=0, select bank0
  1944  01F4  00BD               	movwf	concat@b+1
  1945  01F5  120A  118A  26F2  120A  118A  	fcall	_concat
  1946  01FA  1283               	bcf	3,5	;RP0=0, select bank0
  1947  01FB  1303               	bcf	3,6	;RP1=0, select bank0
  1948  01FC  083A               	movf	?_concat,w
  1949  01FD  1683               	bsf	3,5	;RP0=1, select bank1
  1950  01FE  1303               	bcf	3,6	;RP1=0, select bank1
  1951  01FF  00AE               	movwf	(??_information+4)^(0+128)
  1952  0200  082E               	movf	(??_information+4)^(0+128),w
  1953  0201  00A4               	movwf	_con^(0+128)
  1954                           
  1955                           ;D2_main3M.c: 195:       complete = concat(con, uni);
  1956  0202  0824               	movf	_con^(0+128),w
  1957  0203  00AA               	movwf	??_information^(0+128)
  1958  0204  01AB               	clrf	(??_information^(0+128)+1)
  1959  0205  082A               	movf	??_information^(0+128),w
  1960  0206  1283               	bcf	3,5	;RP0=0, select bank0
  1961  0207  1303               	bcf	3,6	;RP1=0, select bank0
  1962  0208  00BA               	movwf	concat@a
  1963  0209  1683               	bsf	3,5	;RP0=1, select bank1
  1964  020A  1303               	bcf	3,6	;RP1=0, select bank1
  1965  020B  082B               	movf	(??_information+1)^(0+128),w
  1966  020C  1283               	bcf	3,5	;RP0=0, select bank0
  1967  020D  1303               	bcf	3,6	;RP1=0, select bank0
  1968  020E  00BB               	movwf	concat@a+1
  1969  020F  1683               	bsf	3,5	;RP0=1, select bank1
  1970  0210  1303               	bcf	3,6	;RP1=0, select bank1
  1971  0211  0826               	movf	_uni^(0+128),w
  1972  0212  00AC               	movwf	(??_information+2)^(0+128)
  1973  0213  01AD               	clrf	((??_information+2)^(0+128)+1)
  1974  0214  082C               	movf	(??_information+2)^(0+128),w
  1975  0215  1283               	bcf	3,5	;RP0=0, select bank0
  1976  0216  1303               	bcf	3,6	;RP1=0, select bank0
  1977  0217  00BC               	movwf	concat@b
  1978  0218  1683               	bsf	3,5	;RP0=1, select bank1
  1979  0219  1303               	bcf	3,6	;RP1=0, select bank1
  1980  021A  082D               	movf	(??_information+3)^(0+128),w
  1981  021B  1283               	bcf	3,5	;RP0=0, select bank0
  1982  021C  1303               	bcf	3,6	;RP1=0, select bank0
  1983  021D  00BD               	movwf	concat@b+1
  1984  021E  120A  118A  26F2  120A  118A  	fcall	_concat
  1985  0223  1283               	bcf	3,5	;RP0=0, select bank0
  1986  0224  1303               	bcf	3,6	;RP1=0, select bank0
  1987  0225  083B               	movf	?_concat+1,w
  1988  0226  1683               	bsf	3,5	;RP0=1, select bank1
  1989  0227  1303               	bcf	3,6	;RP1=0, select bank1
  1990  0228  00A3               	movwf	(_complete+1)^(0+128)
  1991  0229  1283               	bcf	3,5	;RP0=0, select bank0
  1992  022A  1303               	bcf	3,6	;RP1=0, select bank0
  1993  022B  083A               	movf	?_concat,w
  1994  022C  1683               	bsf	3,5	;RP0=1, select bank1
  1995  022D  1303               	bcf	3,6	;RP1=0, select bank1
  1996  022E  00A2               	movwf	_complete^(0+128)
  1997  022F                     l2189:
  1998                           
  1999                           ;D2_main3M.c: 196:       _delay((unsigned long)((250)*(4000000/4000.0)));
  2000  022F  3002               	movlw	2
  2001  0230  1683               	bsf	3,5	;RP0=1, select bank1
  2002  0231  1303               	bcf	3,6	;RP1=0, select bank1
  2003  0232  00AC               	movwf	(??_information^(0+128)+2)
  2004  0233  3045               	movlw	69
  2005  0234  00AB               	movwf	(??_information^(0+128)+1)
  2006  0235  30A9               	movlw	169
  2007  0236  00AA               	movwf	??_information^(0+128)
  2008  0237                     u1987:
  2009  0237  0BAA               	decfsz	??_information^(0+128),f
  2010  0238  2A37               	goto	u1987
  2011  0239  0BAB               	decfsz	(??_information^(0+128)+1),f
  2012  023A  2A37               	goto	u1987
  2013  023B  0BAC               	decfsz	(??_information^(0+128)+2),f
  2014  023C  2A37               	goto	u1987
  2015  023D                     l2191:
  2016                           
  2017                           ;D2_main3M.c: 197:     printf("El numero elegido es: %d", complete);
  2018  023D  1683               	bsf	3,5	;RP0=1, select bank1
  2019  023E  1303               	bcf	3,6	;RP1=0, select bank1
  2020  023F  0823               	movf	(_complete+1)^(0+128),w
  2021  0240  1283               	bcf	3,5	;RP0=0, select bank0
  2022  0241  1303               	bcf	3,6	;RP1=0, select bank0
  2023  0242  00B2               	movwf	?_printf+1
  2024  0243  1683               	bsf	3,5	;RP0=1, select bank1
  2025  0244  1303               	bcf	3,6	;RP1=0, select bank1
  2026  0245  0822               	movf	_complete^(0+128),w
  2027  0246  1283               	bcf	3,5	;RP0=0, select bank0
  2028  0247  1303               	bcf	3,6	;RP1=0, select bank0
  2029  0248  00B1               	movwf	?_printf
  2030  0249  303E               	movlw	(low ((STR_12-__stringbase)| (0+32768)))& (0+255)
  2031  024A  120A  118A  23A7  120A  118A  	fcall	_printf
  2032  024F                     l126:
  2033  024F  0008               	return
  2034  0250                     __end_of_information:
  2035                           
  2036                           	psect	text4
  2037  03A7                     __ptext4:	
  2038 ;; *************** function _printf *****************
  2039 ;; Defined at:
  2040 ;;		line 13 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\printf.c"
  2041 ;; Parameters:    Size  Location     Type
  2042 ;;  f               1    wreg     PTR const unsigned char 
  2043 ;;		 -> STR_12(25), STR_11(21), STR_10(20), STR_9(20), 
  2044 ;;		 -> STR_8(2), STR_7(4), STR_6(3), STR_5(26), 
  2045 ;;		 -> STR_4(2), STR_3(4), STR_2(3), STR_1(25), 
  2046 ;; Auto vars:     Size  Location     Type
  2047 ;;  f               1   22[BANK0 ] PTR const unsigned char 
  2048 ;;		 -> STR_12(25), STR_11(21), STR_10(20), STR_9(20), 
  2049 ;;		 -> STR_8(2), STR_7(4), STR_6(3), STR_5(26), 
  2050 ;;		 -> STR_4(2), STR_3(4), STR_2(3), STR_1(25), 
  2051 ;;  pb              2   23[BANK0 ] struct __prbuf
  2052 ;;  ap              1   21[BANK0 ] PTR void [1]
  2053 ;;		 -> ?_sprintf(2), ?_printf(2), 
  2054 ;; Return value:  Size  Location     Type
  2055 ;;                  2   17[BANK0 ] int 
  2056 ;; Registers used:
  2057 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2058 ;; Tracked objects:
  2059 ;;		On entry : 0/0
  2060 ;;		On exit  : 0/0
  2061 ;;		Unchanged: 0/0
  2062 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2063 ;;      Params:         0       2       0       0       0
  2064 ;;      Locals:         0       4       0       0       0
  2065 ;;      Temps:          0       2       0       0       0
  2066 ;;      Totals:         0       8       0       0       0
  2067 ;;Total ram usage:        8 bytes
  2068 ;; Hardware stack levels used:    1
  2069 ;; Hardware stack levels required when called:    3
  2070 ;; This function calls:
  2071 ;;		__doprnt
  2072 ;; This function is called by:
  2073 ;;		_information
  2074 ;; This function uses a non-reentrant model
  2075 ;;
  2076                           
  2077                           
  2078                           ;psect for function _printf
  2079  03A7                     _printf:
  2080                           
  2081                           ;incstack = 0
  2082                           ; Regs used in _printf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2083                           ;printf@f stored from wreg
  2084  03A7  1283               	bcf	3,5	;RP0=0, select bank0
  2085  03A8  1303               	bcf	3,6	;RP1=0, select bank0
  2086  03A9  00B6               	movwf	printf@f
  2087  03AA                     l2077:
  2088  03AA  01B7               	clrf	printf@pb
  2089  03AB                     l2079:
  2090  03AB  3001               	movlw	(low (fp__putch-fpbase))& (0+255)
  2091  03AC  00B3               	movwf	??_printf
  2092  03AD  0833               	movf	??_printf,w
  2093  03AE  00B8               	movwf	low ((printf@pb| 0+1))
  2094  03AF                     l2081:
  2095  03AF  3031               	movlw	(low (?_printf| 0))& (0+255)
  2096  03B0  00B3               	movwf	??_printf
  2097  03B1  0833               	movf	??_printf,w
  2098  03B2  00B5               	movwf	printf@ap
  2099  03B3                     l2083:
  2100                           
  2101                           ;	Return value of _printf is never used
  2102  03B3  0836               	movf	printf@f,w
  2103  03B4  00B3               	movwf	??_printf
  2104  03B5  0833               	movf	??_printf,w
  2105  03B6  00A6               	movwf	__doprnt@f
  2106  03B7  3035               	movlw	(low (printf@ap| 0))& (0+255)
  2107  03B8  00B4               	movwf	??_printf+1
  2108  03B9  0834               	movf	??_printf+1,w
  2109  03BA  00A7               	movwf	__doprnt@ap
  2110  03BB  3037               	movlw	(low (printf@pb| 0))& (0+255)
  2111  03BC  120A  118A  2250  120A  118A  	fcall	__doprnt
  2112  03C1                     l735:
  2113  03C1  0008               	return
  2114  03C2                     __end_of_printf:
  2115                           
  2116                           	psect	text5
  2117  0523                     __ptext5:	
  2118 ;; *************** function _division *****************
  2119 ;; Defined at:
  2120 ;;		line 101 in file "D2_main3M.c"
  2121 ;; Parameters:    Size  Location     Type
  2122 ;;  value           1    wreg     unsigned char 
  2123 ;; Auto vars:     Size  Location     Type
  2124 ;;  value           1    9[COMMON] unsigned char 
  2125 ;; Return value:  Size  Location     Type
  2126 ;;                  1    wreg      unsigned char 
  2127 ;; Registers used:
  2128 ;;		wreg, status,2, status,0, pclath, cstack
  2129 ;; Tracked objects:
  2130 ;;		On entry : 0/0
  2131 ;;		On exit  : 0/0
  2132 ;;		Unchanged: 0/0
  2133 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2134 ;;      Params:         0       0       0       0       0
  2135 ;;      Locals:         1       0       0       0       0
  2136 ;;      Temps:          0       3       0       0       0
  2137 ;;      Totals:         1       3       0       0       0
  2138 ;;Total ram usage:        4 bytes
  2139 ;; Hardware stack levels used:    1
  2140 ;; Hardware stack levels required when called:    2
  2141 ;; This function calls:
  2142 ;;		___awdiv
  2143 ;;		___awmod
  2144 ;; This function is called by:
  2145 ;;		_information
  2146 ;; This function uses a non-reentrant model
  2147 ;;
  2148                           
  2149                           
  2150                           ;psect for function _division
  2151  0523                     _division:
  2152                           
  2153                           ;incstack = 0
  2154                           ; Regs used in _division: [wreg+status,2+status,0+pclath+cstack]
  2155                           ;division@value stored from wreg
  2156  0523  00F9               	movwf	division@value
  2157  0524                     l2069:
  2158                           
  2159                           ;D2_main3M.c: 102:     Centenas = value/50;
  2160  0524  3032               	movlw	50
  2161  0525  00F2               	movwf	___awdiv@divisor
  2162  0526  3000               	movlw	0
  2163  0527  00F3               	movwf	___awdiv@divisor+1
  2164  0528  0879               	movf	division@value,w
  2165  0529  1283               	bcf	3,5	;RP0=0, select bank0
  2166  052A  1303               	bcf	3,6	;RP1=0, select bank0
  2167  052B  00A4               	movwf	??_division
  2168  052C  01A5               	clrf	??_division+1
  2169  052D  0824               	movf	??_division,w
  2170  052E  00F4               	movwf	___awdiv@dividend
  2171  052F  0825               	movf	??_division+1,w
  2172  0530  00F5               	movwf	___awdiv@dividend+1
  2173  0531  120A  118A  258E  120A  118A  	fcall	___awdiv
  2174  0536  0872               	movf	?___awdiv,w
  2175  0537  1283               	bcf	3,5	;RP0=0, select bank0
  2176  0538  1303               	bcf	3,6	;RP1=0, select bank0
  2177  0539  00A6               	movwf	??_division+2
  2178  053A  0826               	movf	??_division+2,w
  2179  053B  00FB               	movwf	_Centenas
  2180                           
  2181                           ;D2_main3M.c: 103:     Residuo = value%100;
  2182  053C  3064               	movlw	100
  2183  053D  00F2               	movwf	___awmod@divisor
  2184  053E  3000               	movlw	0
  2185  053F  00F3               	movwf	___awmod@divisor+1
  2186  0540  0879               	movf	division@value,w
  2187  0541  00A4               	movwf	??_division
  2188  0542  01A5               	clrf	??_division+1
  2189  0543  0824               	movf	??_division,w
  2190  0544  00F4               	movwf	___awmod@dividend
  2191  0545  0825               	movf	??_division+1,w
  2192  0546  00F5               	movwf	___awmod@dividend+1
  2193  0547  120A  118A  2655  120A  118A  	fcall	___awmod
  2194  054C  0872               	movf	?___awmod,w
  2195  054D  1283               	bcf	3,5	;RP0=0, select bank0
  2196  054E  1303               	bcf	3,6	;RP1=0, select bank0
  2197  054F  00A6               	movwf	??_division+2
  2198  0550  0826               	movf	??_division+2,w
  2199  0551  00EB               	movwf	_Residuo
  2200                           
  2201                           ;D2_main3M.c: 104:     Decenas = Residuo/10;
  2202  0552  300A               	movlw	10
  2203  0553  00F2               	movwf	___awdiv@divisor
  2204  0554  3000               	movlw	0
  2205  0555  00F3               	movwf	___awdiv@divisor+1
  2206  0556  086B               	movf	_Residuo,w
  2207  0557  00A4               	movwf	??_division
  2208  0558  01A5               	clrf	??_division+1
  2209  0559  0824               	movf	??_division,w
  2210  055A  00F4               	movwf	___awdiv@dividend
  2211  055B  0825               	movf	??_division+1,w
  2212  055C  00F5               	movwf	___awdiv@dividend+1
  2213  055D  120A  118A  258E  120A  118A  	fcall	___awdiv
  2214  0562  0872               	movf	?___awdiv,w
  2215  0563  1283               	bcf	3,5	;RP0=0, select bank0
  2216  0564  1303               	bcf	3,6	;RP1=0, select bank0
  2217  0565  00A6               	movwf	??_division+2
  2218  0566  0826               	movf	??_division+2,w
  2219  0567  00FA               	movwf	_Decenas
  2220                           
  2221                           ;D2_main3M.c: 105:     Unidades = Residuo%10;
  2222  0568  300A               	movlw	10
  2223  0569  00F2               	movwf	___awmod@divisor
  2224  056A  3000               	movlw	0
  2225  056B  00F3               	movwf	___awmod@divisor+1
  2226  056C  086B               	movf	_Residuo,w
  2227  056D  00A4               	movwf	??_division
  2228  056E  01A5               	clrf	??_division+1
  2229  056F  0824               	movf	??_division,w
  2230  0570  00F4               	movwf	___awmod@dividend
  2231  0571  0825               	movf	??_division+1,w
  2232  0572  00F5               	movwf	___awmod@dividend+1
  2233  0573  120A  118A  2655  120A  118A  	fcall	___awmod
  2234  0578  0872               	movf	?___awmod,w
  2235  0579  1283               	bcf	3,5	;RP0=0, select bank0
  2236  057A  1303               	bcf	3,6	;RP1=0, select bank0
  2237  057B  00A6               	movwf	??_division+2
  2238  057C  0826               	movf	??_division+2,w
  2239  057D  00EC               	movwf	_Unidades
  2240  057E                     l2071:
  2241                           
  2242                           ;D2_main3M.c: 107:     Centenas = Centenas + 48;
  2243  057E  087B               	movf	_Centenas,w
  2244  057F  3E30               	addlw	48
  2245  0580  00A4               	movwf	??_division
  2246  0581  0824               	movf	??_division,w
  2247  0582  00FB               	movwf	_Centenas
  2248  0583                     l2073:
  2249                           
  2250                           ;D2_main3M.c: 108:     Decenas = Decenas + 48;
  2251  0583  087A               	movf	_Decenas,w
  2252  0584  3E30               	addlw	48
  2253  0585  00A4               	movwf	??_division
  2254  0586  0824               	movf	??_division,w
  2255  0587  00FA               	movwf	_Decenas
  2256  0588                     l2075:
  2257                           
  2258                           ;D2_main3M.c: 109:     Unidades = Unidades + 48;
  2259  0588  086C               	movf	_Unidades,w
  2260  0589  3E30               	addlw	48
  2261  058A  00A4               	movwf	??_division
  2262  058B  0824               	movf	??_division,w
  2263  058C  00EC               	movwf	_Unidades
  2264  058D                     l100:
  2265  058D  0008               	return
  2266  058E                     __end_of_division:
  2267                           
  2268                           	psect	text6
  2269  0655                     __ptext6:	
  2270 ;; *************** function ___awmod *****************
  2271 ;; Defined at:
  2272 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awmod.c"
  2273 ;; Parameters:    Size  Location     Type
  2274 ;;  divisor         2    2[COMMON] int 
  2275 ;;  dividend        2    4[COMMON] int 
  2276 ;; Auto vars:     Size  Location     Type
  2277 ;;  sign            1    8[COMMON] unsigned char 
  2278 ;;  counter         1    7[COMMON] unsigned char 
  2279 ;; Return value:  Size  Location     Type
  2280 ;;                  2    2[COMMON] int 
  2281 ;; Registers used:
  2282 ;;		wreg, status,2, status,0
  2283 ;; Tracked objects:
  2284 ;;		On entry : 0/0
  2285 ;;		On exit  : 0/0
  2286 ;;		Unchanged: 0/0
  2287 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2288 ;;      Params:         4       0       0       0       0
  2289 ;;      Locals:         2       0       0       0       0
  2290 ;;      Temps:          1       0       0       0       0
  2291 ;;      Totals:         7       0       0       0       0
  2292 ;;Total ram usage:        7 bytes
  2293 ;; Hardware stack levels used:    1
  2294 ;; Hardware stack levels required when called:    1
  2295 ;; This function calls:
  2296 ;;		Nothing
  2297 ;; This function is called by:
  2298 ;;		_division
  2299 ;; This function uses a non-reentrant model
  2300 ;;
  2301                           
  2302                           
  2303                           ;psect for function ___awmod
  2304  0655                     ___awmod:
  2305  0655                     l1621:	
  2306                           ;incstack = 0
  2307                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  2308                           
  2309  0655  01F8               	clrf	___awmod@sign
  2310  0656                     l1623:
  2311  0656  1FF5               	btfss	___awmod@dividend+1,7
  2312  0657  2E59               	goto	u1171
  2313  0658  2E5A               	goto	u1170
  2314  0659                     u1171:
  2315  0659  2E61               	goto	l1629
  2316  065A                     u1170:
  2317  065A                     l1625:
  2318  065A  09F4               	comf	___awmod@dividend,f
  2319  065B  09F5               	comf	___awmod@dividend+1,f
  2320  065C  0AF4               	incf	___awmod@dividend,f
  2321  065D  1903               	skipnz
  2322  065E  0AF5               	incf	___awmod@dividend+1,f
  2323  065F                     l1627:
  2324  065F  01F8               	clrf	___awmod@sign
  2325  0660  0AF8               	incf	___awmod@sign,f
  2326  0661                     l1629:
  2327  0661  1FF3               	btfss	___awmod@divisor+1,7
  2328  0662  2E64               	goto	u1181
  2329  0663  2E65               	goto	u1180
  2330  0664                     u1181:
  2331  0664  2E6A               	goto	l1633
  2332  0665                     u1180:
  2333  0665                     l1631:
  2334  0665  09F2               	comf	___awmod@divisor,f
  2335  0666  09F3               	comf	___awmod@divisor+1,f
  2336  0667  0AF2               	incf	___awmod@divisor,f
  2337  0668  1903               	skipnz
  2338  0669  0AF3               	incf	___awmod@divisor+1,f
  2339  066A                     l1633:
  2340  066A  0872               	movf	___awmod@divisor,w
  2341  066B  0473               	iorwf	___awmod@divisor+1,w
  2342  066C  1903               	btfsc	3,2
  2343  066D  2E6F               	goto	u1191
  2344  066E  2E70               	goto	u1190
  2345  066F                     u1191:
  2346  066F  2E9F               	goto	l1651
  2347  0670                     u1190:
  2348  0670                     l1635:
  2349  0670  01F7               	clrf	___awmod@counter
  2350  0671  0AF7               	incf	___awmod@counter,f
  2351  0672  2E7E               	goto	l1641
  2352  0673                     l1637:
  2353  0673  3001               	movlw	1
  2354  0674                     u1205:
  2355  0674  1003               	clrc
  2356  0675  0DF2               	rlf	___awmod@divisor,f
  2357  0676  0DF3               	rlf	___awmod@divisor+1,f
  2358  0677  3EFF               	addlw	-1
  2359  0678  1D03               	skipz
  2360  0679  2E74               	goto	u1205
  2361  067A                     l1639:
  2362  067A  3001               	movlw	1
  2363  067B  00F6               	movwf	??___awmod
  2364  067C  0876               	movf	??___awmod,w
  2365  067D  07F7               	addwf	___awmod@counter,f
  2366  067E                     l1641:
  2367  067E  1FF3               	btfss	___awmod@divisor+1,7
  2368  067F  2E81               	goto	u1211
  2369  0680  2E82               	goto	u1210
  2370  0681                     u1211:
  2371  0681  2E73               	goto	l1637
  2372  0682                     u1210:
  2373  0682                     l1643:
  2374  0682  0873               	movf	___awmod@divisor+1,w
  2375  0683  0275               	subwf	___awmod@dividend+1,w
  2376  0684  1D03               	skipz
  2377  0685  2E88               	goto	u1225
  2378  0686  0872               	movf	___awmod@divisor,w
  2379  0687  0274               	subwf	___awmod@dividend,w
  2380  0688                     u1225:
  2381  0688  1C03               	skipc
  2382  0689  2E8B               	goto	u1221
  2383  068A  2E8C               	goto	u1220
  2384  068B                     u1221:
  2385  068B  2E92               	goto	l1647
  2386  068C                     u1220:
  2387  068C                     l1645:
  2388  068C  0872               	movf	___awmod@divisor,w
  2389  068D  02F4               	subwf	___awmod@dividend,f
  2390  068E  0873               	movf	___awmod@divisor+1,w
  2391  068F  1C03               	skipc
  2392  0690  03F5               	decf	___awmod@dividend+1,f
  2393  0691  02F5               	subwf	___awmod@dividend+1,f
  2394  0692                     l1647:
  2395  0692  3001               	movlw	1
  2396  0693                     u1235:
  2397  0693  1003               	clrc
  2398  0694  0CF3               	rrf	___awmod@divisor+1,f
  2399  0695  0CF2               	rrf	___awmod@divisor,f
  2400  0696  3EFF               	addlw	-1
  2401  0697  1D03               	skipz
  2402  0698  2E93               	goto	u1235
  2403  0699                     l1649:
  2404  0699  3001               	movlw	1
  2405  069A  02F7               	subwf	___awmod@counter,f
  2406  069B  1D03               	btfss	3,2
  2407  069C  2E9E               	goto	u1241
  2408  069D  2E9F               	goto	u1240
  2409  069E                     u1241:
  2410  069E  2E82               	goto	l1643
  2411  069F                     u1240:
  2412  069F                     l1651:
  2413  069F  0878               	movf	___awmod@sign,w
  2414  06A0  1903               	btfsc	3,2
  2415  06A1  2EA3               	goto	u1251
  2416  06A2  2EA4               	goto	u1250
  2417  06A3                     u1251:
  2418  06A3  2EA9               	goto	l1655
  2419  06A4                     u1250:
  2420  06A4                     l1653:
  2421  06A4  09F4               	comf	___awmod@dividend,f
  2422  06A5  09F5               	comf	___awmod@dividend+1,f
  2423  06A6  0AF4               	incf	___awmod@dividend,f
  2424  06A7  1903               	skipnz
  2425  06A8  0AF5               	incf	___awmod@dividend+1,f
  2426  06A9                     l1655:
  2427  06A9  0875               	movf	___awmod@dividend+1,w
  2428  06AA  00F3               	movwf	?___awmod+1
  2429  06AB  0874               	movf	___awmod@dividend,w
  2430  06AC  00F2               	movwf	?___awmod
  2431  06AD                     l424:
  2432  06AD  0008               	return
  2433  06AE                     __end_of___awmod:
  2434                           
  2435                           	psect	text7
  2436  058E                     __ptext7:	
  2437 ;; *************** function ___awdiv *****************
  2438 ;; Defined at:
  2439 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
  2440 ;; Parameters:    Size  Location     Type
  2441 ;;  divisor         2    2[COMMON] int 
  2442 ;;  dividend        2    4[COMMON] int 
  2443 ;; Auto vars:     Size  Location     Type
  2444 ;;  quotient        2    2[BANK0 ] int 
  2445 ;;  sign            1    1[BANK0 ] unsigned char 
  2446 ;;  counter         1    0[BANK0 ] unsigned char 
  2447 ;; Return value:  Size  Location     Type
  2448 ;;                  2    2[COMMON] int 
  2449 ;; Registers used:
  2450 ;;		wreg, status,2, status,0
  2451 ;; Tracked objects:
  2452 ;;		On entry : 0/0
  2453 ;;		On exit  : 0/0
  2454 ;;		Unchanged: 0/0
  2455 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2456 ;;      Params:         4       0       0       0       0
  2457 ;;      Locals:         0       4       0       0       0
  2458 ;;      Temps:          1       0       0       0       0
  2459 ;;      Totals:         5       4       0       0       0
  2460 ;;Total ram usage:        9 bytes
  2461 ;; Hardware stack levels used:    1
  2462 ;; Hardware stack levels required when called:    1
  2463 ;; This function calls:
  2464 ;;		Nothing
  2465 ;; This function is called by:
  2466 ;;		_division
  2467 ;; This function uses a non-reentrant model
  2468 ;;
  2469                           
  2470                           
  2471                           ;psect for function ___awdiv
  2472  058E                     ___awdiv:
  2473  058E                     l2025:	
  2474                           ;incstack = 0
  2475                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  2476                           
  2477  058E  1283               	bcf	3,5	;RP0=0, select bank0
  2478  058F  1303               	bcf	3,6	;RP1=0, select bank0
  2479  0590  01A1               	clrf	___awdiv@sign
  2480  0591                     l2027:
  2481  0591  1FF3               	btfss	___awdiv@divisor+1,7
  2482  0592  2D94               	goto	u1591
  2483  0593  2D95               	goto	u1590
  2484  0594                     u1591:
  2485  0594  2D9C               	goto	l2033
  2486  0595                     u1590:
  2487  0595                     l2029:
  2488  0595  09F2               	comf	___awdiv@divisor,f
  2489  0596  09F3               	comf	___awdiv@divisor+1,f
  2490  0597  0AF2               	incf	___awdiv@divisor,f
  2491  0598  1903               	skipnz
  2492  0599  0AF3               	incf	___awdiv@divisor+1,f
  2493  059A                     l2031:
  2494  059A  01A1               	clrf	___awdiv@sign
  2495  059B  0AA1               	incf	___awdiv@sign,f
  2496  059C                     l2033:
  2497  059C  1FF5               	btfss	___awdiv@dividend+1,7
  2498  059D  2D9F               	goto	u1601
  2499  059E  2DA0               	goto	u1600
  2500  059F                     u1601:
  2501  059F  2DA9               	goto	l2039
  2502  05A0                     u1600:
  2503  05A0                     l2035:
  2504  05A0  09F4               	comf	___awdiv@dividend,f
  2505  05A1  09F5               	comf	___awdiv@dividend+1,f
  2506  05A2  0AF4               	incf	___awdiv@dividend,f
  2507  05A3  1903               	skipnz
  2508  05A4  0AF5               	incf	___awdiv@dividend+1,f
  2509  05A5                     l2037:
  2510  05A5  3001               	movlw	1
  2511  05A6  00F6               	movwf	??___awdiv
  2512  05A7  0876               	movf	??___awdiv,w
  2513  05A8  06A1               	xorwf	___awdiv@sign,f
  2514  05A9                     l2039:
  2515  05A9  01A2               	clrf	___awdiv@quotient
  2516  05AA  01A3               	clrf	___awdiv@quotient+1
  2517  05AB                     l2041:
  2518  05AB  0872               	movf	___awdiv@divisor,w
  2519  05AC  0473               	iorwf	___awdiv@divisor+1,w
  2520  05AD  1903               	btfsc	3,2
  2521  05AE  2DB0               	goto	u1611
  2522  05AF  2DB1               	goto	u1610
  2523  05B0                     u1611:
  2524  05B0  2DE8               	goto	l2061
  2525  05B1                     u1610:
  2526  05B1                     l2043:
  2527  05B1  01A0               	clrf	___awdiv@counter
  2528  05B2  0AA0               	incf	___awdiv@counter,f
  2529  05B3  2DBF               	goto	l2049
  2530  05B4                     l2045:
  2531  05B4  3001               	movlw	1
  2532  05B5                     u1625:
  2533  05B5  1003               	clrc
  2534  05B6  0DF2               	rlf	___awdiv@divisor,f
  2535  05B7  0DF3               	rlf	___awdiv@divisor+1,f
  2536  05B8  3EFF               	addlw	-1
  2537  05B9  1D03               	skipz
  2538  05BA  2DB5               	goto	u1625
  2539  05BB                     l2047:
  2540  05BB  3001               	movlw	1
  2541  05BC  00F6               	movwf	??___awdiv
  2542  05BD  0876               	movf	??___awdiv,w
  2543  05BE  07A0               	addwf	___awdiv@counter,f
  2544  05BF                     l2049:
  2545  05BF  1FF3               	btfss	___awdiv@divisor+1,7
  2546  05C0  2DC2               	goto	u1631
  2547  05C1  2DC3               	goto	u1630
  2548  05C2                     u1631:
  2549  05C2  2DB4               	goto	l2045
  2550  05C3                     u1630:
  2551  05C3                     l2051:
  2552  05C3  3001               	movlw	1
  2553  05C4                     u1645:
  2554  05C4  1003               	clrc
  2555  05C5  0DA2               	rlf	___awdiv@quotient,f
  2556  05C6  0DA3               	rlf	___awdiv@quotient+1,f
  2557  05C7  3EFF               	addlw	-1
  2558  05C8  1D03               	skipz
  2559  05C9  2DC4               	goto	u1645
  2560  05CA  0873               	movf	___awdiv@divisor+1,w
  2561  05CB  0275               	subwf	___awdiv@dividend+1,w
  2562  05CC  1D03               	skipz
  2563  05CD  2DD0               	goto	u1655
  2564  05CE  0872               	movf	___awdiv@divisor,w
  2565  05CF  0274               	subwf	___awdiv@dividend,w
  2566  05D0                     u1655:
  2567  05D0  1C03               	skipc
  2568  05D1  2DD3               	goto	u1651
  2569  05D2  2DD4               	goto	u1650
  2570  05D3                     u1651:
  2571  05D3  2DDB               	goto	l2057
  2572  05D4                     u1650:
  2573  05D4                     l2053:
  2574  05D4  0872               	movf	___awdiv@divisor,w
  2575  05D5  02F4               	subwf	___awdiv@dividend,f
  2576  05D6  0873               	movf	___awdiv@divisor+1,w
  2577  05D7  1C03               	skipc
  2578  05D8  03F5               	decf	___awdiv@dividend+1,f
  2579  05D9  02F5               	subwf	___awdiv@dividend+1,f
  2580  05DA                     l2055:
  2581  05DA  1422               	bsf	___awdiv@quotient,0
  2582  05DB                     l2057:
  2583  05DB  3001               	movlw	1
  2584  05DC                     u1665:
  2585  05DC  1003               	clrc
  2586  05DD  0CF3               	rrf	___awdiv@divisor+1,f
  2587  05DE  0CF2               	rrf	___awdiv@divisor,f
  2588  05DF  3EFF               	addlw	-1
  2589  05E0  1D03               	skipz
  2590  05E1  2DDC               	goto	u1665
  2591  05E2                     l2059:
  2592  05E2  3001               	movlw	1
  2593  05E3  02A0               	subwf	___awdiv@counter,f
  2594  05E4  1D03               	btfss	3,2
  2595  05E5  2DE7               	goto	u1671
  2596  05E6  2DE8               	goto	u1670
  2597  05E7                     u1671:
  2598  05E7  2DC3               	goto	l2051
  2599  05E8                     u1670:
  2600  05E8                     l2061:
  2601  05E8  0821               	movf	___awdiv@sign,w
  2602  05E9  1903               	btfsc	3,2
  2603  05EA  2DEC               	goto	u1681
  2604  05EB  2DED               	goto	u1680
  2605  05EC                     u1681:
  2606  05EC  2DF2               	goto	l2065
  2607  05ED                     u1680:
  2608  05ED                     l2063:
  2609  05ED  09A2               	comf	___awdiv@quotient,f
  2610  05EE  09A3               	comf	___awdiv@quotient+1,f
  2611  05EF  0AA2               	incf	___awdiv@quotient,f
  2612  05F0  1903               	skipnz
  2613  05F1  0AA3               	incf	___awdiv@quotient+1,f
  2614  05F2                     l2065:
  2615  05F2  0823               	movf	___awdiv@quotient+1,w
  2616  05F3  00F3               	movwf	?___awdiv+1
  2617  05F4  0822               	movf	___awdiv@quotient,w
  2618  05F5  00F2               	movwf	?___awdiv
  2619  05F6                     l411:
  2620  05F6  0008               	return
  2621  05F7                     __end_of___awdiv:
  2622                           
  2623                           	psect	text8
  2624  06F2                     __ptext8:	
  2625 ;; *************** function _concat *****************
  2626 ;; Defined at:
  2627 ;;		line 210 in file "D2_main3M.c"
  2628 ;; Parameters:    Size  Location     Type
  2629 ;;  a               2   26[BANK0 ] int 
  2630 ;;  b               2   28[BANK0 ] int 
  2631 ;; Auto vars:     Size  Location     Type
  2632 ;;  s1             20   51[BANK0 ] unsigned char [20]
  2633 ;;  s2             20   31[BANK0 ] unsigned char [20]
  2634 ;;  c               2   71[BANK0 ] int 
  2635 ;; Return value:  Size  Location     Type
  2636 ;;                  2   26[BANK0 ] int 
  2637 ;; Registers used:
  2638 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2639 ;; Tracked objects:
  2640 ;;		On entry : 0/0
  2641 ;;		On exit  : 0/0
  2642 ;;		Unchanged: 0/0
  2643 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2644 ;;      Params:         0       4       0       0       0
  2645 ;;      Locals:         0      42       0       0       0
  2646 ;;      Temps:          0       1       0       0       0
  2647 ;;      Totals:         0      47       0       0       0
  2648 ;;Total ram usage:       47 bytes
  2649 ;; Hardware stack levels used:    1
  2650 ;; Hardware stack levels required when called:    4
  2651 ;; This function calls:
  2652 ;;		_atoi
  2653 ;;		_sprintf
  2654 ;;		_strcat
  2655 ;; This function is called by:
  2656 ;;		_information
  2657 ;; This function uses a non-reentrant model
  2658 ;;
  2659                           
  2660                           
  2661                           ;psect for function _concat
  2662  06F2                     _concat:
  2663  06F2                     l2087:	
  2664                           ;incstack = 0
  2665                           ; Regs used in _concat: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2666                           
  2667                           
  2668                           ;D2_main3M.c: 210: int concat(int a, int b);D2_main3M.c: 211: {;D2_main3M.c: 213:     ch
      +                          ar s1[20];;D2_main3M.c: 214:     char s2[20];;D2_main3M.c: 216:     sprintf(s1, "%d", a)
      +                          ;
  2669  06F2  3054               	movlw	(low (((STR_12+22)-__stringbase)| (0+32768)))& (0+255)
  2670  06F3  1283               	bcf	3,5	;RP0=0, select bank0
  2671  06F4  1303               	bcf	3,6	;RP1=0, select bank0
  2672  06F5  00BE               	movwf	??_concat
  2673  06F6  083E               	movf	??_concat,w
  2674  06F7  00B1               	movwf	sprintf@f
  2675  06F8  083B               	movf	concat@a+1,w
  2676  06F9  00B3               	movwf	?_sprintf+2
  2677  06FA  083A               	movf	concat@a,w
  2678  06FB  00B2               	movwf	?_sprintf+1
  2679  06FC  3053               	movlw	(low (concat@s1| 0))& (0+255)
  2680  06FD  120A  118A  2386  120A  118A  	fcall	_sprintf
  2681                           
  2682                           ;D2_main3M.c: 217:     sprintf(s2, "%d", b);
  2683  0702  3054               	movlw	(low (((STR_12+22)-__stringbase)| (0+32768)))& (0+255)
  2684  0703  1283               	bcf	3,5	;RP0=0, select bank0
  2685  0704  1303               	bcf	3,6	;RP1=0, select bank0
  2686  0705  00BE               	movwf	??_concat
  2687  0706  083E               	movf	??_concat,w
  2688  0707  00B1               	movwf	sprintf@f
  2689  0708  083D               	movf	concat@b+1,w
  2690  0709  00B3               	movwf	?_sprintf+2
  2691  070A  083C               	movf	concat@b,w
  2692  070B  00B2               	movwf	?_sprintf+1
  2693  070C  303F               	movlw	(low (concat@s2| 0))& (0+255)
  2694  070D  120A  118A  2386  120A  118A  	fcall	_sprintf
  2695  0712                     l2089:
  2696                           
  2697                           ;D2_main3M.c: 219:     strcat(s1, s2);
  2698  0712  303F               	movlw	(low (concat@s2| 0))& (0+255)
  2699  0713  1283               	bcf	3,5	;RP0=0, select bank0
  2700  0714  1303               	bcf	3,6	;RP1=0, select bank0
  2701  0715  00BE               	movwf	??_concat
  2702  0716  083E               	movf	??_concat,w
  2703  0717  00F2               	movwf	strcat@from
  2704  0718  3053               	movlw	(low (concat@s1| 0))& (0+255)
  2705  0719  120A  118A  27A0  120A  118A  	fcall	_strcat
  2706  071E                     l2091:
  2707                           
  2708                           ;D2_main3M.c: 221:     int c = atoi(s1);
  2709  071E  3053               	movlw	(low (concat@s1| 0))& (0+255)
  2710  071F  120A  118A  24A0  120A  118A  	fcall	_atoi
  2711  0724  0879               	movf	?_atoi+1,w
  2712  0725  1283               	bcf	3,5	;RP0=0, select bank0
  2713  0726  1303               	bcf	3,6	;RP1=0, select bank0
  2714  0727  00E8               	movwf	concat@c+1
  2715  0728  0878               	movf	?_atoi,w
  2716  0729  00E7               	movwf	concat@c
  2717  072A                     l2093:
  2718                           
  2719                           ;D2_main3M.c: 223:     return c;
  2720  072A  0868               	movf	concat@c+1,w
  2721  072B  00BB               	movwf	?_concat+1
  2722  072C  0867               	movf	concat@c,w
  2723  072D  00BA               	movwf	?_concat
  2724  072E                     l135:
  2725  072E  0008               	return
  2726  072F                     __end_of_concat:
  2727                           
  2728                           	psect	text9
  2729  07A0                     __ptext9:	
  2730 ;; *************** function _strcat *****************
  2731 ;; Defined at:
  2732 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\strcat.c"
  2733 ;; Parameters:    Size  Location     Type
  2734 ;;  to              1    wreg     PTR unsigned char 
  2735 ;;		 -> concat@s1(20), 
  2736 ;;  from            1    2[COMMON] PTR const unsigned char 
  2737 ;;		 -> concat@s2(20), 
  2738 ;; Auto vars:     Size  Location     Type
  2739 ;;  to              1    4[COMMON] PTR unsigned char 
  2740 ;;		 -> concat@s1(20), 
  2741 ;;  cp              1    5[COMMON] PTR unsigned char 
  2742 ;;		 -> concat@s1(20), 
  2743 ;; Return value:  Size  Location     Type
  2744 ;;                  1    wreg      PTR unsigned char 
  2745 ;; Registers used:
  2746 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2747 ;; Tracked objects:
  2748 ;;		On entry : 0/0
  2749 ;;		On exit  : 0/0
  2750 ;;		Unchanged: 0/0
  2751 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2752 ;;      Params:         1       0       0       0       0
  2753 ;;      Locals:         2       0       0       0       0
  2754 ;;      Temps:          1       0       0       0       0
  2755 ;;      Totals:         4       0       0       0       0
  2756 ;;Total ram usage:        4 bytes
  2757 ;; Hardware stack levels used:    1
  2758 ;; Hardware stack levels required when called:    1
  2759 ;; This function calls:
  2760 ;;		Nothing
  2761 ;; This function is called by:
  2762 ;;		_concat
  2763 ;; This function uses a non-reentrant model
  2764 ;;
  2765                           
  2766                           
  2767                           ;psect for function _strcat
  2768  07A0                     _strcat:
  2769                           
  2770                           ;incstack = 0
  2771                           ; Regs used in _strcat: [wreg-fsr0h+status,2+status,0]
  2772                           ;strcat@to stored from wreg
  2773  07A0  00F4               	movwf	strcat@to
  2774  07A1                     l1533:
  2775  07A1  0874               	movf	strcat@to,w
  2776  07A2  00F3               	movwf	??_strcat
  2777  07A3  0873               	movf	??_strcat,w
  2778  07A4  00F5               	movwf	strcat@cp
  2779  07A5  2FAA               	goto	l1537
  2780  07A6                     l1535:
  2781  07A6  3001               	movlw	1
  2782  07A7  00F3               	movwf	??_strcat
  2783  07A8  0873               	movf	??_strcat,w
  2784  07A9  07F5               	addwf	strcat@cp,f
  2785  07AA                     l1537:
  2786  07AA  0875               	movf	strcat@cp,w
  2787  07AB  0084               	movwf	4
  2788  07AC  1383               	bcf	3,7	;select IRP bank0
  2789  07AD  0800               	movf	0,w
  2790  07AE  1D03               	btfss	3,2
  2791  07AF  2FB1               	goto	u991
  2792  07B0  2FB2               	goto	u990
  2793  07B1                     u991:
  2794  07B1  2FA6               	goto	l1535
  2795  07B2                     u990:
  2796  07B2  2FBB               	goto	l1541
  2797  07B3                     l1539:
  2798  07B3  3001               	movlw	1
  2799  07B4  00F3               	movwf	??_strcat
  2800  07B5  0873               	movf	??_strcat,w
  2801  07B6  07F5               	addwf	strcat@cp,f
  2802  07B7  3001               	movlw	1
  2803  07B8  00F3               	movwf	??_strcat
  2804  07B9  0873               	movf	??_strcat,w
  2805  07BA  07F2               	addwf	strcat@from,f
  2806  07BB                     l1541:
  2807  07BB  0872               	movf	strcat@from,w
  2808  07BC  0084               	movwf	4
  2809  07BD  0800               	movf	0,w
  2810  07BE  00F3               	movwf	??_strcat
  2811  07BF  0875               	movf	strcat@cp,w
  2812  07C0  0084               	movwf	4
  2813  07C1  0873               	movf	??_strcat,w
  2814  07C2  0080               	movwf	0
  2815  07C3  0800               	movf	0,w
  2816  07C4  1D03               	btfss	3,2
  2817  07C5  2FC7               	goto	u1001
  2818  07C6  2FC8               	goto	u1000
  2819  07C7                     u1001:
  2820  07C7  2FB3               	goto	l1539
  2821  07C8                     u1000:
  2822  07C8                     l789:
  2823  07C8  0008               	return
  2824  07C9                     __end_of_strcat:
  2825                           
  2826                           	psect	text10
  2827  0386                     __ptext10:	
  2828 ;; *************** function _sprintf *****************
  2829 ;; Defined at:
  2830 ;;		line 13 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprintf.c"
  2831 ;; Parameters:    Size  Location     Type
  2832 ;;  wh              1    wreg     PTR unsigned char 
  2833 ;;		 -> concat@s2(20), concat@s1(20), 
  2834 ;;  f               1   17[BANK0 ] PTR const unsigned char 
  2835 ;;		 -> STR_14(3), STR_13(3), 
  2836 ;; Auto vars:     Size  Location     Type
  2837 ;;  wh              1   22[BANK0 ] PTR unsigned char 
  2838 ;;		 -> concat@s2(20), concat@s1(20), 
  2839 ;;  pb              2   24[BANK0 ] struct __prbuf
  2840 ;;  ap              1   23[BANK0 ] PTR void [1]
  2841 ;;		 -> ?_sprintf(2), ?_printf(2), 
  2842 ;; Return value:  Size  Location     Type
  2843 ;;                  2   17[BANK0 ] int 
  2844 ;; Registers used:
  2845 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2846 ;; Tracked objects:
  2847 ;;		On entry : 0/0
  2848 ;;		On exit  : 0/0
  2849 ;;		Unchanged: 0/0
  2850 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2851 ;;      Params:         0       3       0       0       0
  2852 ;;      Locals:         0       4       0       0       0
  2853 ;;      Temps:          0       2       0       0       0
  2854 ;;      Totals:         0       9       0       0       0
  2855 ;;Total ram usage:        9 bytes
  2856 ;; Hardware stack levels used:    1
  2857 ;; Hardware stack levels required when called:    3
  2858 ;; This function calls:
  2859 ;;		__doprnt
  2860 ;; This function is called by:
  2861 ;;		_concat
  2862 ;; This function uses a non-reentrant model
  2863 ;;
  2864                           
  2865                           
  2866                           ;psect for function _sprintf
  2867  0386                     _sprintf:
  2868                           
  2869                           ;incstack = 0
  2870                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2871                           ;sprintf@wh stored from wreg
  2872  0386  1283               	bcf	3,5	;RP0=0, select bank0
  2873  0387  1303               	bcf	3,6	;RP1=0, select bank0
  2874  0388  00B6               	movwf	sprintf@wh
  2875  0389                     l1979:
  2876  0389  0836               	movf	sprintf@wh,w
  2877  038A  00B4               	movwf	??_sprintf
  2878  038B  0834               	movf	??_sprintf,w
  2879  038C  00B8               	movwf	sprintf@pb
  2880  038D                     l1981:
  2881  038D  01B9               	clrf	low ((sprintf@pb| 0+1))
  2882  038E                     l1983:
  2883  038E  3032               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  2884  038F  00B4               	movwf	??_sprintf
  2885  0390  0834               	movf	??_sprintf,w
  2886  0391  00B7               	movwf	sprintf@ap
  2887  0392                     l1985:
  2888  0392  0831               	movf	sprintf@f,w
  2889  0393  00B4               	movwf	??_sprintf
  2890  0394  0834               	movf	??_sprintf,w
  2891  0395  00A6               	movwf	__doprnt@f
  2892  0396  3037               	movlw	(low (sprintf@ap| 0))& (0+255)
  2893  0397  00B5               	movwf	??_sprintf+1
  2894  0398  0835               	movf	??_sprintf+1,w
  2895  0399  00A7               	movwf	__doprnt@ap
  2896  039A  3038               	movlw	(low (sprintf@pb| 0))& (0+255)
  2897  039B  120A  118A  2250  120A  118A  	fcall	__doprnt
  2898  03A0                     l1987:
  2899  03A0  1283               	bcf	3,5	;RP0=0, select bank0
  2900  03A1  1303               	bcf	3,6	;RP1=0, select bank0
  2901  03A2  0838               	movf	sprintf@pb,w
  2902  03A3  0084               	movwf	4
  2903  03A4  1383               	bcf	3,7	;select IRP bank0
  2904  03A5  0180               	clrf	0
  2905  03A6                     l780:
  2906  03A6  0008               	return
  2907  03A7                     __end_of_sprintf:
  2908                           
  2909                           	psect	text11
  2910  0250                     __ptext11:	
  2911 ;; *************** function __doprnt *****************
  2912 ;; Defined at:
  2913 ;;		line 471 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  2914 ;; Parameters:    Size  Location     Type
  2915 ;;  pb              1    wreg     PTR struct __prbuf
  2916 ;;		 -> sprintf@pb(2), printf@pb(2), 
  2917 ;;  f               1    6[BANK0 ] PTR const unsigned char 
  2918 ;;		 -> STR_14(3), STR_13(3), STR_12(25), STR_11(21), 
  2919 ;;		 -> STR_10(20), STR_9(20), STR_8(2), STR_7(4), 
  2920 ;;		 -> STR_6(3), STR_5(26), STR_4(2), STR_3(4), 
  2921 ;;		 -> STR_2(3), STR_1(25), 
  2922 ;;  ap              1    7[BANK0 ] PTR PTR void 
  2923 ;;		 -> sprintf@ap(1), printf@ap(1), 
  2924 ;; Auto vars:     Size  Location     Type
  2925 ;;  pb              1   16[BANK0 ] PTR struct __prbuf
  2926 ;;		 -> sprintf@pb(2), printf@pb(2), 
  2927 ;;  tmpval          4    0        struct .
  2928 ;;  val             2   13[BANK0 ] unsigned int 
  2929 ;;  cp              2    0        PTR const unsigned char 
  2930 ;;  len             2    0        unsigned int 
  2931 ;;  c               1   15[BANK0 ] unsigned char 
  2932 ;;  prec            1   12[BANK0 ] char 
  2933 ;;  flag            1   11[BANK0 ] unsigned char 
  2934 ;; Return value:  Size  Location     Type
  2935 ;;                  2    6[BANK0 ] int 
  2936 ;; Registers used:
  2937 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2938 ;; Tracked objects:
  2939 ;;		On entry : 0/0
  2940 ;;		On exit  : 0/0
  2941 ;;		Unchanged: 0/0
  2942 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2943 ;;      Params:         0       2       0       0       0
  2944 ;;      Locals:         0       6       0       0       0
  2945 ;;      Temps:          0       3       0       0       0
  2946 ;;      Totals:         0      11       0       0       0
  2947 ;;Total ram usage:       11 bytes
  2948 ;; Hardware stack levels used:    1
  2949 ;; Hardware stack levels required when called:    2
  2950 ;; This function calls:
  2951 ;;		Absolute function
  2952 ;;		___lwdiv
  2953 ;;		___lwmod
  2954 ;;		_putch
  2955 ;; This function is called by:
  2956 ;;		_printf
  2957 ;;		_sprintf
  2958 ;; This function uses a non-reentrant model
  2959 ;;
  2960                           
  2961                           
  2962                           ;psect for function __doprnt
  2963  0250                     __doprnt:
  2964                           
  2965                           ;incstack = 0
  2966                           ; Regs used in __doprnt: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2967                           ;__doprnt@pb stored from wreg
  2968  0250  1283               	bcf	3,5	;RP0=0, select bank0
  2969  0251  1303               	bcf	3,6	;RP1=0, select bank0
  2970  0252  00B0               	movwf	__doprnt@pb
  2971  0253                     l1907:
  2972                           
  2973                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 471: _doprnt(stru
      +                          ct __prbuf * pb, register const char * f, register va_list ap);C:\Program Files\Microchi
      +                          p\xc8\v2.31\pic\sources\c90\common\doprnt.c: 472: {;C:\Program Files\Microchip\xc8\v2.31
      +                          \pic\sources\c90\common\doprnt.c: 512:  char c;;C:\Program Files\Microchip\xc8\v2.31\pic
      +                          \sources\c90\common\doprnt.c: 521:  signed char prec;;C:\Program Files\Microchip\xc8\v2.
      +                          31\pic\sources\c90\common\doprnt.c: 525:  unsigned char flag;;C:\Program Files\Microchip
      +                          \xc8\v2.31\pic\sources\c90\common\doprnt.c: 543:  } tmpval;
  2974  0253  2B6F               	goto	l1969
  2975  0254                     l1909:
  2976                           
  2977                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  2978  0254  3025               	movlw	37
  2979  0255  062F               	xorwf	__doprnt@c,w
  2980  0256  1903               	btfsc	3,2
  2981  0257  2A59               	goto	u1431
  2982  0258  2A5A               	goto	u1430
  2983  0259                     u1431:
  2984  0259  2A80               	goto	l1919
  2985  025A                     u1430:
  2986  025A                     l1911:
  2987  025A  0A30               	incf	__doprnt@pb,w
  2988  025B  0084               	movwf	4
  2989  025C  1383               	bcf	3,7	;select IRP bank0
  2990  025D  0800               	movf	0,w
  2991  025E  1903               	btfsc	3,2
  2992  025F  2A61               	goto	u1441
  2993  0260  2A62               	goto	u1440
  2994  0261                     u1441:
  2995  0261  2A71               	goto	l1915
  2996  0262                     u1440:
  2997  0262                     l1913:
  2998  0262  082F               	movf	__doprnt@c,w
  2999  0263  00A8               	movwf	??__doprnt
  3000  0264  0828               	movf	??__doprnt,w
  3001  0265  00F2               	movwf	putch@data
  3002  0266  0A30               	incf	__doprnt@pb,w
  3003  0267  0084               	movwf	4
  3004  0268  0800               	movf	0,w
  3005  0269  120A  118A  2026  120A  118A  	fcall	fptable
  3006  026E  1283               	bcf	3,5	;RP0=0, select bank0
  3007  026F  1303               	bcf	3,6	;RP1=0, select bank0
  3008  0270  2A53               	goto	l1907
  3009  0271                     l1915:
  3010  0271  082F               	movf	__doprnt@c,w
  3011  0272  00A8               	movwf	??__doprnt
  3012  0273  0830               	movf	__doprnt@pb,w
  3013  0274  0084               	movwf	4
  3014  0275  0800               	movf	0,w
  3015  0276  0084               	movwf	4
  3016  0277  0828               	movf	??__doprnt,w
  3017  0278  0080               	movwf	0
  3018  0279                     l1917:
  3019  0279  3001               	movlw	1
  3020  027A  00A8               	movwf	??__doprnt
  3021  027B  0830               	movf	__doprnt@pb,w
  3022  027C  0084               	movwf	4
  3023  027D  0828               	movf	??__doprnt,w
  3024  027E  0780               	addwf	0,f
  3025  027F  2A53               	goto	l1907
  3026  0280                     l1919:
  3027                           
  3028                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  3029  0280  01AB               	clrf	__doprnt@flag
  3030  0281                     l1923:	
  3031                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 661:   switch(c =
      +                           *f++) {
  3032                           
  3033  0281  3001               	movlw	1
  3034  0282  07A6               	addwf	__doprnt@f,f
  3035  0283  30FF               	movlw	-1
  3036  0284  0726               	addwf	__doprnt@f,w
  3037  0285  0084               	movwf	4
  3038  0286  120A  118A  2400  120A  118A  	fcall	stringdir
  3039  028B  00AF               	movwf	__doprnt@c
  3040  028C  00A8               	movwf	??__doprnt
  3041  028D  01A9               	clrf	??__doprnt+1
  3042                           
  3043                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3044                           ; Switch size 1, requested type "simple"
  3045                           ; Number of cases is 1, Range of values is 0 to 0
  3046                           ; switch strategies available:
  3047                           ; Name         Instructions Cycles
  3048                           ; simple_byte            4     3 (average)
  3049                           ; direct_byte           11     8 (fixed)
  3050                           ; jumptable            260     6 (fixed)
  3051                           ;	Chosen strategy is simple_byte
  3052  028E  0829               	movf	??__doprnt+1,w
  3053  028F  3A00               	xorlw	0	; case 0
  3054  0290  1903               	skipnz
  3055  0291  2A93               	goto	l2235
  3056  0292  2B6F               	goto	l1969
  3057  0293                     l2235:
  3058                           
  3059                           ; Switch size 1, requested type "simple"
  3060                           ; Number of cases is 3, Range of values is 0 to 105
  3061                           ; switch strategies available:
  3062                           ; Name         Instructions Cycles
  3063                           ; simple_byte           10     6 (average)
  3064                           ; jumptable            260     6 (fixed)
  3065                           ;	Chosen strategy is simple_byte
  3066  0293  0828               	movf	??__doprnt,w
  3067  0294  3A00               	xorlw	0	; case 0
  3068  0295  1903               	skipnz
  3069  0296  2B83               	goto	l1971
  3070  0297  3A64               	xorlw	100	; case 100
  3071  0298  1903               	skipnz
  3072  0299  2A9E               	goto	l1925
  3073  029A  3A0D               	xorlw	13	; case 105
  3074  029B  1903               	skipnz
  3075  029C  2A9E               	goto	l1925
  3076  029D  2B6F               	goto	l1969
  3077  029E                     l1925:
  3078                           
  3079                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1279:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned
      +                           int)(*(int *)__va_arg((*(int **)ap), (int)0));
  3080  029E  0827               	movf	__doprnt@ap,w
  3081  029F  0084               	movwf	4
  3082  02A0  1383               	bcf	3,7	;select IRP bank0
  3083  02A1  0800               	movf	0,w
  3084  02A2  00A8               	movwf	??__doprnt
  3085  02A3  3002               	movlw	2
  3086  02A4  0780               	addwf	0,f
  3087  02A5  0828               	movf	??__doprnt,w
  3088  02A6  0084               	movwf	4
  3089  02A7  0800               	movf	0,w
  3090  02A8  00AD               	movwf	__doprnt@val
  3091  02A9  0A84               	incf	4,f
  3092  02AA  0800               	movf	0,w
  3093  02AB  00AE               	movwf	__doprnt@val+1
  3094  02AC                     l1927:
  3095                           
  3096                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1287:    if((int)
      +                          val < 0) {
  3097  02AC  1FAE               	btfss	__doprnt@val+1,7
  3098  02AD  2AAF               	goto	u1451
  3099  02AE  2AB0               	goto	u1450
  3100  02AF                     u1451:
  3101  02AF  2AB9               	goto	l1933
  3102  02B0                     u1450:
  3103  02B0                     l1929:
  3104                           
  3105                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1288:     flag |=
      +                           0x03;
  3106  02B0  3003               	movlw	3
  3107  02B1  00A8               	movwf	??__doprnt
  3108  02B2  0828               	movf	??__doprnt,w
  3109  02B3  04AB               	iorwf	__doprnt@flag,f
  3110  02B4                     l1931:
  3111                           
  3112                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1289:     val = -
      +                          val;
  3113  02B4  09AD               	comf	__doprnt@val,f
  3114  02B5  09AE               	comf	__doprnt@val+1,f
  3115  02B6  0AAD               	incf	__doprnt@val,f
  3116  02B7  1903               	skipnz
  3117  02B8  0AAE               	incf	__doprnt@val+1,f
  3118  02B9                     l1933:
  3119                           
  3120                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1292:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1331:    for(c = 1 ; c !=
      +                           sizeof dpowers/sizeof dpowers[0] ; c++)
  3121  02B9  01AF               	clrf	__doprnt@c
  3122  02BA  0AAF               	incf	__doprnt@c,f
  3123  02BB                     l1939:
  3124                           
  3125                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  3126  02BB  082F               	movf	__doprnt@c,w
  3127  02BC  00A8               	movwf	??__doprnt
  3128  02BD  0728               	addwf	??__doprnt,w
  3129  02BE  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3130  02BF  0084               	movwf	4
  3131  02C0  120A  118A  2400  120A  118A  	fcall	stringdir
  3132  02C5  00A9               	movwf	??__doprnt+1
  3133  02C6  120A  118A  2400  120A  118A  	fcall	stringdir
  3134  02CB  00AA               	movwf	??__doprnt+2
  3135  02CC  082A               	movf	??__doprnt+2,w
  3136  02CD  022E               	subwf	__doprnt@val+1,w
  3137  02CE  1D03               	skipz
  3138  02CF  2AD2               	goto	u1465
  3139  02D0  0829               	movf	??__doprnt+1,w
  3140  02D1  022D               	subwf	__doprnt@val,w
  3141  02D2                     u1465:
  3142  02D2  1803               	skipnc
  3143  02D3  2AD5               	goto	u1461
  3144  02D4  2AD6               	goto	u1460
  3145  02D5                     u1461:
  3146  02D5  2AD7               	goto	l1943
  3147  02D6                     u1460:
  3148  02D6  2AE1               	goto	l1945
  3149  02D7                     l1943:
  3150  02D7  3001               	movlw	1
  3151  02D8  00A8               	movwf	??__doprnt
  3152  02D9  0828               	movf	??__doprnt,w
  3153  02DA  07AF               	addwf	__doprnt@c,f
  3154  02DB  3005               	movlw	5
  3155  02DC  062F               	xorwf	__doprnt@c,w
  3156  02DD  1D03               	btfss	3,2
  3157  02DE  2AE0               	goto	u1471
  3158  02DF  2AE1               	goto	u1470
  3159  02E0                     u1471:
  3160  02E0  2ABB               	goto	l1939
  3161  02E1                     u1470:
  3162  02E1                     l1945:
  3163                           
  3164                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1464:    if(flag & 0x03)
  3165  02E1  082B               	movf	__doprnt@flag,w
  3166  02E2  3903               	andlw	3
  3167  02E3  1903               	btfsc	3,2
  3168  02E4  2AE6               	goto	u1481
  3169  02E5  2AE7               	goto	u1480
  3170  02E6                     u1481:
  3171  02E6  2B0A               	goto	l1955
  3172  02E7                     u1480:
  3173  02E7                     l1947:
  3174  02E7  0A30               	incf	__doprnt@pb,w
  3175  02E8  0084               	movwf	4
  3176  02E9  1383               	bcf	3,7	;select IRP bank0
  3177  02EA  0800               	movf	0,w
  3178  02EB  1903               	btfsc	3,2
  3179  02EC  2AEE               	goto	u1491
  3180  02ED  2AEF               	goto	u1490
  3181  02EE                     u1491:
  3182  02EE  2AFC               	goto	l1951
  3183  02EF                     u1490:
  3184  02EF                     l1949:
  3185  02EF  302D               	movlw	45
  3186  02F0  00A8               	movwf	??__doprnt
  3187  02F1  0828               	movf	??__doprnt,w
  3188  02F2  00F2               	movwf	putch@data
  3189  02F3  0A30               	incf	__doprnt@pb,w
  3190  02F4  0084               	movwf	4
  3191  02F5  0800               	movf	0,w
  3192  02F6  120A  118A  2026  120A  118A  	fcall	fptable
  3193  02FB  2B0A               	goto	l1955
  3194  02FC                     l1951:
  3195  02FC  302D               	movlw	45
  3196  02FD  00A8               	movwf	??__doprnt
  3197  02FE  0830               	movf	__doprnt@pb,w
  3198  02FF  0084               	movwf	4
  3199  0300  0800               	movf	0,w
  3200  0301  0084               	movwf	4
  3201  0302  0828               	movf	??__doprnt,w
  3202  0303  0080               	movwf	0
  3203  0304                     l1953:
  3204  0304  3001               	movlw	1
  3205  0305  00A8               	movwf	??__doprnt
  3206  0306  0830               	movf	__doprnt@pb,w
  3207  0307  0084               	movwf	4
  3208  0308  0828               	movf	??__doprnt,w
  3209  0309  0780               	addwf	0,f
  3210  030A                     l1955:
  3211                           
  3212                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1495:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
  3213  030A  1283               	bcf	3,5	;RP0=0, select bank0
  3214  030B  1303               	bcf	3,6	;RP1=0, select bank0
  3215  030C  082F               	movf	__doprnt@c,w
  3216  030D  00A8               	movwf	??__doprnt
  3217  030E  0828               	movf	??__doprnt,w
  3218  030F  00AC               	movwf	__doprnt@prec
  3219                           
  3220                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  3221  0310  2B64               	goto	l1967
  3222  0311                     l1957:
  3223                           
  3224                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned char)prec]) % 10 + '0';
  3225  0311  300A               	movlw	10
  3226  0312  00A0               	movwf	___lwmod@divisor
  3227  0313  3000               	movlw	0
  3228  0314  00A1               	movwf	___lwmod@divisor+1
  3229  0315  082C               	movf	__doprnt@prec,w
  3230  0316  00A8               	movwf	??__doprnt
  3231  0317  0728               	addwf	??__doprnt,w
  3232  0318  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3233  0319  0084               	movwf	4
  3234  031A  120A  118A  2400  120A  118A  	fcall	stringdir
  3235  031F  00F2               	movwf	___lwdiv@divisor
  3236  0320  120A  118A  2400  120A  118A  	fcall	stringdir
  3237  0325  00F3               	movwf	___lwdiv@divisor+1
  3238  0326  082E               	movf	__doprnt@val+1,w
  3239  0327  00F5               	movwf	___lwdiv@dividend+1
  3240  0328  082D               	movf	__doprnt@val,w
  3241  0329  00F4               	movwf	___lwdiv@dividend
  3242  032A  120A  118A  26AE  120A  118A  	fcall	___lwdiv
  3243  032F  0873               	movf	?___lwdiv+1,w
  3244  0330  1283               	bcf	3,5	;RP0=0, select bank0
  3245  0331  1303               	bcf	3,6	;RP1=0, select bank0
  3246  0332  00A3               	movwf	___lwmod@dividend+1
  3247  0333  0872               	movf	?___lwdiv,w
  3248  0334  00A2               	movwf	___lwmod@dividend
  3249  0335  120A  118A  272F  120A  118A  	fcall	___lwmod
  3250  033A  1283               	bcf	3,5	;RP0=0, select bank0
  3251  033B  1303               	bcf	3,6	;RP1=0, select bank0
  3252  033C  0820               	movf	?___lwmod,w
  3253  033D  3E30               	addlw	48
  3254  033E  00A9               	movwf	??__doprnt+1
  3255  033F  0829               	movf	??__doprnt+1,w
  3256  0340  00AF               	movwf	__doprnt@c
  3257  0341                     l1959:
  3258  0341  0A30               	incf	__doprnt@pb,w
  3259  0342  0084               	movwf	4
  3260  0343  1383               	bcf	3,7	;select IRP bank0
  3261  0344  0800               	movf	0,w
  3262  0345  1903               	btfsc	3,2
  3263  0346  2B48               	goto	u1501
  3264  0347  2B49               	goto	u1500
  3265  0348                     u1501:
  3266  0348  2B56               	goto	l1963
  3267  0349                     u1500:
  3268  0349                     l1961:
  3269  0349  082F               	movf	__doprnt@c,w
  3270  034A  00A8               	movwf	??__doprnt
  3271  034B  0828               	movf	??__doprnt,w
  3272  034C  00F2               	movwf	putch@data
  3273  034D  0A30               	incf	__doprnt@pb,w
  3274  034E  0084               	movwf	4
  3275  034F  0800               	movf	0,w
  3276  0350  120A  118A  2026  120A  118A  	fcall	fptable
  3277  0355  2B64               	goto	l1967
  3278  0356                     l1963:
  3279  0356  082F               	movf	__doprnt@c,w
  3280  0357  00A8               	movwf	??__doprnt
  3281  0358  0830               	movf	__doprnt@pb,w
  3282  0359  0084               	movwf	4
  3283  035A  0800               	movf	0,w
  3284  035B  0084               	movwf	4
  3285  035C  0828               	movf	??__doprnt,w
  3286  035D  0080               	movwf	0
  3287  035E                     l1965:
  3288  035E  3001               	movlw	1
  3289  035F  00A8               	movwf	??__doprnt
  3290  0360  0830               	movf	__doprnt@pb,w
  3291  0361  0084               	movwf	4
  3292  0362  0828               	movf	??__doprnt,w
  3293  0363  0780               	addwf	0,f
  3294  0364                     l1967:
  3295                           
  3296                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  3297  0364  30FF               	movlw	255
  3298  0365  1283               	bcf	3,5	;RP0=0, select bank0
  3299  0366  1303               	bcf	3,6	;RP1=0, select bank0
  3300  0367  00A8               	movwf	??__doprnt
  3301  0368  0828               	movf	??__doprnt,w
  3302  0369  07AC               	addwf	__doprnt@prec,f
  3303  036A  0A2C               	incf	__doprnt@prec,w
  3304  036B  1D03               	btfss	3,2
  3305  036C  2B6E               	goto	u1511
  3306  036D  2B6F               	goto	u1510
  3307  036E                     u1511:
  3308  036E  2B11               	goto	l1957
  3309  036F                     u1510:
  3310  036F                     l1969:
  3311                           
  3312                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  3313  036F  3001               	movlw	1
  3314  0370  1283               	bcf	3,5	;RP0=0, select bank0
  3315  0371  1303               	bcf	3,6	;RP1=0, select bank0
  3316  0372  07A6               	addwf	__doprnt@f,f
  3317  0373  30FF               	movlw	-1
  3318  0374  0726               	addwf	__doprnt@f,w
  3319  0375  0084               	movwf	4
  3320  0376  120A  118A  2400  120A  118A  	fcall	stringdir
  3321  037B  00A8               	movwf	??__doprnt
  3322  037C  0828               	movf	??__doprnt,w
  3323  037D  00AF               	movwf	__doprnt@c
  3324  037E  082F               	movf	__doprnt@c,w
  3325  037F  1D03               	btfss	3,2
  3326  0380  2B82               	goto	u1521
  3327  0381  2B83               	goto	u1520
  3328  0382                     u1521:
  3329  0382  2A54               	goto	l1909
  3330  0383                     u1520:
  3331  0383                     l1971:
  3332                           
  3333                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1566:  return 0;
  3334  0383  01A6               	clrf	?__doprnt
  3335  0384  01A7               	clrf	?__doprnt+1
  3336  0385                     l773:
  3337  0385  0008               	return
  3338  0386                     __end_of__doprnt:
  3339                           
  3340                           	psect	text12
  3341  03D8                     __ptext12:	
  3342 ;; *************** function _putch *****************
  3343 ;; Defined at:
  3344 ;;		line 202 in file "D2_main3M.c"
  3345 ;; Parameters:    Size  Location     Type
  3346 ;;  data            1    2[COMMON] unsigned char 
  3347 ;; Auto vars:     Size  Location     Type
  3348 ;;		None
  3349 ;; Return value:  Size  Location     Type
  3350 ;;                  1    wreg      void 
  3351 ;; Registers used:
  3352 ;;		wreg
  3353 ;; Tracked objects:
  3354 ;;		On entry : 0/0
  3355 ;;		On exit  : 0/0
  3356 ;;		Unchanged: 0/0
  3357 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3358 ;;      Params:         1       0       0       0       0
  3359 ;;      Locals:         0       0       0       0       0
  3360 ;;      Temps:          0       0       0       0       0
  3361 ;;      Totals:         1       0       0       0       0
  3362 ;;Total ram usage:        1 bytes
  3363 ;; Hardware stack levels used:    1
  3364 ;; Hardware stack levels required when called:    1
  3365 ;; This function calls:
  3366 ;;		Nothing
  3367 ;; This function is called by:
  3368 ;;		_printf
  3369 ;;		__doprnt
  3370 ;; This function uses a non-reentrant model
  3371 ;;
  3372                           
  3373                           
  3374                           ;psect for function _putch
  3375  03D8                     _putch:
  3376  03D8                     l1369:	
  3377                           ;incstack = 0
  3378                           ; Regs used in _putch: [wreg]
  3379                           
  3380  03D8                     l129:	
  3381                           ;D2_main3M.c: 203:     while(TXIF == 0);
  3382                           
  3383  03D8  1283               	bcf	3,5	;RP0=0, select bank0
  3384  03D9  1303               	bcf	3,6	;RP1=0, select bank0
  3385  03DA  1E0C               	btfss	12,4	;volatile
  3386  03DB  2BDD               	goto	u691
  3387  03DC  2BDE               	goto	u690
  3388  03DD                     u691:
  3389  03DD  2BD8               	goto	l129
  3390  03DE                     u690:
  3391  03DE                     l1371:
  3392                           
  3393                           ;D2_main3M.c: 204:     TXREG = data;
  3394  03DE  0872               	movf	putch@data,w
  3395  03DF  0099               	movwf	25	;volatile
  3396  03E0                     l132:
  3397  03E0  0008               	return
  3398  03E1                     __end_of_putch:
  3399                           
  3400                           	psect	text13
  3401  072F                     __ptext13:	
  3402 ;; *************** function ___lwmod *****************
  3403 ;; Defined at:
  3404 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwmod.c"
  3405 ;; Parameters:    Size  Location     Type
  3406 ;;  divisor         2    0[BANK0 ] unsigned int 
  3407 ;;  dividend        2    2[BANK0 ] unsigned int 
  3408 ;; Auto vars:     Size  Location     Type
  3409 ;;  counter         1    5[BANK0 ] unsigned char 
  3410 ;; Return value:  Size  Location     Type
  3411 ;;                  2    0[BANK0 ] unsigned int 
  3412 ;; Registers used:
  3413 ;;		wreg, status,2, status,0
  3414 ;; Tracked objects:
  3415 ;;		On entry : 0/0
  3416 ;;		On exit  : 0/0
  3417 ;;		Unchanged: 0/0
  3418 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3419 ;;      Params:         0       4       0       0       0
  3420 ;;      Locals:         0       1       0       0       0
  3421 ;;      Temps:          0       1       0       0       0
  3422 ;;      Totals:         0       6       0       0       0
  3423 ;;Total ram usage:        6 bytes
  3424 ;; Hardware stack levels used:    1
  3425 ;; Hardware stack levels required when called:    1
  3426 ;; This function calls:
  3427 ;;		Nothing
  3428 ;; This function is called by:
  3429 ;;		__doprnt
  3430 ;; This function uses a non-reentrant model
  3431 ;;
  3432                           
  3433                           
  3434                           ;psect for function ___lwmod
  3435  072F                     ___lwmod:
  3436  072F                     l1885:	
  3437                           ;incstack = 0
  3438                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  3439                           
  3440  072F  1283               	bcf	3,5	;RP0=0, select bank0
  3441  0730  1303               	bcf	3,6	;RP1=0, select bank0
  3442  0731  0820               	movf	___lwmod@divisor,w
  3443  0732  0421               	iorwf	___lwmod@divisor+1,w
  3444  0733  1903               	btfsc	3,2
  3445  0734  2F36               	goto	u1371
  3446  0735  2F37               	goto	u1370
  3447  0736                     u1371:
  3448  0736  2F66               	goto	l1903
  3449  0737                     u1370:
  3450  0737                     l1887:
  3451  0737  01A5               	clrf	___lwmod@counter
  3452  0738  0AA5               	incf	___lwmod@counter,f
  3453  0739  2F45               	goto	l1893
  3454  073A                     l1889:
  3455  073A  3001               	movlw	1
  3456  073B                     u1385:
  3457  073B  1003               	clrc
  3458  073C  0DA0               	rlf	___lwmod@divisor,f
  3459  073D  0DA1               	rlf	___lwmod@divisor+1,f
  3460  073E  3EFF               	addlw	-1
  3461  073F  1D03               	skipz
  3462  0740  2F3B               	goto	u1385
  3463  0741                     l1891:
  3464  0741  3001               	movlw	1
  3465  0742  00A4               	movwf	??___lwmod
  3466  0743  0824               	movf	??___lwmod,w
  3467  0744  07A5               	addwf	___lwmod@counter,f
  3468  0745                     l1893:
  3469  0745  1FA1               	btfss	___lwmod@divisor+1,7
  3470  0746  2F48               	goto	u1391
  3471  0747  2F49               	goto	u1390
  3472  0748                     u1391:
  3473  0748  2F3A               	goto	l1889
  3474  0749                     u1390:
  3475  0749                     l1895:
  3476  0749  0821               	movf	___lwmod@divisor+1,w
  3477  074A  0223               	subwf	___lwmod@dividend+1,w
  3478  074B  1D03               	skipz
  3479  074C  2F4F               	goto	u1405
  3480  074D  0820               	movf	___lwmod@divisor,w
  3481  074E  0222               	subwf	___lwmod@dividend,w
  3482  074F                     u1405:
  3483  074F  1C03               	skipc
  3484  0750  2F52               	goto	u1401
  3485  0751  2F53               	goto	u1400
  3486  0752                     u1401:
  3487  0752  2F59               	goto	l1899
  3488  0753                     u1400:
  3489  0753                     l1897:
  3490  0753  0820               	movf	___lwmod@divisor,w
  3491  0754  02A2               	subwf	___lwmod@dividend,f
  3492  0755  0821               	movf	___lwmod@divisor+1,w
  3493  0756  1C03               	skipc
  3494  0757  03A3               	decf	___lwmod@dividend+1,f
  3495  0758  02A3               	subwf	___lwmod@dividend+1,f
  3496  0759                     l1899:
  3497  0759  3001               	movlw	1
  3498  075A                     u1415:
  3499  075A  1003               	clrc
  3500  075B  0CA1               	rrf	___lwmod@divisor+1,f
  3501  075C  0CA0               	rrf	___lwmod@divisor,f
  3502  075D  3EFF               	addlw	-1
  3503  075E  1D03               	skipz
  3504  075F  2F5A               	goto	u1415
  3505  0760                     l1901:
  3506  0760  3001               	movlw	1
  3507  0761  02A5               	subwf	___lwmod@counter,f
  3508  0762  1D03               	btfss	3,2
  3509  0763  2F65               	goto	u1421
  3510  0764  2F66               	goto	u1420
  3511  0765                     u1421:
  3512  0765  2F49               	goto	l1895
  3513  0766                     u1420:
  3514  0766                     l1903:
  3515  0766  0823               	movf	___lwmod@dividend+1,w
  3516  0767  00A1               	movwf	?___lwmod+1
  3517  0768  0822               	movf	___lwmod@dividend,w
  3518  0769  00A0               	movwf	?___lwmod
  3519  076A                     l540:
  3520  076A  0008               	return
  3521  076B                     __end_of___lwmod:
  3522                           
  3523                           	psect	text14
  3524  06AE                     __ptext14:	
  3525 ;; *************** function ___lwdiv *****************
  3526 ;; Defined at:
  3527 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwdiv.c"
  3528 ;; Parameters:    Size  Location     Type
  3529 ;;  divisor         2    2[COMMON] unsigned int 
  3530 ;;  dividend        2    4[COMMON] unsigned int 
  3531 ;; Auto vars:     Size  Location     Type
  3532 ;;  quotient        2    7[COMMON] unsigned int 
  3533 ;;  counter         1    9[COMMON] unsigned char 
  3534 ;; Return value:  Size  Location     Type
  3535 ;;                  2    2[COMMON] unsigned int 
  3536 ;; Registers used:
  3537 ;;		wreg, status,2, status,0
  3538 ;; Tracked objects:
  3539 ;;		On entry : 0/0
  3540 ;;		On exit  : 0/0
  3541 ;;		Unchanged: 0/0
  3542 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3543 ;;      Params:         4       0       0       0       0
  3544 ;;      Locals:         3       0       0       0       0
  3545 ;;      Temps:          1       0       0       0       0
  3546 ;;      Totals:         8       0       0       0       0
  3547 ;;Total ram usage:        8 bytes
  3548 ;; Hardware stack levels used:    1
  3549 ;; Hardware stack levels required when called:    1
  3550 ;; This function calls:
  3551 ;;		Nothing
  3552 ;; This function is called by:
  3553 ;;		__doprnt
  3554 ;; This function uses a non-reentrant model
  3555 ;;
  3556                           
  3557                           
  3558                           ;psect for function ___lwdiv
  3559  06AE                     ___lwdiv:
  3560  06AE                     l1375:	
  3561                           ;incstack = 0
  3562                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  3563                           
  3564  06AE  01F7               	clrf	___lwdiv@quotient
  3565  06AF  01F8               	clrf	___lwdiv@quotient+1
  3566  06B0                     l1377:
  3567  06B0  0872               	movf	___lwdiv@divisor,w
  3568  06B1  0473               	iorwf	___lwdiv@divisor+1,w
  3569  06B2  1903               	btfsc	3,2
  3570  06B3  2EB5               	goto	u701
  3571  06B4  2EB6               	goto	u700
  3572  06B5                     u701:
  3573  06B5  2EED               	goto	l1397
  3574  06B6                     u700:
  3575  06B6                     l1379:
  3576  06B6  01F9               	clrf	___lwdiv@counter
  3577  06B7  0AF9               	incf	___lwdiv@counter,f
  3578  06B8  2EC4               	goto	l1385
  3579  06B9                     l1381:
  3580  06B9  3001               	movlw	1
  3581  06BA                     u715:
  3582  06BA  1003               	clrc
  3583  06BB  0DF2               	rlf	___lwdiv@divisor,f
  3584  06BC  0DF3               	rlf	___lwdiv@divisor+1,f
  3585  06BD  3EFF               	addlw	-1
  3586  06BE  1D03               	skipz
  3587  06BF  2EBA               	goto	u715
  3588  06C0                     l1383:
  3589  06C0  3001               	movlw	1
  3590  06C1  00F6               	movwf	??___lwdiv
  3591  06C2  0876               	movf	??___lwdiv,w
  3592  06C3  07F9               	addwf	___lwdiv@counter,f
  3593  06C4                     l1385:
  3594  06C4  1FF3               	btfss	___lwdiv@divisor+1,7
  3595  06C5  2EC7               	goto	u721
  3596  06C6  2EC8               	goto	u720
  3597  06C7                     u721:
  3598  06C7  2EB9               	goto	l1381
  3599  06C8                     u720:
  3600  06C8                     l1387:
  3601  06C8  3001               	movlw	1
  3602  06C9                     u735:
  3603  06C9  1003               	clrc
  3604  06CA  0DF7               	rlf	___lwdiv@quotient,f
  3605  06CB  0DF8               	rlf	___lwdiv@quotient+1,f
  3606  06CC  3EFF               	addlw	-1
  3607  06CD  1D03               	skipz
  3608  06CE  2EC9               	goto	u735
  3609  06CF  0873               	movf	___lwdiv@divisor+1,w
  3610  06D0  0275               	subwf	___lwdiv@dividend+1,w
  3611  06D1  1D03               	skipz
  3612  06D2  2ED5               	goto	u745
  3613  06D3  0872               	movf	___lwdiv@divisor,w
  3614  06D4  0274               	subwf	___lwdiv@dividend,w
  3615  06D5                     u745:
  3616  06D5  1C03               	skipc
  3617  06D6  2ED8               	goto	u741
  3618  06D7  2ED9               	goto	u740
  3619  06D8                     u741:
  3620  06D8  2EE0               	goto	l1393
  3621  06D9                     u740:
  3622  06D9                     l1389:
  3623  06D9  0872               	movf	___lwdiv@divisor,w
  3624  06DA  02F4               	subwf	___lwdiv@dividend,f
  3625  06DB  0873               	movf	___lwdiv@divisor+1,w
  3626  06DC  1C03               	skipc
  3627  06DD  03F5               	decf	___lwdiv@dividend+1,f
  3628  06DE  02F5               	subwf	___lwdiv@dividend+1,f
  3629  06DF                     l1391:
  3630  06DF  1477               	bsf	___lwdiv@quotient,0
  3631  06E0                     l1393:
  3632  06E0  3001               	movlw	1
  3633  06E1                     u755:
  3634  06E1  1003               	clrc
  3635  06E2  0CF3               	rrf	___lwdiv@divisor+1,f
  3636  06E3  0CF2               	rrf	___lwdiv@divisor,f
  3637  06E4  3EFF               	addlw	-1
  3638  06E5  1D03               	skipz
  3639  06E6  2EE1               	goto	u755
  3640  06E7                     l1395:
  3641  06E7  3001               	movlw	1
  3642  06E8  02F9               	subwf	___lwdiv@counter,f
  3643  06E9  1D03               	btfss	3,2
  3644  06EA  2EEC               	goto	u761
  3645  06EB  2EED               	goto	u760
  3646  06EC                     u761:
  3647  06EC  2EC8               	goto	l1387
  3648  06ED                     u760:
  3649  06ED                     l1397:
  3650  06ED  0878               	movf	___lwdiv@quotient+1,w
  3651  06EE  00F3               	movwf	?___lwdiv+1
  3652  06EF  0877               	movf	___lwdiv@quotient,w
  3653  06F0  00F2               	movwf	?___lwdiv
  3654  06F1                     l530:
  3655  06F1  0008               	return
  3656  06F2                     __end_of___lwdiv:
  3657                           
  3658                           	psect	text15
  3659  04A0                     __ptext15:	
  3660 ;; *************** function _atoi *****************
  3661 ;; Defined at:
  3662 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\atoi.c"
  3663 ;; Parameters:    Size  Location     Type
  3664 ;;  s               1    wreg     PTR const unsigned char 
  3665 ;;		 -> concat@s1(20), 
  3666 ;; Auto vars:     Size  Location     Type
  3667 ;;  s               1    5[BANK0 ] PTR const unsigned char 
  3668 ;;		 -> concat@s1(20), 
  3669 ;;  a               2    3[BANK0 ] int 
  3670 ;;  sign            1    2[BANK0 ] unsigned char 
  3671 ;; Return value:  Size  Location     Type
  3672 ;;                  2    8[COMMON] int 
  3673 ;; Registers used:
  3674 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3675 ;; Tracked objects:
  3676 ;;		On entry : 0/0
  3677 ;;		On exit  : 0/0
  3678 ;;		Unchanged: 0/0
  3679 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3680 ;;      Params:         2       0       0       0       0
  3681 ;;      Locals:         0       4       0       0       0
  3682 ;;      Temps:          0       2       0       0       0
  3683 ;;      Totals:         2       6       0       0       0
  3684 ;;Total ram usage:        8 bytes
  3685 ;; Hardware stack levels used:    1
  3686 ;; Hardware stack levels required when called:    2
  3687 ;; This function calls:
  3688 ;;		___wmul
  3689 ;;		_isdigit
  3690 ;; This function is called by:
  3691 ;;		_concat
  3692 ;; This function uses a non-reentrant model
  3693 ;;
  3694                           
  3695                           
  3696                           ;psect for function _atoi
  3697  04A0                     _atoi:
  3698                           
  3699                           ;incstack = 0
  3700                           ; Regs used in _atoi: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3701                           ;atoi@s stored from wreg
  3702  04A0  1283               	bcf	3,5	;RP0=0, select bank0
  3703  04A1  1303               	bcf	3,6	;RP1=0, select bank0
  3704  04A2  00A5               	movwf	atoi@s
  3705  04A3                     l1991:
  3706  04A3  2CA8               	goto	l1995
  3707  04A4                     l1993:
  3708  04A4  3001               	movlw	1
  3709  04A5  00A0               	movwf	??_atoi
  3710  04A6  0820               	movf	??_atoi,w
  3711  04A7  07A5               	addwf	atoi@s,f
  3712  04A8                     l1995:
  3713  04A8  0825               	movf	atoi@s,w
  3714  04A9  0084               	movwf	4
  3715  04AA  3020               	movlw	32
  3716  04AB  1383               	bcf	3,7	;select IRP bank0
  3717  04AC  0600               	xorwf	0,w
  3718  04AD  1903               	btfsc	3,2
  3719  04AE  2CB0               	goto	u1531
  3720  04AF  2CB1               	goto	u1530
  3721  04B0                     u1531:
  3722  04B0  2CA4               	goto	l1993
  3723  04B1                     u1530:
  3724  04B1                     l1997:
  3725  04B1  0825               	movf	atoi@s,w
  3726  04B2  0084               	movwf	4
  3727  04B3  3009               	movlw	9
  3728  04B4  0600               	xorwf	0,w
  3729  04B5  1903               	btfsc	3,2
  3730  04B6  2CB8               	goto	u1541
  3731  04B7  2CB9               	goto	u1540
  3732  04B8                     u1541:
  3733  04B8  2CA4               	goto	l1993
  3734  04B9                     u1540:
  3735  04B9                     l1999:
  3736  04B9  01A3               	clrf	atoi@a
  3737  04BA  01A4               	clrf	atoi@a+1
  3738  04BB  01A2               	clrf	atoi@sign
  3739  04BC                     l2001:
  3740  04BC  0825               	movf	atoi@s,w
  3741  04BD  0084               	movwf	4
  3742  04BE  302D               	movlw	45
  3743  04BF  0600               	xorwf	0,w
  3744  04C0  1D03               	btfss	3,2
  3745  04C1  2CC3               	goto	u1551
  3746  04C2  2CC4               	goto	u1550
  3747  04C3                     u1551:
  3748  04C3  2CCD               	goto	l2005
  3749  04C4                     u1550:
  3750  04C4                     l2003:
  3751  04C4  3001               	movlw	1
  3752  04C5  00A0               	movwf	??_atoi
  3753  04C6  0820               	movf	??_atoi,w
  3754  04C7  07A2               	addwf	atoi@sign,f
  3755  04C8  3001               	movlw	1
  3756  04C9  00A0               	movwf	??_atoi
  3757  04CA  0820               	movf	??_atoi,w
  3758  04CB  07A5               	addwf	atoi@s,f
  3759  04CC  2CFF               	goto	l2013
  3760  04CD                     l2005:
  3761  04CD  0825               	movf	atoi@s,w
  3762  04CE  0084               	movwf	4
  3763  04CF  302B               	movlw	43
  3764  04D0  0600               	xorwf	0,w
  3765  04D1  1D03               	btfss	3,2
  3766  04D2  2CD4               	goto	u1561
  3767  04D3  2CD5               	goto	u1560
  3768  04D4                     u1561:
  3769  04D4  2CFF               	goto	l2013
  3770  04D5                     u1560:
  3771  04D5                     l2007:
  3772  04D5  3001               	movlw	1
  3773  04D6  00A0               	movwf	??_atoi
  3774  04D7  0820               	movf	??_atoi,w
  3775  04D8  07A5               	addwf	atoi@s,f
  3776  04D9  2CFF               	goto	l2013
  3777  04DA                     l2009:
  3778  04DA  1283               	bcf	3,5	;RP0=0, select bank0
  3779  04DB  1303               	bcf	3,6	;RP1=0, select bank0
  3780  04DC  0825               	movf	atoi@s,w
  3781  04DD  0084               	movwf	4
  3782  04DE  0824               	movf	atoi@a+1,w
  3783  04DF  00F3               	movwf	___wmul@multiplier+1
  3784  04E0  0823               	movf	atoi@a,w
  3785  04E1  00F2               	movwf	___wmul@multiplier
  3786  04E2  300A               	movlw	10
  3787  04E3  00F4               	movwf	___wmul@multiplicand
  3788  04E4  3000               	movlw	0
  3789  04E5  00F5               	movwf	___wmul@multiplicand+1
  3790  04E6  120A  118A  27C9  120A  118A  	fcall	___wmul
  3791  04EB  1383               	bcf	3,7	;select IRP bank0
  3792  04EC  0800               	movf	0,w
  3793  04ED  0772               	addwf	?___wmul,w
  3794  04EE  1283               	bcf	3,5	;RP0=0, select bank0
  3795  04EF  1303               	bcf	3,6	;RP1=0, select bank0
  3796  04F0  00A0               	movwf	??_atoi
  3797  04F1  3000               	movlw	0
  3798  04F2  1803               	skipnc
  3799  04F3  3001               	movlw	1
  3800  04F4  0773               	addwf	?___wmul+1,w
  3801  04F5  00A1               	movwf	??_atoi+1
  3802  04F6  0820               	movf	??_atoi,w
  3803  04F7  3ED0               	addlw	208
  3804  04F8  00A3               	movwf	atoi@a
  3805  04F9  0821               	movf	??_atoi+1,w
  3806  04FA  1803               	skipnc
  3807  04FB  3E01               	addlw	1
  3808  04FC  3EFF               	addlw	255
  3809  04FD  00A4               	movwf	atoi@a+1
  3810  04FE  2CD5               	goto	l2007
  3811  04FF                     l2013:
  3812  04FF  0825               	movf	atoi@s,w
  3813  0500  0084               	movwf	4
  3814  0501  0800               	movf	0,w
  3815  0502  120A  118A  27EE  120A  118A  	fcall	_isdigit
  3816  0507  1803               	btfsc	3,0
  3817  0508  2D0A               	goto	u1571
  3818  0509  2D0B               	goto	u1570
  3819  050A                     u1571:
  3820  050A  2CDA               	goto	l2009
  3821  050B                     u1570:
  3822  050B                     l2015:
  3823  050B  1283               	bcf	3,5	;RP0=0, select bank0
  3824  050C  1303               	bcf	3,6	;RP1=0, select bank0
  3825  050D  0822               	movf	atoi@sign,w
  3826  050E  1903               	btfsc	3,2
  3827  050F  2D11               	goto	u1581
  3828  0510  2D12               	goto	u1580
  3829  0511                     u1581:
  3830  0511  2D1E               	goto	l2021
  3831  0512                     u1580:
  3832  0512                     l2017:
  3833  0512  0923               	comf	atoi@a,w
  3834  0513  00A0               	movwf	??_atoi
  3835  0514  0924               	comf	atoi@a+1,w
  3836  0515  00A1               	movwf	??_atoi+1
  3837  0516  0AA0               	incf	??_atoi,f
  3838  0517  1903               	skipnz
  3839  0518  0AA1               	incf	??_atoi+1,f
  3840  0519  0820               	movf	??_atoi,w
  3841  051A  00F8               	movwf	?_atoi
  3842  051B  0821               	movf	??_atoi+1,w
  3843  051C  00F9               	movwf	?_atoi+1
  3844  051D  2D22               	goto	l721
  3845  051E                     l2021:
  3846  051E  0824               	movf	atoi@a+1,w
  3847  051F  00F9               	movwf	?_atoi+1
  3848  0520  0823               	movf	atoi@a,w
  3849  0521  00F8               	movwf	?_atoi
  3850  0522                     l721:
  3851  0522  0008               	return
  3852  0523                     __end_of_atoi:
  3853                           
  3854                           	psect	text16
  3855  07EE                     __ptext16:	
  3856 ;; *************** function _isdigit *****************
  3857 ;; Defined at:
  3858 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\isdigit.c"
  3859 ;; Parameters:    Size  Location     Type
  3860 ;;  c               1    wreg     unsigned char 
  3861 ;; Auto vars:     Size  Location     Type
  3862 ;;  c               1    3[COMMON] unsigned char 
  3863 ;; Return value:  Size  Location     Type
  3864 ;;		None               void
  3865 ;; Registers used:
  3866 ;;		wreg, status,2, status,0
  3867 ;; Tracked objects:
  3868 ;;		On entry : 0/0
  3869 ;;		On exit  : 0/0
  3870 ;;		Unchanged: 0/0
  3871 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3872 ;;      Params:         0       0       0       0       0
  3873 ;;      Locals:         2       0       0       0       0
  3874 ;;      Temps:          0       0       0       0       0
  3875 ;;      Totals:         2       0       0       0       0
  3876 ;;Total ram usage:        2 bytes
  3877 ;; Hardware stack levels used:    1
  3878 ;; Hardware stack levels required when called:    1
  3879 ;; This function calls:
  3880 ;;		Nothing
  3881 ;; This function is called by:
  3882 ;;		_atoi
  3883 ;; This function uses a non-reentrant model
  3884 ;;
  3885                           
  3886                           
  3887                           ;psect for function _isdigit
  3888  07EE                     _isdigit:
  3889                           
  3890                           ;incstack = 0
  3891                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  3892                           ;isdigit@c stored from wreg
  3893  07EE  00F3               	movwf	isdigit@c
  3894  07EF                     l1437:
  3895  07EF  01F2               	clrf	_isdigit$954
  3896  07F0                     l1439:
  3897  07F0  303A               	movlw	58
  3898  07F1  0273               	subwf	isdigit@c,w
  3899  07F2  1803               	skipnc
  3900  07F3  2FF5               	goto	u871
  3901  07F4  2FF6               	goto	u870
  3902  07F5                     u871:
  3903  07F5  2FFE               	goto	l1445
  3904  07F6                     u870:
  3905  07F6                     l1441:
  3906  07F6  3030               	movlw	48
  3907  07F7  0273               	subwf	isdigit@c,w
  3908  07F8  1C03               	skipc
  3909  07F9  2FFB               	goto	u881
  3910  07FA  2FFC               	goto	u880
  3911  07FB                     u881:
  3912  07FB  2FFE               	goto	l1445
  3913  07FC                     u880:
  3914  07FC                     l1443:
  3915  07FC  01F2               	clrf	_isdigit$954
  3916  07FD  0AF2               	incf	_isdigit$954,f
  3917  07FE                     l1445:
  3918  07FE  0C72               	rrf	_isdigit$954,w
  3919  07FF                     l726:
  3920  07FF  0008               	return
  3921  0800                     __end_of_isdigit:
  3922                           
  3923                           	psect	text17
  3924  07C9                     __ptext17:	
  3925 ;; *************** function ___wmul *****************
  3926 ;; Defined at:
  3927 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul16.c"
  3928 ;; Parameters:    Size  Location     Type
  3929 ;;  multiplier      2    2[COMMON] unsigned int 
  3930 ;;  multiplicand    2    4[COMMON] unsigned int 
  3931 ;; Auto vars:     Size  Location     Type
  3932 ;;  product         2    6[COMMON] unsigned int 
  3933 ;; Return value:  Size  Location     Type
  3934 ;;                  2    2[COMMON] unsigned int 
  3935 ;; Registers used:
  3936 ;;		wreg, status,2, status,0
  3937 ;; Tracked objects:
  3938 ;;		On entry : 0/0
  3939 ;;		On exit  : 0/0
  3940 ;;		Unchanged: 0/0
  3941 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3942 ;;      Params:         4       0       0       0       0
  3943 ;;      Locals:         2       0       0       0       0
  3944 ;;      Temps:          0       0       0       0       0
  3945 ;;      Totals:         6       0       0       0       0
  3946 ;;Total ram usage:        6 bytes
  3947 ;; Hardware stack levels used:    1
  3948 ;; Hardware stack levels required when called:    1
  3949 ;; This function calls:
  3950 ;;		Nothing
  3951 ;; This function is called by:
  3952 ;;		_atoi
  3953 ;; This function uses a non-reentrant model
  3954 ;;
  3955                           
  3956                           
  3957                           ;psect for function ___wmul
  3958  07C9                     ___wmul:
  3959  07C9                     l1423:	
  3960                           ;incstack = 0
  3961                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  3962                           
  3963  07C9  01F6               	clrf	___wmul@product
  3964  07CA  01F7               	clrf	___wmul@product+1
  3965  07CB                     l1425:
  3966  07CB  1C72               	btfss	___wmul@multiplier,0
  3967  07CC  2FCE               	goto	u831
  3968  07CD  2FCF               	goto	u830
  3969  07CE                     u831:
  3970  07CE  2FD5               	goto	l258
  3971  07CF                     u830:
  3972  07CF                     l1427:
  3973  07CF  0874               	movf	___wmul@multiplicand,w
  3974  07D0  07F6               	addwf	___wmul@product,f
  3975  07D1  1803               	skipnc
  3976  07D2  0AF7               	incf	___wmul@product+1,f
  3977  07D3  0875               	movf	___wmul@multiplicand+1,w
  3978  07D4  07F7               	addwf	___wmul@product+1,f
  3979  07D5                     l258:
  3980  07D5  3001               	movlw	1
  3981  07D6                     u845:
  3982  07D6  1003               	clrc
  3983  07D7  0DF4               	rlf	___wmul@multiplicand,f
  3984  07D8  0DF5               	rlf	___wmul@multiplicand+1,f
  3985  07D9  3EFF               	addlw	-1
  3986  07DA  1D03               	skipz
  3987  07DB  2FD6               	goto	u845
  3988  07DC                     l1429:
  3989  07DC  3001               	movlw	1
  3990  07DD                     u855:
  3991  07DD  1003               	clrc
  3992  07DE  0CF3               	rrf	___wmul@multiplier+1,f
  3993  07DF  0CF2               	rrf	___wmul@multiplier,f
  3994  07E0  3EFF               	addlw	-1
  3995  07E1  1D03               	skipz
  3996  07E2  2FDD               	goto	u855
  3997  07E3                     l1431:
  3998  07E3  0872               	movf	___wmul@multiplier,w
  3999  07E4  0473               	iorwf	___wmul@multiplier+1,w
  4000  07E5  1D03               	btfss	3,2
  4001  07E6  2FE8               	goto	u861
  4002  07E7  2FE9               	goto	u860
  4003  07E8                     u861:
  4004  07E8  2FCB               	goto	l1425
  4005  07E9                     u860:
  4006  07E9                     l1433:
  4007  07E9  0877               	movf	___wmul@product+1,w
  4008  07EA  00F3               	movwf	?___wmul+1
  4009  07EB  0876               	movf	___wmul@product,w
  4010  07EC  00F2               	movwf	?___wmul
  4011  07ED                     l260:
  4012  07ED  0008               	return
  4013  07EE                     __end_of___wmul:
  4014                           
  4015                           	psect	text18
  4016  03F8                     __ptext18:	
  4017 ;; *************** function _Write_SPI *****************
  4018 ;; Defined at:
  4019 ;;		line 26 in file "SPI.c"
  4020 ;; Parameters:    Size  Location     Type
  4021 ;;  dat             1    wreg     unsigned char 
  4022 ;; Auto vars:     Size  Location     Type
  4023 ;;  dat             1    2[COMMON] unsigned char 
  4024 ;; Return value:  Size  Location     Type
  4025 ;;                  1    wreg      void 
  4026 ;; Registers used:
  4027 ;;		wreg
  4028 ;; Tracked objects:
  4029 ;;		On entry : 0/0
  4030 ;;		On exit  : 0/0
  4031 ;;		Unchanged: 0/0
  4032 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4033 ;;      Params:         0       0       0       0       0
  4034 ;;      Locals:         1       0       0       0       0
  4035 ;;      Temps:          0       0       0       0       0
  4036 ;;      Totals:         1       0       0       0       0
  4037 ;;Total ram usage:        1 bytes
  4038 ;; Hardware stack levels used:    1
  4039 ;; Hardware stack levels required when called:    1
  4040 ;; This function calls:
  4041 ;;		Nothing
  4042 ;; This function is called by:
  4043 ;;		_main
  4044 ;; This function uses a non-reentrant model
  4045 ;;
  4046                           
  4047                           
  4048                           ;psect for function _Write_SPI
  4049  03F8                     _Write_SPI:
  4050                           
  4051                           ;incstack = 0
  4052                           ; Regs used in _Write_SPI: [wreg]
  4053                           ;Write_SPI@dat stored from wreg
  4054  03F8  00F2               	movwf	Write_SPI@dat
  4055  03F9                     l1739:
  4056                           
  4057                           ;SPI.c: 26: void Write_SPI(char dat);SPI.c: 27: {;SPI.c: 28:     SSPBUF = dat;
  4058  03F9  0872               	movf	Write_SPI@dat,w
  4059  03FA  1283               	bcf	3,5	;RP0=0, select bank0
  4060  03FB  1303               	bcf	3,6	;RP1=0, select bank0
  4061  03FC  0093               	movwf	19	;volatile
  4062  03FD                     l164:
  4063  03FD  0008               	return
  4064  03FE                     __end_of_Write_SPI:
  4065                           
  4066                           	psect	text19
  4067  03E1                     __ptext19:	
  4068 ;; *************** function _Read_SPI *****************
  4069 ;; Defined at:
  4070 ;;		line 39 in file "SPI.c"
  4071 ;; Parameters:    Size  Location     Type
  4072 ;;		None
  4073 ;; Auto vars:     Size  Location     Type
  4074 ;;		None
  4075 ;; Return value:  Size  Location     Type
  4076 ;;                  1    wreg      unsigned char 
  4077 ;; Registers used:
  4078 ;;		wreg, status,2, status,0, pclath, cstack
  4079 ;; Tracked objects:
  4080 ;;		On entry : 0/0
  4081 ;;		On exit  : 0/0
  4082 ;;		Unchanged: 0/0
  4083 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4084 ;;      Params:         0       0       0       0       0
  4085 ;;      Locals:         0       0       0       0       0
  4086 ;;      Temps:          0       0       0       0       0
  4087 ;;      Totals:         0       0       0       0       0
  4088 ;;Total ram usage:        0 bytes
  4089 ;; Hardware stack levels used:    1
  4090 ;; Hardware stack levels required when called:    2
  4091 ;; This function calls:
  4092 ;;		_spiReceiveWait
  4093 ;; This function is called by:
  4094 ;;		_main
  4095 ;; This function uses a non-reentrant model
  4096 ;;
  4097                           
  4098                           
  4099                           ;psect for function _Read_SPI
  4100  03E1                     _Read_SPI:
  4101  03E1                     l1741:	
  4102                           ;incstack = 0
  4103                           ; Regs used in _Read_SPI: [wreg+status,2+status,0+pclath+cstack]
  4104                           
  4105                           
  4106                           ;SPI.c: 41:     spiReceiveWait();
  4107  03E1  120A  118A  23EA  120A  118A  	fcall	_spiReceiveWait
  4108  03E6                     l1743:
  4109                           
  4110                           ;SPI.c: 42:     return(SSPBUF);
  4111  03E6  1283               	bcf	3,5	;RP0=0, select bank0
  4112  03E7  1303               	bcf	3,6	;RP1=0, select bank0
  4113  03E8  0813               	movf	19,w	;volatile
  4114  03E9                     l172:
  4115  03E9  0008               	return
  4116  03EA                     __end_of_Read_SPI:
  4117                           
  4118                           	psect	text20
  4119  03EA                     __ptext20:	
  4120 ;; *************** function _spiReceiveWait *****************
  4121 ;; Defined at:
  4122 ;;		line 21 in file "SPI.c"
  4123 ;; Parameters:    Size  Location     Type
  4124 ;;		None
  4125 ;; Auto vars:     Size  Location     Type
  4126 ;;		None
  4127 ;; Return value:  Size  Location     Type
  4128 ;;                  1    wreg      void 
  4129 ;; Registers used:
  4130 ;;		None
  4131 ;; Tracked objects:
  4132 ;;		On entry : 0/0
  4133 ;;		On exit  : 0/0
  4134 ;;		Unchanged: 0/0
  4135 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4136 ;;      Params:         0       0       0       0       0
  4137 ;;      Locals:         0       0       0       0       0
  4138 ;;      Temps:          0       0       0       0       0
  4139 ;;      Totals:         0       0       0       0       0
  4140 ;;Total ram usage:        0 bytes
  4141 ;; Hardware stack levels used:    1
  4142 ;; Hardware stack levels required when called:    1
  4143 ;; This function calls:
  4144 ;;		Nothing
  4145 ;; This function is called by:
  4146 ;;		_Read_SPI
  4147 ;; This function uses a non-reentrant model
  4148 ;;
  4149                           
  4150                           
  4151                           ;psect for function _spiReceiveWait
  4152  03EA                     _spiReceiveWait:
  4153  03EA                     l1697:	
  4154                           ;incstack = 0
  4155                           ; Regs used in _spiReceiveWait: []
  4156                           
  4157  03EA                     l158:	
  4158                           ;SPI.c: 23:     while ( !SSPSTATbits.BF );
  4159                           
  4160  03EA  1683               	bsf	3,5	;RP0=1, select bank1
  4161  03EB  1303               	bcf	3,6	;RP1=0, select bank1
  4162  03EC  1C14               	btfss	20,0	;volatile
  4163  03ED  2BEF               	goto	u1271
  4164  03EE  2BF0               	goto	u1270
  4165  03EF                     u1271:
  4166  03EF  2BEA               	goto	l158
  4167  03F0                     u1270:
  4168  03F0                     l161:
  4169  03F0  0008               	return
  4170  03F1                     __end_of_spiReceiveWait:
  4171                           
  4172                           	psect	text21
  4173  03F1                     __ptext21:	
  4174 ;; *************** function _isr *****************
  4175 ;; Defined at:
  4176 ;;		line 64 in file "D2_main3M.c"
  4177 ;; Parameters:    Size  Location     Type
  4178 ;;		None
  4179 ;; Auto vars:     Size  Location     Type
  4180 ;;		None
  4181 ;; Return value:  Size  Location     Type
  4182 ;;                  1    wreg      void 
  4183 ;; Registers used:
  4184 ;;		None
  4185 ;; Tracked objects:
  4186 ;;		On entry : 0/0
  4187 ;;		On exit  : 0/0
  4188 ;;		Unchanged: 0/0
  4189 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4190 ;;      Params:         0       0       0       0       0
  4191 ;;      Locals:         0       0       0       0       0
  4192 ;;      Temps:          2       0       0       0       0
  4193 ;;      Totals:         2       0       0       0       0
  4194 ;;Total ram usage:        2 bytes
  4195 ;; Hardware stack levels used:    1
  4196 ;; This function calls:
  4197 ;;		Nothing
  4198 ;; This function is called by:
  4199 ;;		Interrupt level 1
  4200 ;; This function uses a non-reentrant model
  4201 ;;
  4202                           
  4203                           
  4204                           ;psect for function _isr
  4205  03F1                     _isr:
  4206  03F1                     i1l89:
  4207  03F1  0871               	movf	??_isr+1,w
  4208  03F2  008A               	movwf	10
  4209  03F3  0E70               	swapf	??_isr,w
  4210  03F4  0083               	movwf	3
  4211  03F5  0EFE               	swapf	btemp,f
  4212  03F6  0E7E               	swapf	btemp,w
  4213  03F7  0009               	retfie
  4214  03F8                     __end_of_isr:
  4215  0002                     
  4216                           	psect	intentry
  4217  0004                     __pintentry:	
  4218                           ;incstack = 0
  4219                           ; Regs used in _isr: []
  4220                           
  4221  0004                     interrupt_function:
  4222  007E                     saved_w	set	btemp
  4223  0004  00FE               	movwf	btemp
  4224  0005  0E03               	swapf	3,w
  4225  0006  00F0               	movwf	??_isr
  4226  0007  080A               	movf	10,w
  4227  0008  00F1               	movwf	??_isr+1
  4228  0009  120A  118A  2BF1   	ljmp	_isr
  4229                           
  4230                           	psect	functab
  4231  0026                     __pfunctab:
  4232  0026                     __fptable:
  4233  0026                     fptable:
  4234  0026  00FF               	movwf	(btemp+1)& (0+127)
  4235  0027  3000               	movlw	high fptable
  4236  0028  008A               	movwf	10
  4237  0029  087F               	movf	(btemp+1)& (0+127),w
  4238  002A  0782               	addwf	2,f
  4239  002B                     fpbase:
  4240  002B  282B               	goto	fpbase	; Call via a null pointer and you will get stuck here.
  4241  002C                     fp__putch:
  4242  002C  120A  118A  2BD8   	ljmp	_putch
  4243  002F                     __end_of__fptable:
  4244  007E                     btemp	set	126	;btemp
  4245  007E                     wtemp0	set	126
  4246                           
  4247                           	psect	config
  4248                           
  4249                           ;Config register CONFIG1 @ 0x2007
  4250                           ;	Oscillator Selection bits
  4251                           ;	FOSC = XT, XT oscillator: Crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1/CLKIN
  4252                           ;	Watchdog Timer Enable bit
  4253                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  4254                           ;	Power-up Timer Enable bit
  4255                           ;	PWRTE = OFF, PWRT disabled
  4256                           ;	RE3/MCLR pin function select bit
  4257                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  4258                           ;	Code Protection bit
  4259                           ;	CP = OFF, Program memory code protection is disabled
  4260                           ;	Data Code Protection bit
  4261                           ;	CPD = OFF, Data memory code protection is disabled
  4262                           ;	Brown Out Reset Selection bits
  4263                           ;	BOREN = OFF, BOR disabled
  4264                           ;	Internal External Switchover bit
  4265                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  4266                           ;	Fail-Safe Clock Monitor Enabled bit
  4267                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  4268                           ;	Low Voltage Programming Enable bit
  4269                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  4270                           ;	In-Circuit Debugger Mode bit
  4271                           ;	DEBUG = 0x1, unprogrammed default
  4272  2007                     	org	8199
  4273  2007  20D1               	dw	8401
  4274                           
  4275                           ;Config register CONFIG2 @ 0x2008
  4276                           ;	Brown-out Reset Selection bit
  4277                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  4278                           ;	Flash Program Memory Self Write Enable bits
  4279                           ;	WRT = OFF, Write protection off
  4280  2008                     	org	8200
  4281  2008  3FFF               	dw	16383

Data Sizes:
    Strings     144
    Constant    10
    Data        0
    BSS         15
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      12
    BANK0            80     74      77
    BANK1            80      5      15
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    strcat@from	PTR const unsigned char  size(1) Largest target is 20
		 -> concat@s2(BANK0[20]), 

    strcat@to	PTR unsigned char  size(1) Largest target is 20
		 -> concat@s1(BANK0[20]), 

    strcat@cp	PTR unsigned char  size(1) Largest target is 20
		 -> concat@s1(BANK0[20]), 

    sprintf@f	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_14(CODE[3]), STR_13(CODE[3]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), ?_printf(BANK0[2]), 

    sprintf@wh	PTR unsigned char  size(1) Largest target is 20
		 -> concat@s2(BANK0[20]), concat@s1(BANK0[20]), 

    pb.func	PTR FTN(unsigned char ,)void  size(1) Largest target is 1
		 -> Absolute function(), putch(), 

    pb.ptr	PTR unsigned char  size(1) Largest target is 20
		 -> NULL(NULL[0]), concat@s2(BANK0[20]), concat@s1(BANK0[20]), 

    _doprnt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), printf@ap(BANK0[1]), 

    _doprnt@f	PTR const unsigned char  size(1) Largest target is 26
		 -> STR_14(CODE[3]), STR_13(CODE[3]), STR_12(CODE[25]), STR_11(CODE[21]), 
		 -> STR_10(CODE[20]), STR_9(CODE[20]), STR_8(CODE[2]), STR_7(CODE[4]), 
		 -> STR_6(CODE[3]), STR_5(CODE[26]), STR_4(CODE[2]), STR_3(CODE[4]), 
		 -> STR_2(CODE[3]), STR_1(CODE[25]), 

    _doprnt@pb.func	PTR FTN(unsigned char ,)void  size(1) Largest target is 1
		 -> Absolute function(), putch(), 

    _doprnt@pb.ptr	PTR unsigned char  size(1) Largest target is 20
		 -> NULL(NULL[0]), concat@s2(BANK0[20]), concat@s1(BANK0[20]), 

    _doprnt@pb	PTR struct __prbuf size(1) Largest target is 3
		 -> sprintf@pb(BANK0[2]), printf@pb(BANK0[2]), 

    printf@f	PTR const unsigned char  size(1) Largest target is 26
		 -> STR_12(CODE[25]), STR_11(CODE[21]), STR_10(CODE[20]), STR_9(CODE[20]), 
		 -> STR_8(CODE[2]), STR_7(CODE[4]), STR_6(CODE[3]), STR_5(CODE[26]), 
		 -> STR_4(CODE[2]), STR_3(CODE[4]), STR_2(CODE[3]), STR_1(CODE[25]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), ?_printf(BANK0[2]), 

    S956__prbuf$func	PTR FTN(unsigned char ,)void  size(1) Largest target is 1
		 -> Absolute function(), putch(), 

    pb.func	PTR FTN(unsigned char ,)void  size(1) Largest target is 1
		 -> Absolute function(), putch(), 

    S956__prbuf$ptr	PTR unsigned char  size(1) Largest target is 20
		 -> NULL(NULL[0]), concat@s2(BANK0[20]), concat@s1(BANK0[20]), 

    pb.ptr	PTR unsigned char  size(1) Largest target is 20
		 -> NULL(NULL[0]), concat@s2(BANK0[20]), concat@s1(BANK0[20]), 

    atoi@s	PTR const unsigned char  size(1) Largest target is 20
		 -> concat@s1(BANK0[20]), 

    sp__strcat	PTR unsigned char  size(1) Largest target is 20
		 -> concat@s1(BANK0[20]), 


Critical Paths under _main in COMMON

    _setup->_Init_SPI
    _information->_division
    _division->___awmod
    _concat->_atoi
    __doprnt->___lwdiv
    ___lwmod->___lwdiv
    _atoi->___wmul

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _information->_concat
    _printf->__doprnt
    _division->___awdiv
    _concat->_sprintf
    _sprintf->__doprnt
    __doprnt->___lwmod

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_information

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0    9221
                                             73 BANK0      1     1      0
                           _Read_SPI
                          _Write_SPI
                        _information
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     360
                           _Init_SPI
 ---------------------------------------------------------------------------------
 (2) _Init_SPI                                             4     1      3     360
                                              2 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (1) _information                                          5     5      0    8839
                                              0 BANK1      5     5      0
                             _concat
                           _division
                             _printf
 ---------------------------------------------------------------------------------
 (2) _printf                                               8     6      2    2949
                                             17 BANK0      8     6      2
                            __doprnt
 ---------------------------------------------------------------------------------
 (2) _division                                             4     4      0    1467
                                              9 COMMON     1     1      0
                                              4 BANK0      3     3      0
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4     600
                                              2 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4     805
                                              2 COMMON     5     1      4
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (2) _concat                                              47    43      4    4423
                                             26 BANK0     47    43      4
                               _atoi
                            _sprintf
                             _strcat
 ---------------------------------------------------------------------------------
 (3) _strcat                                               4     3      1     207
                                              2 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (3) _sprintf                                              9     6      3    2845
                                             17 BANK0      9     6      3
                            __doprnt
 ---------------------------------------------------------------------------------
 (3) __doprnt                                             19    17      2    2330
                                              6 BANK0     11     9      2
                   Absolute function *
                            ___lwdiv
                            ___lwmod
                              _putch *
 ---------------------------------------------------------------------------------
 (4) _putch                                                1     0      1     181
                                              2 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              6     2      4     412
                                              0 BANK0      6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              8     4      4     314
                                              2 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (4) Absolute function(Fake)                               1     0      1       0
 ---------------------------------------------------------------------------------
 (3) _atoi                                                 8     6      2     682
                                              8 COMMON     2     0      2
                                              0 BANK0      6     6      0
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              2     2      0      68
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     244
                                              2 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (1) _Write_SPI                                            1     1      0      22
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Read_SPI                                             0     0      0       0
                     _spiReceiveWait
 ---------------------------------------------------------------------------------
 (2) _spiReceiveWait                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _isr                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Read_SPI
     _spiReceiveWait
   _Write_SPI
   _information
     _concat
       _atoi
         ___wmul
         _isdigit
       _sprintf
         __doprnt
           Absolute function(Fake) *
           ___lwdiv *
           ___lwmod *
             ___lwdiv (ARG)
           _putch *
       _strcat
     _division
       ___awdiv
       ___awmod
     _printf
       __doprnt
         Absolute function(Fake) *
         ___lwdiv *
         ___lwmod *
           ___lwdiv (ARG)
         _putch *
   _setup
     _Init_SPI

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      A       C       1       85.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      68       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4A      4D       5       96.2%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      5       F       7       18.8%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      68      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Wed Aug 04 23:05:49 2021

                      pc 0002              _SSPSTATbits 0094             ___awdiv@sign 0021  
                     fsr 0004      ___wmul@multiplicand 0074    Init_SPI@sTransmitEdge 0074  
                    l100 058D                      l111 0190                      l104 0175  
                    l132 03E0                      l126 024F                      l135 072E  
                    l119 01B1                      l161 03F0                      l129 03D8  
                    l154 03D2                      l138 079F                      l411 05F6  
                    l155 03D7                      l172 03E9                      l164 03FD  
                    l260 07ED                      l158 03EA                      l424 06AD  
                    l258 07D5                      l530 06F1                      l540 076A  
                    l721 0522                      l726 07FF                      l735 03C1  
                    l780 03A6                      l773 0385                      l789 07C8  
                    u700 06B6                      u701 06B5                      u720 06C8  
                    u721 06C7                      u715 06BA                      u740 06D9  
                    u741 06D8                      u830 07CF                      u831 07CE  
                    u735 06C9                      u760 06ED                      u761 06EC  
                    u745 06D5                      u690 03DE                      u755 06E1  
                    u691 03DD                      u860 07E9                      u861 07E8  
                    u845 07D6                      u870 07F6                      u855 07DD  
                    u871 07F5                      u880 07FC                      u881 07FB  
                    u990 07B2                      u991 07B1                      _dec 00A7  
                    _cen 006A                      _con 00A4                      _isr 03F1  
                    _var 00A5                      fsr0 0004                      _uni 00A6  
                    indf 0000             ___awmod@sign 0078                     l2001 04BC  
                   l2003 04C4                     l2021 051E                     l2013 04FF  
                   l2005 04CD                     l2101 0045                     l2015 050B  
                   l2007 04D5                     l2031 059A                     l2111 0071  
                   l2103 004B                     l2017 0512                     l2009 04DA  
                   l2041 05AB                     l2033 059C                     l2025 058E  
                   l2121 00A3                     l2113 007F                     l2105 0059  
                   l2201 060D                     l2051 05C3                     l2043 05B1  
                   l2035 05A0                     l2027 0591                     l2131 00D7  
                   l2123 00A7                     l2115 0083                     l2107 005F  
                   l2211 0646                     l2203 0619                     l2053 05D4  
                   l2045 05B4                     l2061 05E8                     l2037 05A5  
                   l2029 0595                     l2141 010D                     l2133 00E5  
                   l2125 00B5                     l2117 0091                     l2109 006D  
                   l2213 064B                     l2205 0633                     l1431 07E3  
                   l1423 07C9                     l2063 05ED                     l2055 05DA  
                   l2047 05BB                     l2039 05A9                     l2071 057E  
                   l2151 0135                     l2143 0111                     l2135 00EB  
                   l2127 00BB                     l2119 0095                     l2207 063B  
                   l1433 07E9                     l1425 07CB                     l1441 07F6  
                   l2065 05F2                     l2057 05DB                     l2049 05BF  
                   l2073 0583                     l2081 03AF                     l2161 0169  
                   l2153 0143                     l2145 011F                     l2137 00F9  
                   l2129 00C9                     l2209 0643                     l1427 07CF  
                   l1443 07FC                     l1371 03DE                     l2235 0293  
                   l2091 071E                     l2059 05E2                     l2075 0588  
                   l2083 03B3                     l2171 0196                     l2163 016F  
                   l2155 0147                     l2147 0123                     l2139 00FF  
                   l1429 07DC                     l1445 07FE                     l1437 07EF  
                   l1381 06B9                     l1541 07BB                     l1533 07A1  
                   l2093 072A                     l1621 0655                     l2069 0524  
                   l2077 03AA                     l2181 01C6                     l2165 017B  
                   l2157 0155                     l2149 0131                     l1701 076F  
                   l1439 07F0                     l1391 06DF                     l1383 06C0  
                   l1375 06AE                     l1535 07A6                     l2087 06F2  
                   l1631 0665                     l1623 0656                     l2079 03AB  
                   l2191 023D                     l2175 01A5                     l2167 0184  
                   l2159 015B                     l1711 0785                     l1703 0777  
                   l1393 06E0                     l1385 06C4                     l1377 06B0  
                   l1369 03D8                     l1537 07AA                     l2089 0712  
                   l1641 067E                     l1633 066A                     l1625 065A  
                   l2185 01CE                     l2177 01AB                     l2169 018A  
                   l2097 002F                     l1721 078C                     l1713 0786  
                   l1705 0778                     l2193 05F7                     l1395 06E7  
                   l1387 06C8                     l1379 06B6                     l1539 07B3  
                   l1643 0682                     l1635 0670                     l1651 069F  
                   l1627 065F                     l2187 01D6                     l2179 01B7  
                   l2099 0037                     l1731 0797                     l1723 0790  
                   l1715 0787                     l1707 0781                     l2195 05FC  
                   l1741 03E1                     l1389 06D9                     l1397 06ED  
                   l1901 0760                     l1653 06A4                     l1645 068C  
                   l1637 0673                     l1629 0661                     l2189 022F  
                   l1733 079A                     l1725 0792                     l1717 0788  
                   l1709 0784                     l2197 05FF                     l1743 03E6  
                   l1903 0766                     l1911 025A                     l1655 06A9  
                   l1647 0692                     l1639 067A                     l1735 079B  
                   l1727 0795                     l1719 0789                     l2199 0607  
                   l1913 0262                     l1649 0699                     l1737 079E  
                   l1729 0796                     l1739 03F9                     l1931 02B4  
                   l1923 0281                     l1915 0271                     l1907 0253  
                   l1691 03CC                     l1933 02B9                     l1925 029E  
                   l1917 0279                     l1909 0254                     l1693 03CE  
                   l1951 02FC                     l1943 02D7                     l1927 02AC  
                   l1919 0280                     l1695 03D1                     l1687 03C3  
                   l1697 03EA                     l1961 0349                     l1953 0304  
                   l1945 02E1                     l1929 02B0                     l1689 03CA  
                   l1891 0741                     l1963 0356                     l1947 02E7  
                   l1955 030A                     l1939 02BB                     l1971 0383  
                   l1699 076B                     l1893 0745                     l1885 072F  
                   l1965 035E                     l1957 0311                     l1949 02EF  
                   l1981 038D                     l1991 04A3                     l1895 0749  
                   l1887 0737                     l1959 0341                     l1967 0364  
                   l1983 038E                     l1993 04A4                     l1897 0753  
                   l1889 073A                     l1969 036F                     l1985 0392  
                   l1995 04A8                     l1899 0759                     l1987 03A0  
                   l1979 0389                     l1997 04B1                     l1999 04B9  
                   ?_isr 0070                     STR_1 042A                     STR_2 049D  
                   STR_3 0499                     STR_4 0483                     STR_5 0410  
                   STR_6 049D                     STR_7 0499                     STR_8 0483  
                   STR_9 0471                     u1000 07C8                     u1001 07C7  
                   u1210 0682                     u1211 0681                     u1220 068C  
                   u1221 068B                     u1205 0674                     u1400 0753  
                   u1240 069F                     u1401 0752                     u1241 069E  
                   u1225 0688                     u1250 06A4                     u1170 065A  
                   u1251 06A3                     u1235 0693                     u1171 0659  
                   u1420 0766                     u1500 0349                     u1180 0665  
                   u1260 03CA                     u1421 0765                     u1405 074F  
                   u1501 0348                     u1181 0664                     u1261 03C9  
                   u1270 03F0                     u1510 036F                     u1430 025A  
                   u1190 0670                     u1271 03EF                     u1415 075A  
                   u1511 036E                     u1431 0259                     u1191 066F  
                   u1520 0383                     u1440 0262                     u1600 05A0  
                   u1521 0382                     u1441 0261                     u1601 059F  
                   u1530 04B1                     u1370 0737                     u1450 02B0  
                   u1610 05B1                     u1531 04B0                     u1371 0736  
                   u1451 02AF                     u1611 05B0                     u1540 04B9  
                   u1460 02D6                     u1700 018A                     u1541 04B8  
                   u1461 02D5                     u1701 0189                     u1550 04C4  
                   u1390 0749                     u1470 02E1                     u1630 05C3  
                   u1710 0196                     u1551 04C3                     u1391 0748  
                   u1471 02E0                     u1631 05C2                     u1711 0195  
                   u1560 04D5                     u1480 02E7                     u1720 01A5  
                   u1561 04D4                     u1385 073B                     u1481 02E6  
                   u1465 02D2                     u1625 05B5                     u1721 01A4  
                   u1570 050B                     u1490 02EF                     u1650 05D4  
                   u1730 01AB                     u1571 050A                     u1491 02EE  
                   u1651 05D3                     u1731 01AA                     u1580 0512  
                   u1740 01B7                     u1581 0511                     u1645 05C4  
                   u1741 01B6                     u1670 05E8                     u1590 0595  
                   u1750 01C6                     u1671 05E7                     u1655 05D0  
                   u1591 0594                     u1751 01C5                     u1807 0637  
                   u1680 05ED                     u1760 01CE                     u1681 05EC  
                   u1665 05DC                     u1761 01CD                     u1817 063F  
                   u1770 01D6                     u1690 017B                     u1771 01D5  
                   u1691 017A                     u1907 00DF                     u1827 003F  
                   u1917 00F3                     u1837 0053                     u1927 0107  
                   u1847 0067                     u1937 0119                     u1857 0079  
                   u1947 012B                     u1867 008B                     u1787 0603  
                   u1957 013D                     u1877 009D                     u1797 061D  
                   u1967 014F                     u1887 00AF                     u1977 0163  
                   u1897 00C3                     u1987 0237                     _RCIF 0065  
                   i1l89 03F1                     _TXIF 0064                     _atoi 04A0  
                   _main 05F7                     _pot1 00A9                     _pot2 00A8  
                   btemp 007E                     start 000C                    ??_isr 0070  
                  ?_atoi 0078                    ?_main 0070          __end_of___awdiv 05F7  
                  STR_10 0485                    STR_11 045C                    STR_12 0443  
                  STR_13 0459                    STR_14 0459          __end_of___awmod 06AE  
                  _ANSEL 0188          ___awdiv@divisor 0072          __end_of___lwdiv 06F2  
           ?_information 0070          __end_of___lwmod 076B          ___awdiv@counter 0020  
                  _RCREG 001A                    _SPBRG 0099                    _PORTC 0007  
                  _PORTD 0008          __end_of__doprnt 0386                    _TRISD 0088  
                  _TXREG 0019          __end_of_dpowers 0410          __end_of_isdigit 0800  
                  atoi@a 0023                    _setup 076B                    atoi@s 0025  
                  _putch 03D8                    fpbase 002B                    pclath 000A  
                  status 0003                    wtemp0 007E          __end_of_sprintf 03A7  
        __initialization 000F             __end_of_atoi 0523             __end_of_main 0655  
       __end_of_Init_SPI 03D8         __end_of_Read_SPI 03EA                   ??_atoi 0020  
                 ??_main 0069         ___awdiv@dividend 0074                   ?_setup 0070  
                 ?_putch 0072                   _ANSELH 0189                   _SPBRGH 009A  
                 _TRISC2 043A                   _TRISC3 043B                   _TRISC5 043D  
                 _SSPCON 0014                   _SSPBUF 0013         __end_of__fptable 002F  
       __end_of_division 058E                   ___wmul 07C9                ??___awdiv 0076  
              ??___awmod 0076                ??___lwdiv 0076                ??___lwmod 0024  
                 _concat 06F2                ??__doprnt 0028         ___awdiv@quotient 0022  
        ___awmod@divisor 0072             __doprnt@flag 002B          ___awmod@counter 0077  
                 _printf 03A7             __doprnt@prec 002C                   _strcat 07A0  
                 fptable 0026                   fptotal 0002                ??_isdigit 0072  
                 saved_w 007E                ??_sprintf 0034  __end_of__initialization 0022  
     __size_of_Write_SPI 0006           __pcstackCOMMON 0070            __end_of_setup 07A0  
          __end_of_putch 03E1            division@value 0079     __size_of_information 0221  
             __doprnt@ap 0027               __doprnt@pb 0030                  ??_setup 0076  
           Write_SPI@dat 0072                  ??_putch 0073               __pbssBANK0 006A  
             __pbssBANK1 00A0                ?_Init_SPI 0072                ?_Read_SPI 0070  
             __pmaintext 05F7                  ?___wmul 0072               __pintentry 0004  
                ?_concat 003A            Init_SPI@sType 0075  __size_of_spiReceiveWait 0007  
                ?_printf 0031                  ?_strcat 0072        __end_of_Write_SPI 03FE  
                _SSPSTAT 0094               __stringtab 0400                ?_division 0070  
                _Decenas 007A               ??_Init_SPI 0075               ??_Read_SPI 0072  
                _Residuo 006B                  ___awdiv 058E                  ___awmod 0655  
        __size_of___wmul 0025                  ___lwdiv 06AE                  ___lwmod 072F  
        __size_of_concat 003D                  __doprnt 0250                  __ptext1 076B  
                __ptext2 03C2                  __ptext3 002F                  __ptext4 03A7  
                __ptext5 0523                  __ptext6 0655                  __ptext7 058E  
                __ptext8 06F2                  __ptext9 07A0          __size_of_printf 001B  
        __size_of_strcat 0029                  _counter 00A0                  _dpowers 0406  
                _isdigit 07EE             __size_of_isr 0007         ___awmod@dividend 0074  
                concat@a 003A                  concat@b 003C                  concat@c 0067  
                _sprintf 0386     end_of_initialization 0022               ??_division 0024  
              _RCSTAbits 0018                  printf@f 0036                _PORTCbits 0007  
              _TXSTAbits 0098           _spiReceiveWait 03EA           __end_of___wmul 07EE  
            _BAUDCTLbits 0187           __end_of_concat 072F           __end_of_printf 03C2  
         __end_of_strcat 07C9      start_initialization 000F              __end_of_isr 03F8  
      __size_of_Init_SPI 0016        __size_of_Read_SPI 0009   __end_of_spiReceiveWait 03F1  
               ??___wmul 0076              __doprnt@val 002D                 ??_concat 003E  
               ??_printf 0033                 ??_strcat 0073            ??_information 00AA  
            __pbssCOMMON 007A                ___latbits 0002            __pcstackBANK0 0020  
          __pcstackBANK1 00AA                _Write_SPI 03F8        __size_of__fptable 0009  
              __doprnt@c 002F                __doprnt@f 0026        __size_of_division 006B  
       ___lwdiv@dividend 0074          ?_spiReceiveWait 0070                __pfunctab 0026  
               ?___awdiv 0072                 ?___awmod 0072                 ?___lwdiv 0072  
               ?___lwmod 0020                 ?__doprnt 0026                __pstrings 0400  
               ?_isdigit 0070               ?_Write_SPI 0070         ___lwdiv@quotient 0077  
    __end_of_information 0250                 ?_sprintf 0031           __size_of_setup 0035  
         __size_of_putch 0009        interrupt_function 0004           ___wmul@product 0076  
               _PIR1bits 000C              __stringbase 0405        ___wmul@multiplier 0072  
               _Centenas 007B                 _Init_SPI 03C2                 _Read_SPI 03E1  
    Init_SPI@sDataSample 0072                 _Unidades 006C         __size_of___awdiv 0069  
       __size_of___awmod 0059         __size_of___lwdiv 0044         __size_of___lwmod 003C  
       __size_of__doprnt 0136       __end_of__stringtab 0406              _isdigit$954 0072  
            _information 002F                 __fptable 0026               strcat@from 0072  
       __size_of_isdigit 0012          ___lwdiv@divisor 0072              ??_Write_SPI 0072  
        ___lwdiv@counter 0079                 __ptext10 0386                 __ptext11 0250  
               __ptext20 03EA                 __ptext12 03D8                 __ptext21 03F1  
               __ptext13 072F                 __ptext14 06AE                 __ptext15 04A0  
               __ptext16 07EE                 __ptext17 07C9                 __ptext18 03F8  
               __ptext19 03E1                 _division 0523                 _complete 00A2  
       __size_of_sprintf 0021            __size_of_atoi 0083            __size_of_main 005E  
               concat@s1 0053                 concat@s2 003F                 atoi@sign 0022  
               fp__putch 002C                putch@data 0072                 isdigit@c 0073  
               intlevel1 0026                sprintf@ap 0037                sprintf@pb 0038  
              sprintf@wh 0036         ___lwmod@dividend 0022       Init_SPI@sClockIdle 0073  
       ??_spiReceiveWait 0072                stringcode 0400               _OSCCONbits 008F  
               printf@ap 0035                 printf@pb 0037                 sprintf@f 0031  
               strcat@cp 0075                 strcat@to 0074          ___lwmod@divisor 0020  
        ___lwmod@counter 0025                 stringdir 0400                 stringtab 0400  
