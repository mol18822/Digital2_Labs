

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Wed Jul 28 11:36:48 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     9                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2,group=3
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2,group=3
    17                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text6,local,class=CODE,merge=1,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text16,local,class=CODE,merge=1,delta=2
    29                           	psect	text17,local,class=CODE,merge=1,delta=2
    30                           	psect	text18,local,class=CODE,merge=1,delta=2
    31                           	psect	text19,local,class=CODE,merge=1,delta=2
    32                           	psect	text20,local,class=CODE,merge=1,delta=2
    33                           	psect	text21,local,class=CODE,merge=1,delta=2
    34                           	psect	text22,local,class=CODE,merge=1,delta=2
    35                           	psect	text23,local,class=CODE,merge=1,delta=2
    36                           	psect	intentry,global,class=CODE,delta=2
    37                           	psect	functab,global,class=ENTRY,delta=2
    38                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    39                           	dabs	1,0x7E,2
    40  0000                     
    41                           ; Version 2.20
    42                           ; Generated 12/02/2020 GMT
    43                           ; 
    44                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    45                           ; All rights reserved.
    46                           ; 
    47                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    48                           ; 
    49                           ; Redistribution and use in source and binary forms, with or without modification, are
    50                           ; permitted provided that the following conditions are met:
    51                           ; 
    52                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    53                           ;        conditions and the following disclaimer.
    54                           ; 
    55                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    56                           ;        of conditions and the following disclaimer in the documentation and/or other
    57                           ;        materials provided with the distribution.
    58                           ; 
    59                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    60                           ;        software without specific prior written permission.
    61                           ; 
    62                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    63                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    64                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    65                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    66                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    67                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    68                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    69                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    70                           ; 
    71                           ; 
    72                           ; Code-generator required, PIC16F887 Definitions
    73                           ; 
    74                           ; SFR Addresses
    75  0000                     	;# 
    76  0001                     	;# 
    77  0002                     	;# 
    78  0003                     	;# 
    79  0004                     	;# 
    80  0005                     	;# 
    81  0006                     	;# 
    82  0007                     	;# 
    83  0008                     	;# 
    84  0009                     	;# 
    85  000A                     	;# 
    86  000B                     	;# 
    87  000C                     	;# 
    88  000D                     	;# 
    89  000E                     	;# 
    90  000E                     	;# 
    91  000F                     	;# 
    92  0010                     	;# 
    93  0011                     	;# 
    94  0012                     	;# 
    95  0013                     	;# 
    96  0014                     	;# 
    97  0015                     	;# 
    98  0015                     	;# 
    99  0016                     	;# 
   100  0017                     	;# 
   101  0018                     	;# 
   102  0019                     	;# 
   103  001A                     	;# 
   104  001B                     	;# 
   105  001B                     	;# 
   106  001C                     	;# 
   107  001D                     	;# 
   108  001E                     	;# 
   109  001F                     	;# 
   110  0081                     	;# 
   111  0085                     	;# 
   112  0086                     	;# 
   113  0087                     	;# 
   114  0088                     	;# 
   115  0089                     	;# 
   116  008C                     	;# 
   117  008D                     	;# 
   118  008E                     	;# 
   119  008F                     	;# 
   120  0090                     	;# 
   121  0091                     	;# 
   122  0092                     	;# 
   123  0093                     	;# 
   124  0093                     	;# 
   125  0093                     	;# 
   126  0094                     	;# 
   127  0095                     	;# 
   128  0096                     	;# 
   129  0097                     	;# 
   130  0098                     	;# 
   131  0099                     	;# 
   132  009A                     	;# 
   133  009B                     	;# 
   134  009C                     	;# 
   135  009D                     	;# 
   136  009E                     	;# 
   137  009F                     	;# 
   138  0105                     	;# 
   139  0107                     	;# 
   140  0108                     	;# 
   141  0109                     	;# 
   142  010C                     	;# 
   143  010C                     	;# 
   144  010D                     	;# 
   145  010E                     	;# 
   146  010F                     	;# 
   147  0185                     	;# 
   148  0187                     	;# 
   149  0188                     	;# 
   150  0189                     	;# 
   151  018C                     	;# 
   152  018D                     	;# 
   153  0000                     	;# 
   154  0001                     	;# 
   155  0002                     	;# 
   156  0003                     	;# 
   157  0004                     	;# 
   158  0005                     	;# 
   159  0006                     	;# 
   160  0007                     	;# 
   161  0008                     	;# 
   162  0009                     	;# 
   163  000A                     	;# 
   164  000B                     	;# 
   165  000C                     	;# 
   166  000D                     	;# 
   167  000E                     	;# 
   168  000E                     	;# 
   169  000F                     	;# 
   170  0010                     	;# 
   171  0011                     	;# 
   172  0012                     	;# 
   173  0013                     	;# 
   174  0014                     	;# 
   175  0015                     	;# 
   176  0015                     	;# 
   177  0016                     	;# 
   178  0017                     	;# 
   179  0018                     	;# 
   180  0019                     	;# 
   181  001A                     	;# 
   182  001B                     	;# 
   183  001B                     	;# 
   184  001C                     	;# 
   185  001D                     	;# 
   186  001E                     	;# 
   187  001F                     	;# 
   188  0081                     	;# 
   189  0085                     	;# 
   190  0086                     	;# 
   191  0087                     	;# 
   192  0088                     	;# 
   193  0089                     	;# 
   194  008C                     	;# 
   195  008D                     	;# 
   196  008E                     	;# 
   197  008F                     	;# 
   198  0090                     	;# 
   199  0091                     	;# 
   200  0092                     	;# 
   201  0093                     	;# 
   202  0093                     	;# 
   203  0093                     	;# 
   204  0094                     	;# 
   205  0095                     	;# 
   206  0096                     	;# 
   207  0097                     	;# 
   208  0098                     	;# 
   209  0099                     	;# 
   210  009A                     	;# 
   211  009B                     	;# 
   212  009C                     	;# 
   213  009D                     	;# 
   214  009E                     	;# 
   215  009F                     	;# 
   216  0105                     	;# 
   217  0107                     	;# 
   218  0108                     	;# 
   219  0109                     	;# 
   220  010C                     	;# 
   221  010C                     	;# 
   222  010D                     	;# 
   223  010E                     	;# 
   224  010F                     	;# 
   225  0185                     	;# 
   226  0187                     	;# 
   227  0188                     	;# 
   228  0189                     	;# 
   229  018C                     	;# 
   230  018D                     	;# 
   231  0000                     	;# 
   232  0001                     	;# 
   233  0002                     	;# 
   234  0003                     	;# 
   235  0004                     	;# 
   236  0005                     	;# 
   237  0006                     	;# 
   238  0007                     	;# 
   239  0008                     	;# 
   240  0009                     	;# 
   241  000A                     	;# 
   242  000B                     	;# 
   243  000C                     	;# 
   244  000D                     	;# 
   245  000E                     	;# 
   246  000E                     	;# 
   247  000F                     	;# 
   248  0010                     	;# 
   249  0011                     	;# 
   250  0012                     	;# 
   251  0013                     	;# 
   252  0014                     	;# 
   253  0015                     	;# 
   254  0015                     	;# 
   255  0016                     	;# 
   256  0017                     	;# 
   257  0018                     	;# 
   258  0019                     	;# 
   259  001A                     	;# 
   260  001B                     	;# 
   261  001B                     	;# 
   262  001C                     	;# 
   263  001D                     	;# 
   264  001E                     	;# 
   265  001F                     	;# 
   266  0081                     	;# 
   267  0085                     	;# 
   268  0086                     	;# 
   269  0087                     	;# 
   270  0088                     	;# 
   271  0089                     	;# 
   272  008C                     	;# 
   273  008D                     	;# 
   274  008E                     	;# 
   275  008F                     	;# 
   276  0090                     	;# 
   277  0091                     	;# 
   278  0092                     	;# 
   279  0093                     	;# 
   280  0093                     	;# 
   281  0093                     	;# 
   282  0094                     	;# 
   283  0095                     	;# 
   284  0096                     	;# 
   285  0097                     	;# 
   286  0098                     	;# 
   287  0099                     	;# 
   288  009A                     	;# 
   289  009B                     	;# 
   290  009C                     	;# 
   291  009D                     	;# 
   292  009E                     	;# 
   293  009F                     	;# 
   294  0105                     	;# 
   295  0107                     	;# 
   296  0108                     	;# 
   297  0109                     	;# 
   298  010C                     	;# 
   299  010C                     	;# 
   300  010D                     	;# 
   301  010E                     	;# 
   302  010F                     	;# 
   303  0185                     	;# 
   304  0187                     	;# 
   305  0188                     	;# 
   306  0189                     	;# 
   307  018C                     	;# 
   308  018D                     	;# 
   309  0000                     	;# 
   310  0001                     	;# 
   311  0002                     	;# 
   312  0003                     	;# 
   313  0004                     	;# 
   314  0005                     	;# 
   315  0006                     	;# 
   316  0007                     	;# 
   317  0008                     	;# 
   318  0009                     	;# 
   319  000A                     	;# 
   320  000B                     	;# 
   321  000C                     	;# 
   322  000D                     	;# 
   323  000E                     	;# 
   324  000E                     	;# 
   325  000F                     	;# 
   326  0010                     	;# 
   327  0011                     	;# 
   328  0012                     	;# 
   329  0013                     	;# 
   330  0014                     	;# 
   331  0015                     	;# 
   332  0015                     	;# 
   333  0016                     	;# 
   334  0017                     	;# 
   335  0018                     	;# 
   336  0019                     	;# 
   337  001A                     	;# 
   338  001B                     	;# 
   339  001B                     	;# 
   340  001C                     	;# 
   341  001D                     	;# 
   342  001E                     	;# 
   343  001F                     	;# 
   344  0081                     	;# 
   345  0085                     	;# 
   346  0086                     	;# 
   347  0087                     	;# 
   348  0088                     	;# 
   349  0089                     	;# 
   350  008C                     	;# 
   351  008D                     	;# 
   352  008E                     	;# 
   353  008F                     	;# 
   354  0090                     	;# 
   355  0091                     	;# 
   356  0092                     	;# 
   357  0093                     	;# 
   358  0093                     	;# 
   359  0093                     	;# 
   360  0094                     	;# 
   361  0095                     	;# 
   362  0096                     	;# 
   363  0097                     	;# 
   364  0098                     	;# 
   365  0099                     	;# 
   366  009A                     	;# 
   367  009B                     	;# 
   368  009C                     	;# 
   369  009D                     	;# 
   370  009E                     	;# 
   371  009F                     	;# 
   372  0105                     	;# 
   373  0107                     	;# 
   374  0108                     	;# 
   375  0109                     	;# 
   376  010C                     	;# 
   377  010C                     	;# 
   378  010D                     	;# 
   379  010E                     	;# 
   380  010F                     	;# 
   381  0185                     	;# 
   382  0187                     	;# 
   383  0188                     	;# 
   384  0189                     	;# 
   385  018C                     	;# 
   386  018D                     	;# 
   387  0000                     	;# 
   388  0001                     	;# 
   389  0002                     	;# 
   390  0003                     	;# 
   391  0004                     	;# 
   392  0005                     	;# 
   393  0006                     	;# 
   394  0007                     	;# 
   395  0008                     	;# 
   396  0009                     	;# 
   397  000A                     	;# 
   398  000B                     	;# 
   399  000C                     	;# 
   400  000D                     	;# 
   401  000E                     	;# 
   402  000E                     	;# 
   403  000F                     	;# 
   404  0010                     	;# 
   405  0011                     	;# 
   406  0012                     	;# 
   407  0013                     	;# 
   408  0014                     	;# 
   409  0015                     	;# 
   410  0015                     	;# 
   411  0016                     	;# 
   412  0017                     	;# 
   413  0018                     	;# 
   414  0019                     	;# 
   415  001A                     	;# 
   416  001B                     	;# 
   417  001B                     	;# 
   418  001C                     	;# 
   419  001D                     	;# 
   420  001E                     	;# 
   421  001F                     	;# 
   422  0081                     	;# 
   423  0085                     	;# 
   424  0086                     	;# 
   425  0087                     	;# 
   426  0088                     	;# 
   427  0089                     	;# 
   428  008C                     	;# 
   429  008D                     	;# 
   430  008E                     	;# 
   431  008F                     	;# 
   432  0090                     	;# 
   433  0091                     	;# 
   434  0092                     	;# 
   435  0093                     	;# 
   436  0093                     	;# 
   437  0093                     	;# 
   438  0094                     	;# 
   439  0095                     	;# 
   440  0096                     	;# 
   441  0097                     	;# 
   442  0098                     	;# 
   443  0099                     	;# 
   444  009A                     	;# 
   445  009B                     	;# 
   446  009C                     	;# 
   447  009D                     	;# 
   448  009E                     	;# 
   449  009F                     	;# 
   450  0105                     	;# 
   451  0107                     	;# 
   452  0108                     	;# 
   453  0109                     	;# 
   454  010C                     	;# 
   455  010C                     	;# 
   456  010D                     	;# 
   457  010E                     	;# 
   458  010F                     	;# 
   459  0185                     	;# 
   460  0187                     	;# 
   461  0188                     	;# 
   462  0189                     	;# 
   463  018C                     	;# 
   464  018D                     	;# 
   465                           
   466                           	psect	strings
   467  0800                     __pstrings:
   468  0800                     stringtab:
   469  0800                     __stringtab:
   470                           
   471                           ;	String table - string pointers are 1 byte each
   472  0800  1BFF               	btfsc	btemp+1,7
   473  0801  280A               	ljmp	stringcode
   474  0802  1383               	bcf	3,7
   475  0803  187F               	btfsc	btemp+1,0
   476  0804  1783               	bsf	3,7
   477  0805  0800               	movf	0,w
   478  0806  0A84               	incf	4,f
   479  0807  1903               	skipnz
   480  0808  0AFF               	incf	btemp+1,f
   481  0809  0008               	return
   482  080A                     stringcode:
   483  080A                     stringdir:
   484  080A  3008               	movlw	high stringdir
   485  080B  008A               	movwf	10
   486  080C  0804               	movf	4,w
   487  080D  0A84               	incf	4,f
   488  080E  0782               	addwf	2,f
   489  080F                     __stringbase:
   490  080F  3400               	retlw	0
   491  0810                     __end_of__stringtab:
   492  0810                     _dpowers:
   493  0810  3401               	retlw	1
   494  0811  3400               	retlw	0
   495  0812  340A               	retlw	10
   496  0813  3400               	retlw	0
   497  0814  3464               	retlw	100
   498  0815  3400               	retlw	0
   499  0816  34E8               	retlw	232
   500  0817  3403               	retlw	3
   501  0818  3410               	retlw	16
   502  0819  3427               	retlw	39
   503  081A                     __end_of_dpowers:
   504  0009                     _PORTEbits	set	9
   505  0018                     _RCSTAbits	set	24
   506  0009                     _PORTE	set	9
   507  0008                     _PORTD	set	8
   508  0007                     _PORTC	set	7
   509  0006                     _PORTB	set	6
   510  0005                     _PORTA	set	5
   511  000B                     _INTCONbits	set	11
   512  000C                     _PIR1bits	set	12
   513  001A                     _RCREG	set	26
   514  0019                     _TXREG	set	25
   515  001E                     _ADRESH	set	30
   516  001F                     _ADCON0bits	set	31
   517  0064                     _TXIF	set	100
   518  0065                     _RCIF	set	101
   519  0066                     _ADIF	set	102
   520  009F                     _ADCON1bits	set	159
   521  009A                     _SPBRGH	set	154
   522  0099                     _SPBRG	set	153
   523  0098                     _TXSTAbits	set	152
   524  008C                     _PIE1bits	set	140
   525  008F                     _OSCCONbits	set	143
   526  0089                     _TRISE	set	137
   527  0088                     _TRISD	set	136
   528  0085                     _TRISAbits	set	133
   529  0187                     _BAUDCTLbits	set	391
   530  0188                     _ANSEL	set	392
   531  081A                     STR_9:
   532  081A  340D               	retlw	13
   533  081B  3420               	retlw	32	;' '
   534  081C  3453               	retlw	83	;'S'
   535  081D  3469               	retlw	105	;'i'
   536  081E  3420               	retlw	32	;' '
   537  081F  3464               	retlw	100	;'d'
   538  0820  3465               	retlw	101	;'e'
   539  0821  3473               	retlw	115	;'s'
   540  0822  3465               	retlw	101	;'e'
   541  0823  3461               	retlw	97	;'a'
   542  0824  3420               	retlw	32	;' '
   543  0825  3464               	retlw	100	;'d'
   544  0826  3469               	retlw	105	;'i'
   545  0827  3473               	retlw	115	;'s'
   546  0828  346D               	retlw	109	;'m'
   547  0829  3469               	retlw	105	;'i'
   548  082A  346E               	retlw	110	;'n'
   549  082B  3475               	retlw	117	;'u'
   550  082C  3469               	retlw	105	;'i'
   551  082D  3472               	retlw	114	;'r'
   552  082E  3420               	retlw	32	;' '
   553  082F  3463               	retlw	99	;'c'
   554  0830  346F               	retlw	111	;'o'
   555  0831  346E               	retlw	110	;'n'
   556  0832  3474               	retlw	116	;'t'
   557  0833  3461               	retlw	97	;'a'
   558  0834  3464               	retlw	100	;'d'
   559  0835  346F               	retlw	111	;'o'
   560  0836  3472               	retlw	114	;'r'
   561  0837  342C               	retlw	44	;','
   562  0838  3420               	retlw	32	;' '
   563  0839  346F               	retlw	111	;'o'
   564  083A  3470               	retlw	112	;'p'
   565  083B  3472               	retlw	114	;'r'
   566  083C  3469               	retlw	105	;'i'
   567  083D  346D               	retlw	109	;'m'
   568  083E  3461               	retlw	97	;'a'
   569  083F  3420               	retlw	32	;' '
   570  0840  342D               	retlw	45	;'-'
   571  0841  340D               	retlw	13
   572  0842  3400               	retlw	0
   573  0843                     STR_8:
   574  0843  340D               	retlw	13
   575  0844  3420               	retlw	32	;' '
   576  0845  3453               	retlw	83	;'S'
   577  0846  3469               	retlw	105	;'i'
   578  0847  3420               	retlw	32	;' '
   579  0848  3464               	retlw	100	;'d'
   580  0849  3465               	retlw	101	;'e'
   581  084A  3473               	retlw	115	;'s'
   582  084B  3465               	retlw	101	;'e'
   583  084C  3461               	retlw	97	;'a'
   584  084D  3420               	retlw	32	;' '
   585  084E  3461               	retlw	97	;'a'
   586  084F  3475               	retlw	117	;'u'
   587  0850  346D               	retlw	109	;'m'
   588  0851  3465               	retlw	101	;'e'
   589  0852  346E               	retlw	110	;'n'
   590  0853  3474               	retlw	116	;'t'
   591  0854  3461               	retlw	97	;'a'
   592  0855  3472               	retlw	114	;'r'
   593  0856  3420               	retlw	32	;' '
   594  0857  3463               	retlw	99	;'c'
   595  0858  346F               	retlw	111	;'o'
   596  0859  346E               	retlw	110	;'n'
   597  085A  3474               	retlw	116	;'t'
   598  085B  3461               	retlw	97	;'a'
   599  085C  3464               	retlw	100	;'d'
   600  085D  346F               	retlw	111	;'o'
   601  085E  3472               	retlw	114	;'r'
   602  085F  342C               	retlw	44	;','
   603  0860  3420               	retlw	32	;' '
   604  0861  346F               	retlw	111	;'o'
   605  0862  3470               	retlw	112	;'p'
   606  0863  3472               	retlw	114	;'r'
   607  0864  3469               	retlw	105	;'i'
   608  0865  346D               	retlw	109	;'m'
   609  0866  3461               	retlw	97	;'a'
   610  0867  3420               	retlw	32	;' '
   611  0868  342B               	retlw	43	;'+'
   612  0869  340D               	retlw	13
   613  086A  3400               	retlw	0
   614  086B                     STR_10:
   615  086B  340D               	retlw	13
   616  086C  3420               	retlw	32	;' '
   617  086D  3453               	retlw	83	;'S'
   618  086E  3469               	retlw	105	;'i'
   619  086F  3420               	retlw	32	;' '
   620  0870  346E               	retlw	110	;'n'
   621  0871  346F               	retlw	111	;'o'
   622  0872  3420               	retlw	32	;' '
   623  0873  3464               	retlw	100	;'d'
   624  0874  3465               	retlw	101	;'e'
   625  0875  3473               	retlw	115	;'s'
   626  0876  3465               	retlw	101	;'e'
   627  0877  3461               	retlw	97	;'a'
   628  0878  3420               	retlw	32	;' '
   629  0879  3472               	retlw	114	;'r'
   630  087A  3465               	retlw	101	;'e'
   631  087B  3461               	retlw	97	;'a'
   632  087C  346C               	retlw	108	;'l'
   633  087D  3469               	retlw	105	;'i'
   634  087E  347A               	retlw	122	;'z'
   635  087F  3461               	retlw	97	;'a'
   636  0880  3472               	retlw	114	;'r'
   637  0881  3420               	retlw	32	;' '
   638  0882  346E               	retlw	110	;'n'
   639  0883  3461               	retlw	97	;'a'
   640  0884  3464               	retlw	100	;'d'
   641  0885  3461               	retlw	97	;'a'
   642  0886  3420               	retlw	32	;' '
   643  0887  346F               	retlw	111	;'o'
   644  0888  3470               	retlw	112	;'p'
   645  0889  3472               	retlw	114	;'r'
   646  088A  3469               	retlw	105	;'i'
   647  088B  346D               	retlw	109	;'m'
   648  088C  3461               	retlw	97	;'a'
   649  088D  3420               	retlw	32	;' '
   650  088E  342A               	retlw	42	;'*'
   651  088F  340D               	retlw	13
   652  0890  3400               	retlw	0
   653  0891                     STR_4:
   654  0891  3456               	retlw	86	;'V'
   655  0892  3461               	retlw	97	;'a'
   656  0893  346C               	retlw	108	;'l'
   657  0894  346F               	retlw	111	;'o'
   658  0895  3472               	retlw	114	;'r'
   659  0896  3420               	retlw	32	;' '
   660  0897  3464               	retlw	100	;'d'
   661  0898  3465               	retlw	101	;'e'
   662  0899  346C               	retlw	108	;'l'
   663  089A  3420               	retlw	32	;' '
   664  089B  3450               	retlw	80	;'P'
   665  089C  344F               	retlw	79	;'O'
   666  089D  3454               	retlw	84	;'T'
   667  089E  3431               	retlw	49	;'1'
   668  089F  343A               	retlw	58	;':'
   669  08A0  340D               	retlw	13
   670  08A1  3400               	retlw	0
   671  08A2                     STR_6:
   672  08A2  3456               	retlw	86	;'V'
   673  08A3  3461               	retlw	97	;'a'
   674  08A4  346C               	retlw	108	;'l'
   675  08A5  346F               	retlw	111	;'o'
   676  08A6  3472               	retlw	114	;'r'
   677  08A7  3420               	retlw	32	;' '
   678  08A8  3464               	retlw	100	;'d'
   679  08A9  3465               	retlw	101	;'e'
   680  08AA  346C               	retlw	108	;'l'
   681  08AB  3420               	retlw	32	;' '
   682  08AC  3450               	retlw	80	;'P'
   683  08AD  344F               	retlw	79	;'O'
   684  08AE  3454               	retlw	84	;'T'
   685  08AF  3432               	retlw	50	;'2'
   686  08B0  343A               	retlw	58	;':'
   687  08B1  340D               	retlw	13
   688  08B2  3400               	retlw	0
   689  08B3                     STR_1:
   690  08B3  3453               	retlw	83	;'S'
   691  08B4  345F               	retlw	95	;'_'
   692  08B5  3431               	retlw	49	;'1'
   693  08B6  343A               	retlw	58	;':'
   694  08B7  3420               	retlw	32	;' '
   695  08B8  3420               	retlw	32	;' '
   696  08B9  3453               	retlw	83	;'S'
   697  08BA  345F               	retlw	95	;'_'
   698  08BB  3432               	retlw	50	;'2'
   699  08BC  343A               	retlw	58	;':'
   700  08BD  3420               	retlw	32	;' '
   701  08BE  3420               	retlw	32	;' '
   702  08BF  3453               	retlw	83	;'S'
   703  08C0  345F               	retlw	95	;'_'
   704  08C1  3433               	retlw	51	;'3'
   705  08C2  343A               	retlw	58	;':'
   706  08C3  3400               	retlw	0
   707  08C4                     STR_2:
   708  08C4  3425               	retlw	37	;'%'
   709  08C5  3464               	retlw	100	;'d'
   710  08C6  3420               	retlw	32	;' '
   711  08C7  3456               	retlw	86	;'V'
   712  08C8  3420               	retlw	32	;' '
   713  08C9  3420               	retlw	32	;' '
   714  08CA  3420               	retlw	32	;' '
   715  08CB  3400               	retlw	0
   716  08CC                     STR_3:
   717  08CC  3425               	retlw	37	;'%'
   718  08CD  3464               	retlw	100	;'d'
   719  08CE  3420               	retlw	32	;' '
   720  08CF  3456               	retlw	86	;'V'
   721  08D0  3420               	retlw	32	;' '
   722  08D1  3400               	retlw	0
   723  088F                     
   724                           	psect	cinit
   725  000F                     start_initialization:	
   726                           ; #config settings
   727                           
   728  000F                     __initialization:
   729                           
   730                           ; Clear objects allocated to COMMON
   731  000F  01F8               	clrf	__pbssCOMMON& (0+127)
   732  0010  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
   733  0011  01FA               	clrf	(__pbssCOMMON+2)& (0+127)
   734                           
   735                           ; Clear objects allocated to BANK0
   736  0012  1283               	bcf	3,5	;RP0=0, select bank0
   737  0013  1303               	bcf	3,6	;RP1=0, select bank0
   738  0014  01D4               	clrf	__pbssBANK0& (0+127)
   739                           
   740                           ; Clear objects allocated to BANK1
   741  0015  1683               	bsf	3,5	;RP0=1, select bank1
   742  0016  1303               	bcf	3,6	;RP1=0, select bank1
   743  0017  01C9               	clrf	__pbssBANK1& (0+127)
   744  0018  01CA               	clrf	(__pbssBANK1+1)& (0+127)
   745  0019  01CB               	clrf	(__pbssBANK1+2)& (0+127)
   746  001A  01CC               	clrf	(__pbssBANK1+3)& (0+127)
   747  001B  01CD               	clrf	(__pbssBANK1+4)& (0+127)
   748  001C  01CE               	clrf	(__pbssBANK1+5)& (0+127)
   749  001D  01CF               	clrf	(__pbssBANK1+6)& (0+127)
   750  001E  01D0               	clrf	(__pbssBANK1+7)& (0+127)
   751  001F                     end_of_initialization:	
   752                           ;End of C runtime variable initialization code
   753                           
   754  001F                     __end_of__initialization:
   755  001F  0183               	clrf	3
   756  0020  120A  118A  2B8D   	ljmp	_main	;jump to C main() function
   757                           
   758                           	psect	bssCOMMON
   759  0078                     __pbssCOMMON:
   760  0078                     _residuo:
   761  0078                     	ds	1
   762  0079                     _voltaje_c:
   763  0079                     	ds	1
   764  007A                     _voltaje_b:
   765  007A                     	ds	1
   766                           
   767                           	psect	bssBANK0
   768  0054                     __pbssBANK0:
   769  0054                     _valor:
   770  0054                     	ds	1
   771                           
   772                           	psect	bssBANK1
   773  00C9                     __pbssBANK1:
   774  00C9                     _contador:
   775  00C9                     	ds	1
   776  00CA                     _dato:
   777  00CA                     	ds	1
   778  00CB                     _dato1:
   779  00CB                     	ds	1
   780  00CC                     _units:
   781  00CC                     	ds	1
   782  00CD                     _tens:
   783  00CD                     	ds	1
   784  00CE                     _hundreds:
   785  00CE                     	ds	1
   786  00CF                     _volt02:
   787  00CF                     	ds	1
   788  00D0                     _volt01:
   789  00D0                     	ds	1
   790                           
   791                           	psect	cstackBANK1
   792  00A0                     __pcstackBANK1:
   793  00A0                     main@buffer:
   794                           
   795                           ; 20 bytes @ 0x0
   796  00A0                     	ds	20
   797  00B4                     main@buffer1:
   798                           
   799                           ; 20 bytes @ 0x14
   800  00B4                     	ds	20
   801  00C8                     main@answer:
   802                           
   803                           ; 1 bytes @ 0x28
   804  00C8                     	ds	1
   805                           
   806                           	psect	cstackCOMMON
   807  0070                     __pcstackCOMMON:
   808  0070                     ?_setup:
   809  0070                     ?_Lcd_Init:	
   810                           ; 1 bytes @ 0x0
   811                           
   812  0070                     ?_Lcd_Clear:	
   813                           ; 1 bytes @ 0x0
   814                           
   815  0070                     ?_division:	
   816                           ; 1 bytes @ 0x0
   817                           
   818  0070                     ?_Lcd_Write_Char:	
   819                           ; 1 bytes @ 0x0
   820                           
   821  0070                     ?_config_ADC:	
   822                           ; 1 bytes @ 0x0
   823                           
   824  0070                     ?_isr:	
   825                           ; 1 bytes @ 0x0
   826                           
   827  0070                     ??_isr:	
   828                           ; 1 bytes @ 0x0
   829                           
   830  0070                     ?_main:	
   831                           ; 1 bytes @ 0x0
   832                           
   833  0070                     ?_Lcd_Port:	
   834                           ; 1 bytes @ 0x0
   835                           
   836  0070                     ?_Lcd_Cmd:	
   837                           ; 1 bytes @ 0x0
   838                           
   839  0070                     ?_printf:	
   840                           ; 1 bytes @ 0x0
   841                           
   842                           
   843                           ; 2 bytes @ 0x0
   844  0070                     	ds	3
   845  0073                     ??_config_ADC:
   846  0073                     ?_putch:	
   847                           ; 1 bytes @ 0x3
   848                           
   849  0073                     ??_Lcd_Port:	
   850                           ; 1 bytes @ 0x3
   851                           
   852  0073                     ?__Umul8_16:	
   853                           ; 1 bytes @ 0x3
   854                           
   855  0073                     ?___awdiv:	
   856                           ; 2 bytes @ 0x3
   857                           
   858  0073                     ?___awmod:	
   859                           ; 2 bytes @ 0x3
   860                           
   861  0073                     ?___lwdiv:	
   862                           ; 2 bytes @ 0x3
   863                           
   864  0073                     ?___xxtofl:	
   865                           ; 2 bytes @ 0x3
   866                           
   867  0073                     putch@data:	
   868                           ; 4 bytes @ 0x3
   869                           
   870  0073                     Lcd_Port@a:	
   871                           ; 1 bytes @ 0x3
   872                           
   873  0073                     __Umul8_16@multiplicand:	
   874                           ; 1 bytes @ 0x3
   875                           
   876  0073                     ___awdiv@divisor:	
   877                           ; 1 bytes @ 0x3
   878                           
   879  0073                     ___awmod@divisor:	
   880                           ; 2 bytes @ 0x3
   881                           
   882  0073                     ___lwdiv@divisor:	
   883                           ; 2 bytes @ 0x3
   884                           
   885  0073                     ___xxtofl@val:	
   886                           ; 2 bytes @ 0x3
   887                           
   888                           
   889                           ; 4 bytes @ 0x3
   890  0073                     	ds	1
   891  0074                     ??_Lcd_Write_Char:
   892  0074                     ??_putch:	
   893                           ; 1 bytes @ 0x4
   894                           
   895  0074                     ??_Lcd_Cmd:	
   896                           ; 1 bytes @ 0x4
   897                           
   898                           
   899                           ; 1 bytes @ 0x4
   900  0074                     	ds	1
   901  0075                     ??__Umul8_16:
   902  0075                     config_ADC@frec:	
   903                           ; 1 bytes @ 0x5
   904                           
   905  0075                     Lcd_Write_Char@a:	
   906                           ; 1 bytes @ 0x5
   907                           
   908  0075                     ___awdiv@dividend:	
   909                           ; 1 bytes @ 0x5
   910                           
   911  0075                     ___awmod@dividend:	
   912                           ; 2 bytes @ 0x5
   913                           
   914  0075                     ___lwdiv@dividend:	
   915                           ; 2 bytes @ 0x5
   916                           
   917                           
   918                           ; 2 bytes @ 0x5
   919  0075                     	ds	1
   920  0076                     ??_setup:
   921  0076                     Lcd_Cmd@a:	
   922                           ; 1 bytes @ 0x6
   923                           
   924  0076                     Lcd_Write_Char@temp:	
   925                           ; 1 bytes @ 0x6
   926                           
   927                           
   928                           ; 1 bytes @ 0x6
   929  0076                     	ds	1
   930  0077                     ??_Lcd_Clear:
   931  0077                     ?_Lcd_Set_Cursor:	
   932                           ; 1 bytes @ 0x7
   933                           
   934  0077                     ??___awdiv:	
   935                           ; 1 bytes @ 0x7
   936                           
   937  0077                     ??___awmod:	
   938                           ; 1 bytes @ 0x7
   939                           
   940  0077                     ??___lwdiv:	
   941                           ; 1 bytes @ 0x7
   942                           
   943  0077                     Lcd_Set_Cursor@b:	
   944                           ; 1 bytes @ 0x7
   945                           
   946  0077                     Lcd_Write_Char@y:	
   947                           ; 1 bytes @ 0x7
   948                           
   949                           
   950                           ; 1 bytes @ 0x7
   951  0077                     	ds	1
   952  0078                     ??_Lcd_Write_String:
   953                           
   954                           	psect	cstackBANK0
   955  0020                     __pcstackBANK0:	
   956                           ; 1 bytes @ 0x8
   957                           
   958  0020                     ??_Lcd_Init:
   959  0020                     ??_Lcd_Set_Cursor:	
   960                           ; 1 bytes @ 0x0
   961                           
   962  0020                     ?_Lcd_Write_String:	
   963                           ; 1 bytes @ 0x0
   964                           
   965  0020                     ??___xxtofl:	
   966                           ; 1 bytes @ 0x0
   967                           
   968  0020                     ___awdiv@counter:	
   969                           ; 1 bytes @ 0x0
   970                           
   971  0020                     ___awmod@counter:	
   972                           ; 1 bytes @ 0x0
   973                           
   974  0020                     ___lwdiv@counter:	
   975                           ; 1 bytes @ 0x0
   976                           
   977  0020                     Lcd_Write_String@a:	
   978                           ; 1 bytes @ 0x0
   979                           
   980  0020                     __Umul8_16@product:	
   981                           ; 2 bytes @ 0x0
   982                           
   983                           
   984                           ; 2 bytes @ 0x0
   985  0020                     	ds	1
   986  0021                     ___awdiv@sign:
   987  0021                     ___awmod@sign:	
   988                           ; 1 bytes @ 0x1
   989                           
   990  0021                     ___lwdiv@quotient:	
   991                           ; 1 bytes @ 0x1
   992                           
   993                           
   994                           ; 2 bytes @ 0x1
   995  0021                     	ds	1
   996  0022                     Lcd_Set_Cursor@a:
   997  0022                     Lcd_Write_String@i:	
   998                           ; 1 bytes @ 0x2
   999                           
  1000  0022                     ___awdiv@quotient:	
  1001                           ; 2 bytes @ 0x2
  1002                           
  1003  0022                     __Umul8_16@word_mpld:	
  1004                           ; 2 bytes @ 0x2
  1005                           
  1006                           
  1007                           ; 2 bytes @ 0x2
  1008  0022                     	ds	1
  1009  0023                     ?___lwmod:
  1010  0023                     Lcd_Set_Cursor@z:	
  1011                           ; 2 bytes @ 0x3
  1012                           
  1013  0023                     ___lwmod@divisor:	
  1014                           ; 1 bytes @ 0x3
  1015                           
  1016                           
  1017                           ; 2 bytes @ 0x3
  1018  0023                     	ds	1
  1019  0024                     ??_division:
  1020  0024                     Lcd_Set_Cursor@y:	
  1021                           ; 1 bytes @ 0x4
  1022                           
  1023  0024                     __Umul8_16@multiplier:	
  1024                           ; 1 bytes @ 0x4
  1025                           
  1026  0024                     ___xxtofl@sign:	
  1027                           ; 1 bytes @ 0x4
  1028                           
  1029                           
  1030                           ; 1 bytes @ 0x4
  1031  0024                     	ds	1
  1032  0025                     Lcd_Set_Cursor@temp:
  1033  0025                     ___xxtofl@exp:	
  1034                           ; 1 bytes @ 0x5
  1035                           
  1036  0025                     ___lwmod@dividend:	
  1037                           ; 1 bytes @ 0x5
  1038                           
  1039                           
  1040                           ; 2 bytes @ 0x5
  1041  0025                     	ds	1
  1042  0026                     ___xxtofl@arg:
  1043                           
  1044                           ; 4 bytes @ 0x6
  1045  0026                     	ds	1
  1046  0027                     ??___lwmod:
  1047  0027                     division@valor:	
  1048                           ; 1 bytes @ 0x7
  1049                           
  1050                           
  1051                           ; 1 bytes @ 0x7
  1052  0027                     	ds	1
  1053  0028                     ___lwmod@counter:
  1054                           
  1055                           ; 1 bytes @ 0x8
  1056  0028                     	ds	1
  1057  0029                     ?__doprnt:
  1058  0029                     __doprnt@f:	
  1059                           ; 2 bytes @ 0x9
  1060                           
  1061                           
  1062                           ; 1 bytes @ 0x9
  1063  0029                     	ds	1
  1064  002A                     ?___flmul:
  1065  002A                     __doprnt@ap:	
  1066                           ; 4 bytes @ 0xA
  1067                           
  1068  002A                     ___flmul@b:	
  1069                           ; 1 bytes @ 0xA
  1070                           
  1071                           
  1072                           ; 4 bytes @ 0xA
  1073  002A                     	ds	1
  1074  002B                     ??__doprnt:
  1075                           
  1076                           ; 1 bytes @ 0xB
  1077  002B                     	ds	3
  1078  002E                     __doprnt@flag:
  1079  002E                     ___flmul@a:	
  1080                           ; 1 bytes @ 0xE
  1081                           
  1082                           
  1083                           ; 4 bytes @ 0xE
  1084  002E                     	ds	1
  1085  002F                     __doprnt@prec:
  1086                           
  1087                           ; 1 bytes @ 0xF
  1088  002F                     	ds	1
  1089  0030                     __doprnt@val:
  1090                           
  1091                           ; 2 bytes @ 0x10
  1092  0030                     	ds	2
  1093  0032                     ??___flmul:
  1094  0032                     __doprnt@c:	
  1095                           ; 1 bytes @ 0x12
  1096                           
  1097                           
  1098                           ; 1 bytes @ 0x12
  1099  0032                     	ds	1
  1100  0033                     __doprnt@pb:
  1101                           
  1102                           ; 1 bytes @ 0x13
  1103  0033                     	ds	1
  1104  0034                     ??_printf:
  1105  0034                     ?_sprintf:	
  1106                           ; 1 bytes @ 0x14
  1107                           
  1108  0034                     sprintf@f:	
  1109                           ; 2 bytes @ 0x14
  1110                           
  1111                           
  1112                           ; 1 bytes @ 0x14
  1113  0034                     	ds	2
  1114  0036                     printf@ap:
  1115                           
  1116                           ; 1 bytes @ 0x16
  1117  0036                     	ds	1
  1118  0037                     ??_sprintf:
  1119  0037                     ___flmul@sign:	
  1120                           ; 1 bytes @ 0x17
  1121                           
  1122  0037                     printf@f:	
  1123                           ; 1 bytes @ 0x17
  1124                           
  1125                           
  1126                           ; 1 bytes @ 0x17
  1127  0037                     	ds	1
  1128  0038                     printf@pb:
  1129  0038                     ___flmul@grs:	
  1130                           ; 2 bytes @ 0x18
  1131                           
  1132                           
  1133                           ; 4 bytes @ 0x18
  1134  0038                     	ds	1
  1135  0039                     sprintf@wh:
  1136                           
  1137                           ; 1 bytes @ 0x19
  1138  0039                     	ds	1
  1139  003A                     sprintf@ap:
  1140                           
  1141                           ; 1 bytes @ 0x1A
  1142  003A                     	ds	1
  1143  003B                     sprintf@pb:
  1144                           
  1145                           ; 2 bytes @ 0x1B
  1146  003B                     	ds	1
  1147  003C                     ___flmul@aexp:
  1148                           
  1149                           ; 1 bytes @ 0x1C
  1150  003C                     	ds	1
  1151  003D                     ___flmul@bexp:
  1152                           
  1153                           ; 1 bytes @ 0x1D
  1154  003D                     	ds	1
  1155  003E                     ___flmul@prod:
  1156                           
  1157                           ; 4 bytes @ 0x1E
  1158  003E                     	ds	4
  1159  0042                     ___flmul@temp:
  1160                           
  1161                           ; 2 bytes @ 0x22
  1162  0042                     	ds	2
  1163  0044                     ?___fltol:
  1164  0044                     ___fltol@f1:	
  1165                           ; 4 bytes @ 0x24
  1166                           
  1167                           
  1168                           ; 4 bytes @ 0x24
  1169  0044                     	ds	4
  1170  0048                     ??___fltol:
  1171                           
  1172                           ; 1 bytes @ 0x28
  1173  0048                     	ds	5
  1174  004D                     ___fltol@sign1:
  1175                           
  1176                           ; 1 bytes @ 0x2D
  1177  004D                     	ds	1
  1178  004E                     ___fltol@exp1:
  1179                           
  1180                           ; 1 bytes @ 0x2E
  1181  004E                     	ds	1
  1182  004F                     ??_main:
  1183                           
  1184                           ; 1 bytes @ 0x2F
  1185  004F                     	ds	5
  1186                           
  1187                           	psect	maintext
  1188  038D                     __pmaintext:	
  1189 ;;
  1190 ;;Main: autosize = 0, tempsize = 5, incstack = 0, save=0
  1191 ;;
  1192 ;; *************** function _main *****************
  1193 ;; Defined at:
  1194 ;;		line 110 in file "D2_main2.c"
  1195 ;; Parameters:    Size  Location     Type
  1196 ;;		None
  1197 ;; Auto vars:     Size  Location     Type
  1198 ;;  answer          1   40[BANK1 ] unsigned char 
  1199 ;;  buffer1        20   20[BANK1 ] unsigned char [20]
  1200 ;;  buffer         20    0[BANK1 ] unsigned char [20]
  1201 ;; Return value:  Size  Location     Type
  1202 ;;                  1    wreg      void 
  1203 ;; Registers used:
  1204 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1205 ;; Tracked objects:
  1206 ;;		On entry : B00/0
  1207 ;;		On exit  : 0/0
  1208 ;;		Unchanged: 0/0
  1209 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1210 ;;      Params:         0       0       0       0       0
  1211 ;;      Locals:         0       0      41       0       0
  1212 ;;      Temps:          0       5       0       0       0
  1213 ;;      Totals:         0       5      41       0       0
  1214 ;;Total ram usage:       46 bytes
  1215 ;; Hardware stack levels required when called:    4
  1216 ;; This function calls:
  1217 ;;		_Lcd_Clear
  1218 ;;		_Lcd_Init
  1219 ;;		_Lcd_Set_Cursor
  1220 ;;		_Lcd_Write_Char
  1221 ;;		_Lcd_Write_String
  1222 ;;		___flmul
  1223 ;;		___fltol
  1224 ;;		___xxtofl
  1225 ;;		_division
  1226 ;;		_printf
  1227 ;;		_setup
  1228 ;;		_sprintf
  1229 ;; This function is called by:
  1230 ;;		Startup code after reset
  1231 ;; This function uses a non-reentrant model
  1232 ;;
  1233                           
  1234                           
  1235                           ;psect for function _main
  1236  038D                     _main:
  1237  038D                     l2868:	
  1238                           ;incstack = 0
  1239                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1240                           
  1241                           
  1242                           ;D2_main2.c: 111:     setup();
  1243  038D  120A  158A  2473  120A  118A  	fcall	_setup
  1244  0392                     l2870:
  1245                           
  1246                           ;D2_main2.c: 112:     Lcd_Init();
  1247  0392  120A  158A  24F9  120A  118A  	fcall	_Lcd_Init
  1248  0397                     l2872:
  1249                           
  1250                           ;D2_main2.c: 113:     Lcd_Clear();
  1251  0397  120A  118A  27EF  120A  118A  	fcall	_Lcd_Clear
  1252  039C                     l2874:
  1253                           
  1254                           ;D2_main2.c: 114:     char buffer[20];;D2_main2.c: 115:     char buffer1[20];;D2_main2.c
      +                          : 116:     Lcd_Set_Cursor(1,1);
  1255  039C  01F7               	clrf	Lcd_Set_Cursor@b
  1256  039D  0AF7               	incf	Lcd_Set_Cursor@b,f
  1257  039E  3001               	movlw	1
  1258  039F  120A  158A  2547  120A  118A  	fcall	_Lcd_Set_Cursor
  1259  03A4                     l2876:
  1260                           
  1261                           ;D2_main2.c: 117:     Lcd_Write_String("S_1:  S_2:  S_3:");
  1262  03A4  30A4               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1263  03A5  1283               	bcf	3,5	;RP0=0, select bank0
  1264  03A6  1303               	bcf	3,6	;RP1=0, select bank0
  1265  03A7  00A0               	movwf	Lcd_Write_String@a
  1266  03A8  3080               	movlw	128
  1267  03A9  00A1               	movwf	Lcd_Write_String@a+1
  1268  03AA  120A  158A  23D1  120A  118A  	fcall	_Lcd_Write_String
  1269  03AF                     l110:	
  1270                           ;D2_main2.c: 121:     while(1){
  1271                           
  1272                           
  1273                           ;D2_main2.c: 123:     dato = volt01*0.0196;
  1274  03AF  1683               	bsf	3,5	;RP0=1, select bank1
  1275  03B0  1303               	bcf	3,6	;RP1=0, select bank1
  1276  03B1  0850               	movf	_volt01^(0+128),w
  1277  03B2  1283               	bcf	3,5	;RP0=0, select bank0
  1278  03B3  1303               	bcf	3,6	;RP1=0, select bank0
  1279  03B4  00CF               	movwf	??_main
  1280  03B5  01D0               	clrf	??_main+1
  1281  03B6  01D1               	clrf	??_main+2
  1282  03B7  01D2               	clrf	??_main+3
  1283  03B8  0852               	movf	??_main+3,w
  1284  03B9  00F6               	movwf	___xxtofl@val+3
  1285  03BA  0851               	movf	??_main+2,w
  1286  03BB  00F5               	movwf	___xxtofl@val+2
  1287  03BC  0850               	movf	??_main+1,w
  1288  03BD  00F4               	movwf	___xxtofl@val+1
  1289  03BE  084F               	movf	??_main,w
  1290  03BF  00F3               	movwf	___xxtofl@val
  1291  03C0  3001               	movlw	1
  1292  03C1  120A  158A  2744  120A  118A  	fcall	___xxtofl
  1293  03C6  0876               	movf	?___xxtofl+3,w
  1294  03C7  1283               	bcf	3,5	;RP0=0, select bank0
  1295  03C8  1303               	bcf	3,6	;RP1=0, select bank0
  1296  03C9  00B1               	movwf	___flmul@a+3
  1297  03CA  0875               	movf	?___xxtofl+2,w
  1298  03CB  00B0               	movwf	___flmul@a+2
  1299  03CC  0874               	movf	?___xxtofl+1,w
  1300  03CD  00AF               	movwf	___flmul@a+1
  1301  03CE  0873               	movf	?___xxtofl,w
  1302  03CF  00AE               	movwf	___flmul@a
  1303  03D0  303C               	movlw	60
  1304  03D1  00AD               	movwf	___flmul@b+3
  1305  03D2  30A0               	movlw	160
  1306  03D3  00AC               	movwf	___flmul@b+2
  1307  03D4  3090               	movlw	144
  1308  03D5  00AB               	movwf	___flmul@b+1
  1309  03D6  302E               	movlw	46
  1310  03D7  00AA               	movwf	___flmul@b
  1311  03D8  120A  118A  202C  120A  118A  	fcall	___flmul
  1312  03DD  1283               	bcf	3,5	;RP0=0, select bank0
  1313  03DE  1303               	bcf	3,6	;RP1=0, select bank0
  1314  03DF  082D               	movf	?___flmul+3,w
  1315  03E0  00C7               	movwf	___fltol@f1+3
  1316  03E1  082C               	movf	?___flmul+2,w
  1317  03E2  00C6               	movwf	___fltol@f1+2
  1318  03E3  082B               	movf	?___flmul+1,w
  1319  03E4  00C5               	movwf	___fltol@f1+1
  1320  03E5  082A               	movf	?___flmul,w
  1321  03E6  00C4               	movwf	___fltol@f1
  1322  03E7  120A  158A  26C8  120A  118A  	fcall	___fltol
  1323  03EC  1283               	bcf	3,5	;RP0=0, select bank0
  1324  03ED  1303               	bcf	3,6	;RP1=0, select bank0
  1325  03EE  0844               	movf	?___fltol,w
  1326  03EF  00D3               	movwf	??_main+4
  1327  03F0  0853               	movf	??_main+4,w
  1328  03F1  1683               	bsf	3,5	;RP0=1, select bank1
  1329  03F2  1303               	bcf	3,6	;RP1=0, select bank1
  1330  03F3  00CA               	movwf	_dato^(0+128)
  1331                           
  1332                           ;D2_main2.c: 124:     dato1 = volt02*0.0196;
  1333  03F4  084F               	movf	_volt02^(0+128),w
  1334  03F5  1283               	bcf	3,5	;RP0=0, select bank0
  1335  03F6  1303               	bcf	3,6	;RP1=0, select bank0
  1336  03F7  00CF               	movwf	??_main
  1337  03F8  01D0               	clrf	??_main+1
  1338  03F9  01D1               	clrf	??_main+2
  1339  03FA  01D2               	clrf	??_main+3
  1340  03FB  0852               	movf	??_main+3,w
  1341  03FC  00F6               	movwf	___xxtofl@val+3
  1342  03FD  0851               	movf	??_main+2,w
  1343  03FE  00F5               	movwf	___xxtofl@val+2
  1344  03FF  0850               	movf	??_main+1,w
  1345  0400  00F4               	movwf	___xxtofl@val+1
  1346  0401  084F               	movf	??_main,w
  1347  0402  00F3               	movwf	___xxtofl@val
  1348  0403  3001               	movlw	1
  1349  0404  120A  158A  2744  120A  118A  	fcall	___xxtofl
  1350  0409  0876               	movf	?___xxtofl+3,w
  1351  040A  1283               	bcf	3,5	;RP0=0, select bank0
  1352  040B  1303               	bcf	3,6	;RP1=0, select bank0
  1353  040C  00B1               	movwf	___flmul@a+3
  1354  040D  0875               	movf	?___xxtofl+2,w
  1355  040E  00B0               	movwf	___flmul@a+2
  1356  040F  0874               	movf	?___xxtofl+1,w
  1357  0410  00AF               	movwf	___flmul@a+1
  1358  0411  0873               	movf	?___xxtofl,w
  1359  0412  00AE               	movwf	___flmul@a
  1360  0413  303C               	movlw	60
  1361  0414  00AD               	movwf	___flmul@b+3
  1362  0415  30A0               	movlw	160
  1363  0416  00AC               	movwf	___flmul@b+2
  1364  0417  3090               	movlw	144
  1365  0418  00AB               	movwf	___flmul@b+1
  1366  0419  302E               	movlw	46
  1367  041A  00AA               	movwf	___flmul@b
  1368  041B  120A  118A  202C  120A  118A  	fcall	___flmul
  1369  0420  1283               	bcf	3,5	;RP0=0, select bank0
  1370  0421  1303               	bcf	3,6	;RP1=0, select bank0
  1371  0422  082D               	movf	?___flmul+3,w
  1372  0423  00C7               	movwf	___fltol@f1+3
  1373  0424  082C               	movf	?___flmul+2,w
  1374  0425  00C6               	movwf	___fltol@f1+2
  1375  0426  082B               	movf	?___flmul+1,w
  1376  0427  00C5               	movwf	___fltol@f1+1
  1377  0428  082A               	movf	?___flmul,w
  1378  0429  00C4               	movwf	___fltol@f1
  1379  042A  120A  158A  26C8  120A  118A  	fcall	___fltol
  1380  042F  1283               	bcf	3,5	;RP0=0, select bank0
  1381  0430  1303               	bcf	3,6	;RP1=0, select bank0
  1382  0431  0844               	movf	?___fltol,w
  1383  0432  00D3               	movwf	??_main+4
  1384  0433  0853               	movf	??_main+4,w
  1385  0434  1683               	bsf	3,5	;RP0=1, select bank1
  1386  0435  1303               	bcf	3,6	;RP1=0, select bank1
  1387  0436  00CB               	movwf	_dato1^(0+128)
  1388  0437                     l2878:
  1389                           
  1390                           ;D2_main2.c: 126:     sprintf(buffer, "%d V   ", dato);
  1391  0437  30B5               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1392  0438  1283               	bcf	3,5	;RP0=0, select bank0
  1393  0439  1303               	bcf	3,6	;RP1=0, select bank0
  1394  043A  00CF               	movwf	??_main
  1395  043B  084F               	movf	??_main,w
  1396  043C  00B4               	movwf	sprintf@f
  1397  043D  1683               	bsf	3,5	;RP0=1, select bank1
  1398  043E  1303               	bcf	3,6	;RP1=0, select bank1
  1399  043F  084A               	movf	_dato^(0+128),w
  1400  0440  1283               	bcf	3,5	;RP0=0, select bank0
  1401  0441  1303               	bcf	3,6	;RP1=0, select bank0
  1402  0442  00D0               	movwf	??_main+1
  1403  0443  01D1               	clrf	??_main+2
  1404  0444  0850               	movf	??_main+1,w
  1405  0445  00B5               	movwf	?_sprintf+1
  1406  0446  0851               	movf	??_main+2,w
  1407  0447  00B6               	movwf	?_sprintf+2
  1408  0448  30A0               	movlw	(low (main@buffer| 0))& (0+255)
  1409  0449  120A  158A  2387  120A  118A  	fcall	_sprintf
  1410  044E                     l2880:
  1411                           
  1412                           ;D2_main2.c: 127:     sprintf(buffer1, "%d V ", dato1);
  1413  044E  30BD               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1414  044F  1283               	bcf	3,5	;RP0=0, select bank0
  1415  0450  1303               	bcf	3,6	;RP1=0, select bank0
  1416  0451  00CF               	movwf	??_main
  1417  0452  084F               	movf	??_main,w
  1418  0453  00B4               	movwf	sprintf@f
  1419  0454  1683               	bsf	3,5	;RP0=1, select bank1
  1420  0455  1303               	bcf	3,6	;RP1=0, select bank1
  1421  0456  084B               	movf	_dato1^(0+128),w
  1422  0457  1283               	bcf	3,5	;RP0=0, select bank0
  1423  0458  1303               	bcf	3,6	;RP1=0, select bank0
  1424  0459  00D0               	movwf	??_main+1
  1425  045A  01D1               	clrf	??_main+2
  1426  045B  0850               	movf	??_main+1,w
  1427  045C  00B5               	movwf	?_sprintf+1
  1428  045D  0851               	movf	??_main+2,w
  1429  045E  00B6               	movwf	?_sprintf+2
  1430  045F  30B4               	movlw	(low (main@buffer1| 0))& (0+255)
  1431  0460  120A  158A  2387  120A  118A  	fcall	_sprintf
  1432  0465                     l2882:
  1433                           
  1434                           ;D2_main2.c: 129:     Lcd_Set_Cursor(2,2);
  1435  0465  3002               	movlw	2
  1436  0466  1283               	bcf	3,5	;RP0=0, select bank0
  1437  0467  1303               	bcf	3,6	;RP1=0, select bank0
  1438  0468  00CF               	movwf	??_main
  1439  0469  084F               	movf	??_main,w
  1440  046A  00F7               	movwf	Lcd_Set_Cursor@b
  1441  046B  3002               	movlw	2
  1442  046C  120A  158A  2547  120A  118A  	fcall	_Lcd_Set_Cursor
  1443  0471                     l2884:
  1444                           
  1445                           ;D2_main2.c: 130:     Lcd_Write_String(buffer);
  1446  0471  30A0               	movlw	(low (main@buffer| 0))& (0+255)
  1447  0472  1283               	bcf	3,5	;RP0=0, select bank0
  1448  0473  1303               	bcf	3,6	;RP1=0, select bank0
  1449  0474  00A0               	movwf	Lcd_Write_String@a
  1450  0475  3000               	movlw	0
  1451  0476  00A1               	movwf	Lcd_Write_String@a+1
  1452  0477  120A  158A  23D1  120A  118A  	fcall	_Lcd_Write_String
  1453  047C                     l2886:
  1454                           
  1455                           ;D2_main2.c: 131:     Lcd_Write_String(buffer1);
  1456  047C  30B4               	movlw	(low (main@buffer1| 0))& (0+255)
  1457  047D  1283               	bcf	3,5	;RP0=0, select bank0
  1458  047E  1303               	bcf	3,6	;RP1=0, select bank0
  1459  047F  00A0               	movwf	Lcd_Write_String@a
  1460  0480  3000               	movlw	0
  1461  0481  00A1               	movwf	Lcd_Write_String@a+1
  1462  0482  120A  158A  23D1  120A  118A  	fcall	_Lcd_Write_String
  1463  0487                     l2888:
  1464                           
  1465                           ;D2_main2.c: 132:     Lcd_Write_String('  ');
  1466  0487  3020               	movlw	32
  1467  0488  1283               	bcf	3,5	;RP0=0, select bank0
  1468  0489  1303               	bcf	3,6	;RP1=0, select bank0
  1469  048A  00A0               	movwf	Lcd_Write_String@a
  1470  048B  3020               	movlw	32
  1471  048C  00A1               	movwf	Lcd_Write_String@a+1
  1472  048D  120A  158A  23D1  120A  118A  	fcall	_Lcd_Write_String
  1473  0492                     l2890:
  1474                           
  1475                           ;D2_main2.c: 134:     _delay((unsigned long)((1000)*(4000000/4000.0)));
  1476  0492  3006               	movlw	6
  1477  0493  1283               	bcf	3,5	;RP0=0, select bank0
  1478  0494  1303               	bcf	3,6	;RP1=0, select bank0
  1479  0495  00D1               	movwf	??_main+2
  1480  0496  3013               	movlw	19
  1481  0497  00D0               	movwf	??_main+1
  1482  0498  30AD               	movlw	173
  1483  0499  00CF               	movwf	??_main
  1484  049A                     u2987:
  1485  049A  0BCF               	decfsz	??_main,f
  1486  049B  2C9A               	goto	u2987
  1487  049C  0BD0               	decfsz	??_main+1,f
  1488  049D  2C9A               	goto	u2987
  1489  049E  0BD1               	decfsz	??_main+2,f
  1490  049F  2C9A               	goto	u2987
  1491  04A0                     l2892:
  1492                           
  1493                           ;D2_main2.c: 136:     if (ADCON0bits.GO == 0){
  1494  04A0  1283               	bcf	3,5	;RP0=0, select bank0
  1495  04A1  1303               	bcf	3,6	;RP1=0, select bank0
  1496  04A2  189F               	btfsc	31,1	;volatile
  1497  04A3  2CA5               	goto	u2941
  1498  04A4  2CA6               	goto	u2940
  1499  04A5                     u2941:
  1500  04A5  2CB0               	goto	l2898
  1501  04A6                     u2940:
  1502  04A6                     l2894:
  1503                           
  1504                           ;D2_main2.c: 137:             _delay((unsigned long)((100)*(4000000/4000000.0)));
  1505  04A6  3020               	movlw	32
  1506  04A7  1283               	bcf	3,5	;RP0=0, select bank0
  1507  04A8  1303               	bcf	3,6	;RP1=0, select bank0
  1508  04A9  00CF               	movwf	??_main
  1509  04AA                     u2997:
  1510  04AA  0BCF               	decfsz	??_main,f
  1511  04AB  2CAA               	goto	u2997
  1512  04AC  0000               	nop
  1513  04AD                     l2896:
  1514                           
  1515                           ;D2_main2.c: 138:             ADCON0bits.GO = 1;
  1516  04AD  1283               	bcf	3,5	;RP0=0, select bank0
  1517  04AE  1303               	bcf	3,6	;RP1=0, select bank0
  1518  04AF  149F               	bsf	31,1	;volatile
  1519  04B0                     l2898:
  1520                           
  1521                           ;D2_main2.c: 141:     division(volt01);
  1522  04B0  1683               	bsf	3,5	;RP0=1, select bank1
  1523  04B1  1303               	bcf	3,6	;RP1=0, select bank1
  1524  04B2  0850               	movf	_volt01^(0+128),w
  1525  04B3  120A  118A  276E  120A  118A  	fcall	_division
  1526  04B8                     l2900:
  1527                           
  1528                           ;D2_main2.c: 142:     _delay((unsigned long)((250)*(4000000/4000.0)));
  1529  04B8  3002               	movlw	2
  1530  04B9  1283               	bcf	3,5	;RP0=0, select bank0
  1531  04BA  1303               	bcf	3,6	;RP1=0, select bank0
  1532  04BB  00D1               	movwf	??_main+2
  1533  04BC  3045               	movlw	69
  1534  04BD  00D0               	movwf	??_main+1
  1535  04BE  30A9               	movlw	169
  1536  04BF  00CF               	movwf	??_main
  1537  04C0                     u3007:
  1538  04C0  0BCF               	decfsz	??_main,f
  1539  04C1  2CC0               	goto	u3007
  1540  04C2  0BD0               	decfsz	??_main+1,f
  1541  04C3  2CC0               	goto	u3007
  1542  04C4  0BD1               	decfsz	??_main+2,f
  1543  04C5  2CC0               	goto	u3007
  1544  04C6                     l2902:
  1545                           
  1546                           ;D2_main2.c: 143:     printf("Valor del POT1:\r");
  1547  04C6  3082               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1548  04C7  120A  158A  234F  120A  118A  	fcall	_printf
  1549  04CC                     l2904:
  1550                           
  1551                           ;D2_main2.c: 144:     _delay((unsigned long)((250)*(4000000/4000.0)));
  1552  04CC  3002               	movlw	2
  1553  04CD  1283               	bcf	3,5	;RP0=0, select bank0
  1554  04CE  1303               	bcf	3,6	;RP1=0, select bank0
  1555  04CF  00D1               	movwf	??_main+2
  1556  04D0  3045               	movlw	69
  1557  04D1  00D0               	movwf	??_main+1
  1558  04D2  30A9               	movlw	169
  1559  04D3  00CF               	movwf	??_main
  1560  04D4                     u3017:
  1561  04D4  0BCF               	decfsz	??_main,f
  1562  04D5  2CD4               	goto	u3017
  1563  04D6  0BD0               	decfsz	??_main+1,f
  1564  04D7  2CD4               	goto	u3017
  1565  04D8  0BD1               	decfsz	??_main+2,f
  1566  04D9  2CD4               	goto	u3017
  1567  04DA                     l2906:
  1568                           
  1569                           ;D2_main2.c: 145:     TXREG = hundreds;
  1570  04DA  1683               	bsf	3,5	;RP0=1, select bank1
  1571  04DB  1303               	bcf	3,6	;RP1=0, select bank1
  1572  04DC  084E               	movf	_hundreds^(0+128),w
  1573  04DD  1283               	bcf	3,5	;RP0=0, select bank0
  1574  04DE  1303               	bcf	3,6	;RP1=0, select bank0
  1575  04DF  0099               	movwf	25	;volatile
  1576  04E0                     l2908:
  1577                           
  1578                           ;D2_main2.c: 146:     _delay((unsigned long)((250)*(4000000/4000.0)));
  1579  04E0  3002               	movlw	2
  1580  04E1  1283               	bcf	3,5	;RP0=0, select bank0
  1581  04E2  1303               	bcf	3,6	;RP1=0, select bank0
  1582  04E3  00D1               	movwf	??_main+2
  1583  04E4  3045               	movlw	69
  1584  04E5  00D0               	movwf	??_main+1
  1585  04E6  30A9               	movlw	169
  1586  04E7  00CF               	movwf	??_main
  1587  04E8                     u3027:
  1588  04E8  0BCF               	decfsz	??_main,f
  1589  04E9  2CE8               	goto	u3027
  1590  04EA  0BD0               	decfsz	??_main+1,f
  1591  04EB  2CE8               	goto	u3027
  1592  04EC  0BD1               	decfsz	??_main+2,f
  1593  04ED  2CE8               	goto	u3027
  1594  04EE                     l2910:
  1595                           
  1596                           ;D2_main2.c: 147:     TXREG = 46;
  1597  04EE  302E               	movlw	46
  1598  04EF  1283               	bcf	3,5	;RP0=0, select bank0
  1599  04F0  1303               	bcf	3,6	;RP1=0, select bank0
  1600  04F1  0099               	movwf	25	;volatile
  1601  04F2                     l2912:
  1602                           
  1603                           ;D2_main2.c: 148:     _delay((unsigned long)((250)*(4000000/4000.0)));
  1604  04F2  3002               	movlw	2
  1605  04F3  1283               	bcf	3,5	;RP0=0, select bank0
  1606  04F4  1303               	bcf	3,6	;RP1=0, select bank0
  1607  04F5  00D1               	movwf	??_main+2
  1608  04F6  3045               	movlw	69
  1609  04F7  00D0               	movwf	??_main+1
  1610  04F8  30A9               	movlw	169
  1611  04F9  00CF               	movwf	??_main
  1612  04FA                     u3037:
  1613  04FA  0BCF               	decfsz	??_main,f
  1614  04FB  2CFA               	goto	u3037
  1615  04FC  0BD0               	decfsz	??_main+1,f
  1616  04FD  2CFA               	goto	u3037
  1617  04FE  0BD1               	decfsz	??_main+2,f
  1618  04FF  2CFA               	goto	u3037
  1619  0500                     l2914:
  1620                           
  1621                           ;D2_main2.c: 149:     TXREG = tens;
  1622  0500  1683               	bsf	3,5	;RP0=1, select bank1
  1623  0501  1303               	bcf	3,6	;RP1=0, select bank1
  1624  0502  084D               	movf	_tens^(0+128),w
  1625  0503  1283               	bcf	3,5	;RP0=0, select bank0
  1626  0504  1303               	bcf	3,6	;RP1=0, select bank0
  1627  0505  0099               	movwf	25	;volatile
  1628  0506                     l2916:
  1629                           
  1630                           ;D2_main2.c: 150:     _delay((unsigned long)((250)*(4000000/4000.0)));
  1631  0506  3002               	movlw	2
  1632  0507  1283               	bcf	3,5	;RP0=0, select bank0
  1633  0508  1303               	bcf	3,6	;RP1=0, select bank0
  1634  0509  00D1               	movwf	??_main+2
  1635  050A  3045               	movlw	69
  1636  050B  00D0               	movwf	??_main+1
  1637  050C  30A9               	movlw	169
  1638  050D  00CF               	movwf	??_main
  1639  050E                     u3047:
  1640  050E  0BCF               	decfsz	??_main,f
  1641  050F  2D0E               	goto	u3047
  1642  0510  0BD0               	decfsz	??_main+1,f
  1643  0511  2D0E               	goto	u3047
  1644  0512  0BD1               	decfsz	??_main+2,f
  1645  0513  2D0E               	goto	u3047
  1646  0514                     l2918:
  1647                           
  1648                           ;D2_main2.c: 151:     TXREG = units;
  1649  0514  1683               	bsf	3,5	;RP0=1, select bank1
  1650  0515  1303               	bcf	3,6	;RP1=0, select bank1
  1651  0516  084C               	movf	_units^(0+128),w
  1652  0517  1283               	bcf	3,5	;RP0=0, select bank0
  1653  0518  1303               	bcf	3,6	;RP1=0, select bank0
  1654  0519  0099               	movwf	25	;volatile
  1655  051A                     l2920:
  1656                           
  1657                           ;D2_main2.c: 152:     _delay((unsigned long)((250)*(4000000/4000.0)));
  1658  051A  3002               	movlw	2
  1659  051B  1283               	bcf	3,5	;RP0=0, select bank0
  1660  051C  1303               	bcf	3,6	;RP1=0, select bank0
  1661  051D  00D1               	movwf	??_main+2
  1662  051E  3045               	movlw	69
  1663  051F  00D0               	movwf	??_main+1
  1664  0520  30A9               	movlw	169
  1665  0521  00CF               	movwf	??_main
  1666  0522                     u3057:
  1667  0522  0BCF               	decfsz	??_main,f
  1668  0523  2D22               	goto	u3057
  1669  0524  0BD0               	decfsz	??_main+1,f
  1670  0525  2D22               	goto	u3057
  1671  0526  0BD1               	decfsz	??_main+2,f
  1672  0527  2D22               	goto	u3057
  1673  0528                     l2922:
  1674                           
  1675                           ;D2_main2.c: 153:     printf("\r");
  1676  0528  3080               	movlw	(low (((STR_10+36)-__stringbase)| (0+32768)))& (0+255)
  1677  0529  120A  158A  234F  120A  118A  	fcall	_printf
  1678  052E                     l2924:
  1679                           
  1680                           ;D2_main2.c: 156:     division(volt02);
  1681  052E  1683               	bsf	3,5	;RP0=1, select bank1
  1682  052F  1303               	bcf	3,6	;RP1=0, select bank1
  1683  0530  084F               	movf	_volt02^(0+128),w
  1684  0531  120A  118A  276E  120A  118A  	fcall	_division
  1685                           
  1686                           ;D2_main2.c: 157:     _delay((unsigned long)((250)*(4000000/4000.0)));
  1687  0536  3002               	movlw	2
  1688  0537  1283               	bcf	3,5	;RP0=0, select bank0
  1689  0538  1303               	bcf	3,6	;RP1=0, select bank0
  1690  0539  00D1               	movwf	??_main+2
  1691  053A  3045               	movlw	69
  1692  053B  00D0               	movwf	??_main+1
  1693  053C  30A9               	movlw	169
  1694  053D  00CF               	movwf	??_main
  1695  053E                     u3067:
  1696  053E  0BCF               	decfsz	??_main,f
  1697  053F  2D3E               	goto	u3067
  1698  0540  0BD0               	decfsz	??_main+1,f
  1699  0541  2D3E               	goto	u3067
  1700  0542  0BD1               	decfsz	??_main+2,f
  1701  0543  2D3E               	goto	u3067
  1702  0544                     l2926:
  1703                           
  1704                           ;D2_main2.c: 158:     printf("Valor del POT2:\r");
  1705  0544  3093               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  1706  0545  120A  158A  234F  120A  118A  	fcall	_printf
  1707  054A                     l2928:
  1708                           
  1709                           ;D2_main2.c: 159:     _delay((unsigned long)((250)*(4000000/4000.0)));
  1710  054A  3002               	movlw	2
  1711  054B  1283               	bcf	3,5	;RP0=0, select bank0
  1712  054C  1303               	bcf	3,6	;RP1=0, select bank0
  1713  054D  00D1               	movwf	??_main+2
  1714  054E  3045               	movlw	69
  1715  054F  00D0               	movwf	??_main+1
  1716  0550  30A9               	movlw	169
  1717  0551  00CF               	movwf	??_main
  1718  0552                     u3077:
  1719  0552  0BCF               	decfsz	??_main,f
  1720  0553  2D52               	goto	u3077
  1721  0554  0BD0               	decfsz	??_main+1,f
  1722  0555  2D52               	goto	u3077
  1723  0556  0BD1               	decfsz	??_main+2,f
  1724  0557  2D52               	goto	u3077
  1725  0558                     l2930:
  1726                           
  1727                           ;D2_main2.c: 160:     TXREG = hundreds;
  1728  0558  1683               	bsf	3,5	;RP0=1, select bank1
  1729  0559  1303               	bcf	3,6	;RP1=0, select bank1
  1730  055A  084E               	movf	_hundreds^(0+128),w
  1731  055B  1283               	bcf	3,5	;RP0=0, select bank0
  1732  055C  1303               	bcf	3,6	;RP1=0, select bank0
  1733  055D  0099               	movwf	25	;volatile
  1734  055E                     l2932:
  1735                           
  1736                           ;D2_main2.c: 161:     _delay((unsigned long)((250)*(4000000/4000.0)));
  1737  055E  3002               	movlw	2
  1738  055F  1283               	bcf	3,5	;RP0=0, select bank0
  1739  0560  1303               	bcf	3,6	;RP1=0, select bank0
  1740  0561  00D1               	movwf	??_main+2
  1741  0562  3045               	movlw	69
  1742  0563  00D0               	movwf	??_main+1
  1743  0564  30A9               	movlw	169
  1744  0565  00CF               	movwf	??_main
  1745  0566                     u3087:
  1746  0566  0BCF               	decfsz	??_main,f
  1747  0567  2D66               	goto	u3087
  1748  0568  0BD0               	decfsz	??_main+1,f
  1749  0569  2D66               	goto	u3087
  1750  056A  0BD1               	decfsz	??_main+2,f
  1751  056B  2D66               	goto	u3087
  1752  056C                     l2934:
  1753                           
  1754                           ;D2_main2.c: 162:     TXREG = 46;
  1755  056C  302E               	movlw	46
  1756  056D  1283               	bcf	3,5	;RP0=0, select bank0
  1757  056E  1303               	bcf	3,6	;RP1=0, select bank0
  1758  056F  0099               	movwf	25	;volatile
  1759  0570                     l2936:
  1760                           
  1761                           ;D2_main2.c: 163:     _delay((unsigned long)((250)*(4000000/4000.0)));
  1762  0570  3002               	movlw	2
  1763  0571  1283               	bcf	3,5	;RP0=0, select bank0
  1764  0572  1303               	bcf	3,6	;RP1=0, select bank0
  1765  0573  00D1               	movwf	??_main+2
  1766  0574  3045               	movlw	69
  1767  0575  00D0               	movwf	??_main+1
  1768  0576  30A9               	movlw	169
  1769  0577  00CF               	movwf	??_main
  1770  0578                     u3097:
  1771  0578  0BCF               	decfsz	??_main,f
  1772  0579  2D78               	goto	u3097
  1773  057A  0BD0               	decfsz	??_main+1,f
  1774  057B  2D78               	goto	u3097
  1775  057C  0BD1               	decfsz	??_main+2,f
  1776  057D  2D78               	goto	u3097
  1777  057E                     l2938:
  1778                           
  1779                           ;D2_main2.c: 164:     TXREG = tens;
  1780  057E  1683               	bsf	3,5	;RP0=1, select bank1
  1781  057F  1303               	bcf	3,6	;RP1=0, select bank1
  1782  0580  084D               	movf	_tens^(0+128),w
  1783  0581  1283               	bcf	3,5	;RP0=0, select bank0
  1784  0582  1303               	bcf	3,6	;RP1=0, select bank0
  1785  0583  0099               	movwf	25	;volatile
  1786  0584                     l2940:
  1787                           
  1788                           ;D2_main2.c: 165:     _delay((unsigned long)((250)*(4000000/4000.0)));
  1789  0584  3002               	movlw	2
  1790  0585  1283               	bcf	3,5	;RP0=0, select bank0
  1791  0586  1303               	bcf	3,6	;RP1=0, select bank0
  1792  0587  00D1               	movwf	??_main+2
  1793  0588  3045               	movlw	69
  1794  0589  00D0               	movwf	??_main+1
  1795  058A  30A9               	movlw	169
  1796  058B  00CF               	movwf	??_main
  1797  058C                     u3107:
  1798  058C  0BCF               	decfsz	??_main,f
  1799  058D  2D8C               	goto	u3107
  1800  058E  0BD0               	decfsz	??_main+1,f
  1801  058F  2D8C               	goto	u3107
  1802  0590  0BD1               	decfsz	??_main+2,f
  1803  0591  2D8C               	goto	u3107
  1804  0592                     l2942:
  1805                           
  1806                           ;D2_main2.c: 166:     TXREG = units;
  1807  0592  1683               	bsf	3,5	;RP0=1, select bank1
  1808  0593  1303               	bcf	3,6	;RP1=0, select bank1
  1809  0594  084C               	movf	_units^(0+128),w
  1810  0595  1283               	bcf	3,5	;RP0=0, select bank0
  1811  0596  1303               	bcf	3,6	;RP1=0, select bank0
  1812  0597  0099               	movwf	25	;volatile
  1813  0598                     l2944:
  1814                           
  1815                           ;D2_main2.c: 167:     _delay((unsigned long)((250)*(4000000/4000.0)));
  1816  0598  3002               	movlw	2
  1817  0599  1283               	bcf	3,5	;RP0=0, select bank0
  1818  059A  1303               	bcf	3,6	;RP1=0, select bank0
  1819  059B  00D1               	movwf	??_main+2
  1820  059C  3045               	movlw	69
  1821  059D  00D0               	movwf	??_main+1
  1822  059E  30A9               	movlw	169
  1823  059F  00CF               	movwf	??_main
  1824  05A0                     u3117:
  1825  05A0  0BCF               	decfsz	??_main,f
  1826  05A1  2DA0               	goto	u3117
  1827  05A2  0BD0               	decfsz	??_main+1,f
  1828  05A3  2DA0               	goto	u3117
  1829  05A4  0BD1               	decfsz	??_main+2,f
  1830  05A5  2DA0               	goto	u3117
  1831                           
  1832                           ;D2_main2.c: 168:     printf("\r");
  1833  05A6  3080               	movlw	(low (((STR_10+36)-__stringbase)| (0+32768)))& (0+255)
  1834  05A7  120A  158A  234F  120A  118A  	fcall	_printf
  1835  05AC                     l2946:
  1836                           
  1837                           ;D2_main2.c: 171:     division(contador);
  1838  05AC  1683               	bsf	3,5	;RP0=1, select bank1
  1839  05AD  1303               	bcf	3,6	;RP1=0, select bank1
  1840  05AE  0849               	movf	_contador^(0+128),w
  1841  05AF  120A  118A  276E  120A  118A  	fcall	_division
  1842  05B4                     l2948:
  1843                           
  1844                           ;D2_main2.c: 172:     Lcd_Write_Char(hundreds);
  1845  05B4  1683               	bsf	3,5	;RP0=1, select bank1
  1846  05B5  1303               	bcf	3,6	;RP1=0, select bank1
  1847  05B6  084E               	movf	_hundreds^(0+128),w
  1848  05B7  120A  158A  236A  120A  118A  	fcall	_Lcd_Write_Char
  1849  05BC                     l2950:
  1850                           
  1851                           ;D2_main2.c: 173:     Lcd_Write_Char(tens);
  1852  05BC  1683               	bsf	3,5	;RP0=1, select bank1
  1853  05BD  1303               	bcf	3,6	;RP1=0, select bank1
  1854  05BE  084D               	movf	_tens^(0+128),w
  1855  05BF  120A  158A  236A  120A  118A  	fcall	_Lcd_Write_Char
  1856  05C4                     l2952:
  1857                           
  1858                           ;D2_main2.c: 174:     Lcd_Write_Char(units);
  1859  05C4  1683               	bsf	3,5	;RP0=1, select bank1
  1860  05C5  1303               	bcf	3,6	;RP1=0, select bank1
  1861  05C6  084C               	movf	_units^(0+128),w
  1862  05C7  120A  158A  236A  120A  118A  	fcall	_Lcd_Write_Char
  1863  05CC                     l2954:
  1864                           
  1865                           ;D2_main2.c: 177:     _delay((unsigned long)((250)*(4000000/4000.0)));
  1866  05CC  3002               	movlw	2
  1867  05CD  1283               	bcf	3,5	;RP0=0, select bank0
  1868  05CE  1303               	bcf	3,6	;RP1=0, select bank0
  1869  05CF  00D1               	movwf	??_main+2
  1870  05D0  3045               	movlw	69
  1871  05D1  00D0               	movwf	??_main+1
  1872  05D2  30A9               	movlw	169
  1873  05D3  00CF               	movwf	??_main
  1874  05D4                     u3127:
  1875  05D4  0BCF               	decfsz	??_main,f
  1876  05D5  2DD4               	goto	u3127
  1877  05D6  0BD0               	decfsz	??_main+1,f
  1878  05D7  2DD4               	goto	u3127
  1879  05D8  0BD1               	decfsz	??_main+2,f
  1880  05D9  2DD4               	goto	u3127
  1881  05DA                     l2956:
  1882                           
  1883                           ;D2_main2.c: 178:     printf("\r Si desea aumentar contador, oprima +\r");
  1884  05DA  3034               	movlw	(low ((STR_8-__stringbase)| (0+32768)))& (0+255)
  1885  05DB  120A  158A  234F  120A  118A  	fcall	_printf
  1886                           
  1887                           ;D2_main2.c: 179:     _delay((unsigned long)((250)*(4000000/4000.0)));
  1888  05E0  3002               	movlw	2
  1889  05E1  1283               	bcf	3,5	;RP0=0, select bank0
  1890  05E2  1303               	bcf	3,6	;RP1=0, select bank0
  1891  05E3  00D1               	movwf	??_main+2
  1892  05E4  3045               	movlw	69
  1893  05E5  00D0               	movwf	??_main+1
  1894  05E6  30A9               	movlw	169
  1895  05E7  00CF               	movwf	??_main
  1896  05E8                     u3137:
  1897  05E8  0BCF               	decfsz	??_main,f
  1898  05E9  2DE8               	goto	u3137
  1899  05EA  0BD0               	decfsz	??_main+1,f
  1900  05EB  2DE8               	goto	u3137
  1901  05EC  0BD1               	decfsz	??_main+2,f
  1902  05ED  2DE8               	goto	u3137
  1903  05EE                     l2958:
  1904                           
  1905                           ;D2_main2.c: 180:     printf("\r Si desea disminuir contador, oprima -\r");
  1906  05EE  300B               	movlw	(low ((STR_9-__stringbase)| (0+32768)))& (0+255)
  1907  05EF  120A  158A  234F  120A  118A  	fcall	_printf
  1908  05F4                     l2960:
  1909                           
  1910                           ;D2_main2.c: 181:     _delay((unsigned long)((250)*(4000000/4000.0)));
  1911  05F4  3002               	movlw	2
  1912  05F5  1283               	bcf	3,5	;RP0=0, select bank0
  1913  05F6  1303               	bcf	3,6	;RP1=0, select bank0
  1914  05F7  00D1               	movwf	??_main+2
  1915  05F8  3045               	movlw	69
  1916  05F9  00D0               	movwf	??_main+1
  1917  05FA  30A9               	movlw	169
  1918  05FB  00CF               	movwf	??_main
  1919  05FC                     u3147:
  1920  05FC  0BCF               	decfsz	??_main,f
  1921  05FD  2DFC               	goto	u3147
  1922  05FE  0BD0               	decfsz	??_main+1,f
  1923  05FF  2DFC               	goto	u3147
  1924  0600  0BD1               	decfsz	??_main+2,f
  1925  0601  2DFC               	goto	u3147
  1926                           
  1927                           ;D2_main2.c: 182:     printf("\r Si no desea realizar nada oprima *\r");
  1928  0602  305C               	movlw	(low ((STR_10-__stringbase)| (0+32768)))& (0+255)
  1929  0603  120A  158A  234F  120A  118A  	fcall	_printf
  1930  0608                     l112:	
  1931                           ;D2_main2.c: 183:     while(RCIF == 0);
  1932                           
  1933  0608  1283               	bcf	3,5	;RP0=0, select bank0
  1934  0609  1303               	bcf	3,6	;RP1=0, select bank0
  1935  060A  1E8C               	btfss	12,5	;volatile
  1936  060B  2E0D               	goto	u2951
  1937  060C  2E0E               	goto	u2950
  1938  060D                     u2951:
  1939  060D  2E08               	goto	l112
  1940  060E                     u2950:
  1941  060E                     l2962:
  1942                           
  1943                           ;D2_main2.c: 184:     char answer = RCREG;
  1944  060E  081A               	movf	26,w	;volatile
  1945  060F  00CF               	movwf	??_main
  1946  0610  084F               	movf	??_main,w
  1947  0611  1683               	bsf	3,5	;RP0=1, select bank1
  1948  0612  1303               	bcf	3,6	;RP1=0, select bank1
  1949  0613  00C8               	movwf	main@answer^(0+128)
  1950  0614                     l2964:
  1951                           
  1952                           ;D2_main2.c: 185:     if (answer == '+'){
  1953  0614  302B               	movlw	43
  1954  0615  0648               	xorwf	main@answer^(0+128),w
  1955  0616  1D03               	btfss	3,2
  1956  0617  2E19               	goto	u2961
  1957  0618  2E1A               	goto	u2960
  1958  0619                     u2961:
  1959  0619  2E24               	goto	l2968
  1960  061A                     u2960:
  1961  061A                     l2966:
  1962                           
  1963                           ;D2_main2.c: 186:         contador = contador + 1;
  1964  061A  0849               	movf	_contador^(0+128),w
  1965  061B  3E01               	addlw	1
  1966  061C  1283               	bcf	3,5	;RP0=0, select bank0
  1967  061D  1303               	bcf	3,6	;RP1=0, select bank0
  1968  061E  00CF               	movwf	??_main
  1969  061F  084F               	movf	??_main,w
  1970  0620  1683               	bsf	3,5	;RP0=1, select bank1
  1971  0621  1303               	bcf	3,6	;RP1=0, select bank1
  1972  0622  00C9               	movwf	_contador^(0+128)
  1973                           
  1974                           ;D2_main2.c: 187:     }
  1975  0623  2BAF               	goto	l110
  1976  0624                     l2968:
  1977  0624  302D               	movlw	45
  1978  0625  0648               	xorwf	main@answer^(0+128),w
  1979  0626  1D03               	btfss	3,2
  1980  0627  2E29               	goto	u2971
  1981  0628  2E2A               	goto	u2970
  1982  0629                     u2971:
  1983  0629  2E34               	goto	l118
  1984  062A                     u2970:
  1985  062A                     l2970:
  1986                           
  1987                           ;D2_main2.c: 189:         contador = contador - 1;
  1988  062A  0849               	movf	_contador^(0+128),w
  1989  062B  3EFF               	addlw	255
  1990  062C  1283               	bcf	3,5	;RP0=0, select bank0
  1991  062D  1303               	bcf	3,6	;RP1=0, select bank0
  1992  062E  00CF               	movwf	??_main
  1993  062F  084F               	movf	??_main,w
  1994  0630  1683               	bsf	3,5	;RP0=1, select bank1
  1995  0631  1303               	bcf	3,6	;RP1=0, select bank1
  1996  0632  00C9               	movwf	_contador^(0+128)
  1997                           
  1998                           ;D2_main2.c: 190:     }
  1999  0633  2BAF               	goto	l110
  2000  0634                     l118:
  2001  0634  2BAF               	goto	l110
  2002  0635  120A  118A  280C   	ljmp	start
  2003  0638                     __end_of_main:
  2004                           
  2005                           	psect	text1
  2006  0B87                     __ptext1:	
  2007 ;; *************** function _sprintf *****************
  2008 ;; Defined at:
  2009 ;;		line 13 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprintf.c"
  2010 ;; Parameters:    Size  Location     Type
  2011 ;;  wh              1    wreg     PTR unsigned char 
  2012 ;;		 -> main@buffer1(20), main@buffer(20), 
  2013 ;;  f               1   20[BANK0 ] PTR const unsigned char 
  2014 ;;		 -> STR_3(6), STR_2(8), 
  2015 ;; Auto vars:     Size  Location     Type
  2016 ;;  wh              1   25[BANK0 ] PTR unsigned char 
  2017 ;;		 -> main@buffer1(20), main@buffer(20), 
  2018 ;;  pb              2   27[BANK0 ] struct __prbuf
  2019 ;;  ap              1   26[BANK0 ] PTR void [1]
  2020 ;;		 -> ?_sprintf(2), ?_printf(2), 
  2021 ;; Return value:  Size  Location     Type
  2022 ;;                  2   20[BANK0 ] int 
  2023 ;; Registers used:
  2024 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2025 ;; Tracked objects:
  2026 ;;		On entry : 0/0
  2027 ;;		On exit  : 0/0
  2028 ;;		Unchanged: 0/0
  2029 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2030 ;;      Params:         0       3       0       0       0
  2031 ;;      Locals:         0       4       0       0       0
  2032 ;;      Temps:          0       2       0       0       0
  2033 ;;      Totals:         0       9       0       0       0
  2034 ;;Total ram usage:        9 bytes
  2035 ;; Hardware stack levels used:    1
  2036 ;; Hardware stack levels required when called:    3
  2037 ;; This function calls:
  2038 ;;		__doprnt
  2039 ;; This function is called by:
  2040 ;;		_main
  2041 ;; This function uses a non-reentrant model
  2042 ;;
  2043                           
  2044                           
  2045                           ;psect for function _sprintf
  2046  0B87                     _sprintf:
  2047                           
  2048                           ;incstack = 0
  2049                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2050                           ;sprintf@wh stored from wreg
  2051  0B87  1283               	bcf	3,5	;RP0=0, select bank0
  2052  0B88  1303               	bcf	3,6	;RP1=0, select bank0
  2053  0B89  00B9               	movwf	sprintf@wh
  2054  0B8A                     l2794:
  2055  0B8A  0839               	movf	sprintf@wh,w
  2056  0B8B  00B7               	movwf	??_sprintf
  2057  0B8C  0837               	movf	??_sprintf,w
  2058  0B8D  00BB               	movwf	sprintf@pb
  2059  0B8E                     l2796:
  2060  0B8E  01BC               	clrf	low ((sprintf@pb| 0+1))
  2061  0B8F                     l2798:
  2062  0B8F  3035               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  2063  0B90  00B7               	movwf	??_sprintf
  2064  0B91  0837               	movf	??_sprintf,w
  2065  0B92  00BA               	movwf	sprintf@ap
  2066  0B93                     l2800:
  2067  0B93  0834               	movf	sprintf@f,w
  2068  0B94  00B7               	movwf	??_sprintf
  2069  0B95  0837               	movf	??_sprintf,w
  2070  0B96  00A9               	movwf	__doprnt@f
  2071  0B97  303A               	movlw	(low (sprintf@ap| 0))& (0+255)
  2072  0B98  00B8               	movwf	??_sprintf+1
  2073  0B99  0838               	movf	??_sprintf+1,w
  2074  0B9A  00AA               	movwf	__doprnt@ap
  2075  0B9B  303B               	movlw	(low (sprintf@pb| 0))& (0+255)
  2076  0B9C  120A  118A  2638  120A  158A  	fcall	__doprnt
  2077  0BA1                     l2802:
  2078  0BA1  1283               	bcf	3,5	;RP0=0, select bank0
  2079  0BA2  1303               	bcf	3,6	;RP1=0, select bank0
  2080  0BA3  083B               	movf	sprintf@pb,w
  2081  0BA4  0084               	movwf	4
  2082  0BA5  1383               	bcf	3,7	;select IRP bank0
  2083  0BA6  0180               	clrf	0
  2084  0BA7                     l796:
  2085  0BA7  0008               	return
  2086  0BA8                     __end_of_sprintf:
  2087                           
  2088                           	psect	text2
  2089  0C73                     __ptext2:	
  2090 ;; *************** function _setup *****************
  2091 ;; Defined at:
  2092 ;;		line 224 in file "D2_main2.c"
  2093 ;; Parameters:    Size  Location     Type
  2094 ;;		None
  2095 ;; Auto vars:     Size  Location     Type
  2096 ;;		None
  2097 ;; Return value:  Size  Location     Type
  2098 ;;                  1    wreg      void 
  2099 ;; Registers used:
  2100 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2101 ;; Tracked objects:
  2102 ;;		On entry : 0/0
  2103 ;;		On exit  : 0/0
  2104 ;;		Unchanged: 0/0
  2105 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2106 ;;      Params:         0       0       0       0       0
  2107 ;;      Locals:         0       0       0       0       0
  2108 ;;      Temps:          0       0       0       0       0
  2109 ;;      Totals:         0       0       0       0       0
  2110 ;;Total ram usage:        0 bytes
  2111 ;; Hardware stack levels used:    1
  2112 ;; Hardware stack levels required when called:    2
  2113 ;; This function calls:
  2114 ;;		_config_ADC
  2115 ;; This function is called by:
  2116 ;;		_main
  2117 ;; This function uses a non-reentrant model
  2118 ;;
  2119                           
  2120                           
  2121                           ;psect for function _setup
  2122  0C73                     _setup:
  2123  0C73                     l2050:	
  2124                           ;incstack = 0
  2125                           ; Regs used in _setup: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2126                           
  2127                           
  2128                           ;D2_main2.c: 226:     ANSEL = 0b00000011;
  2129  0C73  3003               	movlw	3
  2130  0C74  1683               	bsf	3,5	;RP0=1, select bank3
  2131  0C75  1703               	bsf	3,6	;RP1=1, select bank3
  2132  0C76  0088               	movwf	8	;volatile
  2133  0C77                     l2052:
  2134                           
  2135                           ;D2_main2.c: 227:     TRISAbits.TRISA0 = 1;
  2136  0C77  1683               	bsf	3,5	;RP0=1, select bank1
  2137  0C78  1303               	bcf	3,6	;RP1=0, select bank1
  2138  0C79  1405               	bsf	5,0	;volatile
  2139  0C7A                     l2054:
  2140                           
  2141                           ;D2_main2.c: 228:     TRISAbits.TRISA1 = 1;
  2142  0C7A  1485               	bsf	5,1	;volatile
  2143  0C7B                     l2056:
  2144                           
  2145                           ;D2_main2.c: 231:     TRISD = 0x00;
  2146  0C7B  0188               	clrf	8	;volatile
  2147  0C7C                     l2058:
  2148                           
  2149                           ;D2_main2.c: 232:     TRISE = 0x00;
  2150  0C7C  0189               	clrf	9	;volatile
  2151  0C7D                     l2060:
  2152                           
  2153                           ;D2_main2.c: 236:     OSCCONbits.IRCF0 = 0;
  2154  0C7D  120F               	bcf	15,4	;volatile
  2155  0C7E                     l2062:
  2156                           
  2157                           ;D2_main2.c: 237:     OSCCONbits.IRCF1 = 1;
  2158  0C7E  168F               	bsf	15,5	;volatile
  2159  0C7F                     l2064:
  2160                           
  2161                           ;D2_main2.c: 238:     OSCCONbits.IRCF2 = 1;
  2162  0C7F  170F               	bsf	15,6	;volatile
  2163  0C80                     l2066:
  2164                           
  2165                           ;D2_main2.c: 239:     OSCCONbits.SCS = 1;
  2166  0C80  140F               	bsf	15,0	;volatile
  2167  0C81                     l2068:
  2168                           
  2169                           ;D2_main2.c: 242:     PIE1bits.ADIE = 1;
  2170  0C81  170C               	bsf	12,6	;volatile
  2171  0C82                     l2070:
  2172                           
  2173                           ;D2_main2.c: 243:     PIR1bits.ADIF = 0;
  2174  0C82  1283               	bcf	3,5	;RP0=0, select bank0
  2175  0C83  1303               	bcf	3,6	;RP1=0, select bank0
  2176  0C84  130C               	bcf	12,6	;volatile
  2177  0C85                     l2072:
  2178                           
  2179                           ;D2_main2.c: 244:     INTCONbits.GIE = 1;
  2180  0C85  178B               	bsf	11,7	;volatile
  2181  0C86                     l2074:
  2182                           
  2183                           ;D2_main2.c: 245:     INTCONbits.PEIE = 1;
  2184  0C86  170B               	bsf	11,6	;volatile
  2185  0C87                     l2076:
  2186                           
  2187                           ;D2_main2.c: 246:     PIE1bits.RCIE = 0;
  2188  0C87  1683               	bsf	3,5	;RP0=1, select bank1
  2189  0C88  1303               	bcf	3,6	;RP1=0, select bank1
  2190  0C89  128C               	bcf	12,5	;volatile
  2191  0C8A                     l2078:
  2192                           
  2193                           ;D2_main2.c: 247:     PIE1bits.TXIE = 0;
  2194  0C8A  120C               	bcf	12,4	;volatile
  2195  0C8B                     l2080:
  2196                           
  2197                           ;D2_main2.c: 250:     PORTA = 0x00;
  2198  0C8B  1283               	bcf	3,5	;RP0=0, select bank0
  2199  0C8C  1303               	bcf	3,6	;RP1=0, select bank0
  2200  0C8D  0185               	clrf	5	;volatile
  2201  0C8E                     l2082:
  2202                           
  2203                           ;D2_main2.c: 251:     PORTB = 0x00;
  2204  0C8E  0186               	clrf	6	;volatile
  2205  0C8F                     l2084:
  2206                           
  2207                           ;D2_main2.c: 252:     PORTC = 0x00;
  2208  0C8F  0187               	clrf	7	;volatile
  2209  0C90                     l2086:
  2210                           
  2211                           ;D2_main2.c: 253:     PORTD = 0x00;
  2212  0C90  0188               	clrf	8	;volatile
  2213  0C91                     l2088:
  2214                           
  2215                           ;D2_main2.c: 254:     PORTE = 0x00;
  2216  0C91  0189               	clrf	9	;volatile
  2217  0C92                     l2090:
  2218                           
  2219                           ;D2_main2.c: 257:     config_ADC(1);
  2220  0C92  3001               	movlw	1
  2221  0C93  120A  158A  25FA  120A  158A  	fcall	_config_ADC
  2222  0C98                     l2092:
  2223                           
  2224                           ;D2_main2.c: 260:     TXSTAbits.SYNC = 0;
  2225  0C98  1683               	bsf	3,5	;RP0=1, select bank1
  2226  0C99  1303               	bcf	3,6	;RP1=0, select bank1
  2227  0C9A  1218               	bcf	24,4	;volatile
  2228  0C9B                     l2094:
  2229                           
  2230                           ;D2_main2.c: 261:     TXSTAbits.BRGH = 1;
  2231  0C9B  1518               	bsf	24,2	;volatile
  2232  0C9C                     l2096:
  2233                           
  2234                           ;D2_main2.c: 262:     BAUDCTLbits.BRG16 = 0;
  2235  0C9C  1683               	bsf	3,5	;RP0=1, select bank3
  2236  0C9D  1703               	bsf	3,6	;RP1=1, select bank3
  2237  0C9E  1187               	bcf	7,3	;volatile
  2238  0C9F                     l2098:
  2239                           
  2240                           ;D2_main2.c: 264:     SPBRG = 25;
  2241  0C9F  3019               	movlw	25
  2242  0CA0  1683               	bsf	3,5	;RP0=1, select bank1
  2243  0CA1  1303               	bcf	3,6	;RP1=0, select bank1
  2244  0CA2  0099               	movwf	25	;volatile
  2245  0CA3                     l2100:
  2246                           
  2247                           ;D2_main2.c: 265:     SPBRGH = 1;
  2248  0CA3  3001               	movlw	1
  2249  0CA4  009A               	movwf	26	;volatile
  2250  0CA5                     l2102:
  2251                           
  2252                           ;D2_main2.c: 267:     RCSTAbits.SPEN = 1;
  2253  0CA5  1283               	bcf	3,5	;RP0=0, select bank0
  2254  0CA6  1303               	bcf	3,6	;RP1=0, select bank0
  2255  0CA7  1798               	bsf	24,7	;volatile
  2256  0CA8                     l2104:
  2257                           
  2258                           ;D2_main2.c: 268:     RCSTAbits.RX9 = 0;
  2259  0CA8  1318               	bcf	24,6	;volatile
  2260  0CA9                     l2106:
  2261                           
  2262                           ;D2_main2.c: 269:     RCSTAbits.CREN = 1;
  2263  0CA9  1618               	bsf	24,4	;volatile
  2264  0CAA                     l2108:
  2265                           
  2266                           ;D2_main2.c: 270:     TXSTAbits.TX9 = 0;
  2267  0CAA  1683               	bsf	3,5	;RP0=1, select bank1
  2268  0CAB  1303               	bcf	3,6	;RP1=0, select bank1
  2269  0CAC  1318               	bcf	24,6	;volatile
  2270  0CAD                     l2110:
  2271                           
  2272                           ;D2_main2.c: 272:     TXSTAbits.TXEN = 1;
  2273  0CAD  1698               	bsf	24,5	;volatile
  2274  0CAE                     l2112:
  2275                           
  2276                           ;D2_main2.c: 274:     PIR1bits.RCIF = 0;
  2277  0CAE  1283               	bcf	3,5	;RP0=0, select bank0
  2278  0CAF  1303               	bcf	3,6	;RP1=0, select bank0
  2279  0CB0  128C               	bcf	12,5	;volatile
  2280  0CB1                     l2114:
  2281                           
  2282                           ;D2_main2.c: 275:     PIR1bits.TXIF = 0;
  2283  0CB1  120C               	bcf	12,4	;volatile
  2284  0CB2                     l137:
  2285  0CB2  0008               	return
  2286  0CB3                     __end_of_setup:
  2287                           
  2288                           	psect	text3
  2289  0DFA                     __ptext3:	
  2290 ;; *************** function _config_ADC *****************
  2291 ;; Defined at:
  2292 ;;		line 14 in file "ADC.c"
  2293 ;; Parameters:    Size  Location     Type
  2294 ;;  frec            1    wreg     unsigned char 
  2295 ;; Auto vars:     Size  Location     Type
  2296 ;;  frec            1    5[COMMON] unsigned char 
  2297 ;; Return value:  Size  Location     Type
  2298 ;;                  1    wreg      void 
  2299 ;; Registers used:
  2300 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2301 ;; Tracked objects:
  2302 ;;		On entry : 0/0
  2303 ;;		On exit  : 0/0
  2304 ;;		Unchanged: 0/0
  2305 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2306 ;;      Params:         0       0       0       0       0
  2307 ;;      Locals:         1       0       0       0       0
  2308 ;;      Temps:          2       0       0       0       0
  2309 ;;      Totals:         3       0       0       0       0
  2310 ;;Total ram usage:        3 bytes
  2311 ;; Hardware stack levels used:    1
  2312 ;; Hardware stack levels required when called:    1
  2313 ;; This function calls:
  2314 ;;		Nothing
  2315 ;; This function is called by:
  2316 ;;		_setup
  2317 ;; This function uses a non-reentrant model
  2318 ;;
  2319                           
  2320                           
  2321                           ;psect for function _config_ADC
  2322  0DFA                     _config_ADC:
  2323                           
  2324                           ;incstack = 0
  2325                           ; Regs used in _config_ADC: [wreg-fsr0h+status,2+status,0]
  2326                           ;config_ADC@frec stored from wreg
  2327  0DFA  00F5               	movwf	config_ADC@frec
  2328  0DFB                     l1798:
  2329                           
  2330                           ;ADC.c: 15:     switch(frec){
  2331  0DFB  2E48               	goto	l1866
  2332  0DFC                     l1800:
  2333                           
  2334                           ;ADC.c: 17:             ADCON0bits.CHS = 0;
  2335  0DFC  30C3               	movlw	-61
  2336  0DFD  1283               	bcf	3,5	;RP0=0, select bank0
  2337  0DFE  1303               	bcf	3,6	;RP1=0, select bank0
  2338  0DFF  059F               	andwf	31,f	;volatile
  2339  0E00                     l1802:
  2340                           
  2341                           ;ADC.c: 18:             _delay((unsigned long)((100)*(4000000/4000000.0)));
  2342  0E00  3021               	movlw	33
  2343  0E01  00F3               	movwf	??_config_ADC
  2344  0E02                     u3157:
  2345  0E02  0BF3               	decfsz	??_config_ADC,f
  2346  0E03  2E02               	goto	u3157
  2347  0E04                     l1804:
  2348                           
  2349                           ;ADC.c: 20:             ADCON0bits.ADCS0 = 0;
  2350  0E04  1283               	bcf	3,5	;RP0=0, select bank0
  2351  0E05  1303               	bcf	3,6	;RP1=0, select bank0
  2352  0E06  131F               	bcf	31,6	;volatile
  2353  0E07                     l1806:
  2354                           
  2355                           ;ADC.c: 21:             ADCON0bits.ADCS1 = 0;
  2356  0E07  139F               	bcf	31,7	;volatile
  2357  0E08                     l1808:
  2358                           
  2359                           ;ADC.c: 22:             ADCON0bits.ADON = 1;
  2360  0E08  141F               	bsf	31,0	;volatile
  2361  0E09                     l1810:
  2362                           
  2363                           ;ADC.c: 23:             ADCON1bits.ADFM = 0;
  2364  0E09  1683               	bsf	3,5	;RP0=1, select bank1
  2365  0E0A  1303               	bcf	3,6	;RP1=0, select bank1
  2366  0E0B  139F               	bcf	31,7	;volatile
  2367  0E0C                     l1812:
  2368                           
  2369                           ;ADC.c: 24:             ADCON1bits.VCFG1 = 0;
  2370  0E0C  129F               	bcf	31,5	;volatile
  2371  0E0D                     l1814:
  2372                           
  2373                           ;ADC.c: 25:             ADCON1bits.VCFG0 = 0;
  2374  0E0D  121F               	bcf	31,4	;volatile
  2375                           
  2376                           ;ADC.c: 26:             break;
  2377  0E0E  2E5E               	goto	l152
  2378  0E0F                     l1816:
  2379                           
  2380                           ;ADC.c: 28:             ADCON0bits.CHS = 0;
  2381  0E0F  30C3               	movlw	-61
  2382  0E10  1283               	bcf	3,5	;RP0=0, select bank0
  2383  0E11  1303               	bcf	3,6	;RP1=0, select bank0
  2384  0E12  059F               	andwf	31,f	;volatile
  2385  0E13                     l1818:
  2386                           
  2387                           ;ADC.c: 29:             _delay((unsigned long)((100)*(4000000/4000000.0)));
  2388  0E13  3021               	movlw	33
  2389  0E14  00F3               	movwf	??_config_ADC
  2390  0E15                     u3167:
  2391  0E15  0BF3               	decfsz	??_config_ADC,f
  2392  0E16  2E15               	goto	u3167
  2393  0E17                     l1820:
  2394                           
  2395                           ;ADC.c: 31:             ADCON0bits.ADCS0 = 1;
  2396  0E17  1283               	bcf	3,5	;RP0=0, select bank0
  2397  0E18  1303               	bcf	3,6	;RP1=0, select bank0
  2398  0E19  171F               	bsf	31,6	;volatile
  2399  0E1A                     l1822:
  2400                           
  2401                           ;ADC.c: 32:             ADCON0bits.ADCS1 = 0;
  2402  0E1A  139F               	bcf	31,7	;volatile
  2403  0E1B                     l1824:
  2404                           
  2405                           ;ADC.c: 33:             ADCON0bits.ADON = 1;
  2406  0E1B  141F               	bsf	31,0	;volatile
  2407  0E1C                     l1826:
  2408                           
  2409                           ;ADC.c: 34:             ADCON1bits.ADFM = 0;
  2410  0E1C  1683               	bsf	3,5	;RP0=1, select bank1
  2411  0E1D  1303               	bcf	3,6	;RP1=0, select bank1
  2412  0E1E  139F               	bcf	31,7	;volatile
  2413  0E1F                     l1828:
  2414                           
  2415                           ;ADC.c: 35:             ADCON1bits.VCFG1 = 0;
  2416  0E1F  129F               	bcf	31,5	;volatile
  2417  0E20                     l1830:
  2418                           
  2419                           ;ADC.c: 36:             ADCON1bits.VCFG0 = 0;
  2420  0E20  121F               	bcf	31,4	;volatile
  2421                           
  2422                           ;ADC.c: 37:             break;
  2423  0E21  2E5E               	goto	l152
  2424  0E22                     l1832:
  2425                           
  2426                           ;ADC.c: 39:             ADCON0bits.CHS = 0;
  2427  0E22  30C3               	movlw	-61
  2428  0E23  1283               	bcf	3,5	;RP0=0, select bank0
  2429  0E24  1303               	bcf	3,6	;RP1=0, select bank0
  2430  0E25  059F               	andwf	31,f	;volatile
  2431  0E26                     l1834:
  2432                           
  2433                           ;ADC.c: 40:             _delay((unsigned long)((100)*(4000000/4000000.0)));
  2434  0E26  3021               	movlw	33
  2435  0E27  00F3               	movwf	??_config_ADC
  2436  0E28                     u3177:
  2437  0E28  0BF3               	decfsz	??_config_ADC,f
  2438  0E29  2E28               	goto	u3177
  2439  0E2A                     l1836:
  2440                           
  2441                           ;ADC.c: 42:             ADCON0bits.ADCS0 = 0;
  2442  0E2A  1283               	bcf	3,5	;RP0=0, select bank0
  2443  0E2B  1303               	bcf	3,6	;RP1=0, select bank0
  2444  0E2C  131F               	bcf	31,6	;volatile
  2445  0E2D                     l1838:
  2446                           
  2447                           ;ADC.c: 43:             ADCON0bits.ADCS1 = 1;
  2448  0E2D  179F               	bsf	31,7	;volatile
  2449  0E2E                     l1840:
  2450                           
  2451                           ;ADC.c: 44:             ADCON0bits.ADON = 1;
  2452  0E2E  141F               	bsf	31,0	;volatile
  2453  0E2F                     l1842:
  2454                           
  2455                           ;ADC.c: 45:             ADCON1bits.ADFM = 0;
  2456  0E2F  1683               	bsf	3,5	;RP0=1, select bank1
  2457  0E30  1303               	bcf	3,6	;RP1=0, select bank1
  2458  0E31  139F               	bcf	31,7	;volatile
  2459  0E32                     l1844:
  2460                           
  2461                           ;ADC.c: 46:             ADCON1bits.VCFG1 = 0;
  2462  0E32  129F               	bcf	31,5	;volatile
  2463  0E33                     l1846:
  2464                           
  2465                           ;ADC.c: 47:             ADCON1bits.VCFG0 = 0;
  2466  0E33  121F               	bcf	31,4	;volatile
  2467                           
  2468                           ;ADC.c: 48:             break;
  2469  0E34  2E5E               	goto	l152
  2470  0E35                     l1848:
  2471                           
  2472                           ;ADC.c: 50:             ADCON0bits.CHS = 0;
  2473  0E35  30C3               	movlw	-61
  2474  0E36  1283               	bcf	3,5	;RP0=0, select bank0
  2475  0E37  1303               	bcf	3,6	;RP1=0, select bank0
  2476  0E38  059F               	andwf	31,f	;volatile
  2477  0E39                     l1850:
  2478                           
  2479                           ;ADC.c: 51:             _delay((unsigned long)((100)*(4000000/4000000.0)));
  2480  0E39  3021               	movlw	33
  2481  0E3A  00F3               	movwf	??_config_ADC
  2482  0E3B                     u3187:
  2483  0E3B  0BF3               	decfsz	??_config_ADC,f
  2484  0E3C  2E3B               	goto	u3187
  2485  0E3D                     l1852:
  2486                           
  2487                           ;ADC.c: 53:             ADCON0bits.ADCS0 = 1;
  2488  0E3D  1283               	bcf	3,5	;RP0=0, select bank0
  2489  0E3E  1303               	bcf	3,6	;RP1=0, select bank0
  2490  0E3F  171F               	bsf	31,6	;volatile
  2491  0E40                     l1854:
  2492                           
  2493                           ;ADC.c: 54:             ADCON0bits.ADCS1 = 1;
  2494  0E40  179F               	bsf	31,7	;volatile
  2495  0E41                     l1856:
  2496                           
  2497                           ;ADC.c: 55:             ADCON0bits.ADON = 1;
  2498  0E41  141F               	bsf	31,0	;volatile
  2499  0E42                     l1858:
  2500                           
  2501                           ;ADC.c: 56:             ADCON1bits.ADFM = 0;
  2502  0E42  1683               	bsf	3,5	;RP0=1, select bank1
  2503  0E43  1303               	bcf	3,6	;RP1=0, select bank1
  2504  0E44  139F               	bcf	31,7	;volatile
  2505  0E45                     l1860:
  2506                           
  2507                           ;ADC.c: 57:             ADCON1bits.VCFG1 = 0;
  2508  0E45  129F               	bcf	31,5	;volatile
  2509  0E46                     l1862:
  2510                           
  2511                           ;ADC.c: 58:             ADCON1bits.VCFG0 = 0;
  2512  0E46  121F               	bcf	31,4	;volatile
  2513                           
  2514                           ;ADC.c: 59:             break;
  2515  0E47  2E5E               	goto	l152
  2516  0E48                     l1866:
  2517  0E48  0875               	movf	config_ADC@frec,w
  2518  0E49  00F3               	movwf	??_config_ADC
  2519  0E4A  01F4               	clrf	??_config_ADC+1
  2520                           
  2521                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2522                           ; Switch size 1, requested type "simple"
  2523                           ; Number of cases is 1, Range of values is 0 to 0
  2524                           ; switch strategies available:
  2525                           ; Name         Instructions Cycles
  2526                           ; simple_byte            4     3 (average)
  2527                           ; direct_byte           11     8 (fixed)
  2528                           ; jumptable            260     6 (fixed)
  2529                           ;	Chosen strategy is simple_byte
  2530  0E4B  0874               	movf	??_config_ADC+1,w
  2531  0E4C  3A00               	xorlw	0	; case 0
  2532  0E4D  1903               	skipnz
  2533  0E4E  2E50               	goto	l3018
  2534  0E4F  2E5E               	goto	l152
  2535  0E50                     l3018:
  2536                           
  2537                           ; Switch size 1, requested type "simple"
  2538                           ; Number of cases is 4, Range of values is 0 to 3
  2539                           ; switch strategies available:
  2540                           ; Name         Instructions Cycles
  2541                           ; simple_byte           13     7 (average)
  2542                           ; direct_byte           20     8 (fixed)
  2543                           ; jumptable            260     6 (fixed)
  2544                           ;	Chosen strategy is simple_byte
  2545  0E50  0873               	movf	??_config_ADC,w
  2546  0E51  3A00               	xorlw	0	; case 0
  2547  0E52  1903               	skipnz
  2548  0E53  2DFC               	goto	l1800
  2549  0E54  3A01               	xorlw	1	; case 1
  2550  0E55  1903               	skipnz
  2551  0E56  2E0F               	goto	l1816
  2552  0E57  3A03               	xorlw	3	; case 2
  2553  0E58  1903               	skipnz
  2554  0E59  2E22               	goto	l1832
  2555  0E5A  3A01               	xorlw	1	; case 3
  2556  0E5B  1903               	skipnz
  2557  0E5C  2E35               	goto	l1848
  2558  0E5D  2E5E               	goto	l152
  2559  0E5E                     l152:
  2560  0E5E  0008               	return
  2561  0E5F                     __end_of_config_ADC:
  2562                           
  2563                           	psect	text4
  2564  0B4F                     __ptext4:	
  2565 ;; *************** function _printf *****************
  2566 ;; Defined at:
  2567 ;;		line 13 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\printf.c"
  2568 ;; Parameters:    Size  Location     Type
  2569 ;;  f               1    wreg     PTR const unsigned char 
  2570 ;;		 -> STR_10(38), STR_9(41), STR_8(40), STR_7(2), 
  2571 ;;		 -> STR_6(17), STR_5(2), STR_4(17), 
  2572 ;; Auto vars:     Size  Location     Type
  2573 ;;  f               1   23[BANK0 ] PTR const unsigned char 
  2574 ;;		 -> STR_10(38), STR_9(41), STR_8(40), STR_7(2), 
  2575 ;;		 -> STR_6(17), STR_5(2), STR_4(17), 
  2576 ;;  pb              2   24[BANK0 ] struct __prbuf
  2577 ;;  ap              1   22[BANK0 ] PTR void [1]
  2578 ;;		 -> ?_sprintf(2), ?_printf(2), 
  2579 ;; Return value:  Size  Location     Type
  2580 ;;                  2   24[None  ] int 
  2581 ;; Registers used:
  2582 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2583 ;; Tracked objects:
  2584 ;;		On entry : 0/0
  2585 ;;		On exit  : 0/0
  2586 ;;		Unchanged: 0/0
  2587 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2588 ;;      Params:         0       0       0       0       0
  2589 ;;      Locals:         0       4       0       0       0
  2590 ;;      Temps:          0       2       0       0       0
  2591 ;;      Totals:         0       6       0       0       0
  2592 ;;Total ram usage:        6 bytes
  2593 ;; Hardware stack levels used:    1
  2594 ;; Hardware stack levels required when called:    3
  2595 ;; This function calls:
  2596 ;;		__doprnt
  2597 ;; This function is called by:
  2598 ;;		_main
  2599 ;; This function uses a non-reentrant model
  2600 ;;
  2601                           
  2602                           
  2603                           ;psect for function _printf
  2604  0B4F                     _printf:
  2605                           
  2606                           ;incstack = 0
  2607                           ; Regs used in _printf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2608                           ;printf@f stored from wreg
  2609  0B4F  1283               	bcf	3,5	;RP0=0, select bank0
  2610  0B50  1303               	bcf	3,6	;RP1=0, select bank0
  2611  0B51  00B7               	movwf	printf@f
  2612  0B52                     l2814:
  2613  0B52  01B8               	clrf	printf@pb
  2614  0B53                     l2816:
  2615  0B53  3001               	movlw	(low (fp__putch-fpbase))& (0+255)
  2616  0B54  00B4               	movwf	??_printf
  2617  0B55  0834               	movf	??_printf,w
  2618  0B56  00B9               	movwf	low ((printf@pb| 0+1))
  2619  0B57                     l2818:
  2620  0B57  3070               	movlw	(low (?_printf| 0))& (0+255)
  2621  0B58  00B4               	movwf	??_printf
  2622  0B59  0834               	movf	??_printf,w
  2623  0B5A  00B6               	movwf	printf@ap
  2624  0B5B                     l2820:
  2625                           
  2626                           ;	Return value of _printf is never used
  2627  0B5B  0837               	movf	printf@f,w
  2628  0B5C  00B4               	movwf	??_printf
  2629  0B5D  0834               	movf	??_printf,w
  2630  0B5E  00A9               	movwf	__doprnt@f
  2631  0B5F  3036               	movlw	(low (printf@ap| 0))& (0+255)
  2632  0B60  00B5               	movwf	??_printf+1
  2633  0B61  0835               	movf	??_printf+1,w
  2634  0B62  00AA               	movwf	__doprnt@ap
  2635  0B63  3038               	movlw	(low (printf@pb| 0))& (0+255)
  2636  0B64  120A  118A  2638  120A  158A  	fcall	__doprnt
  2637  0B69                     l751:
  2638  0B69  0008               	return
  2639  0B6A                     __end_of_printf:
  2640                           
  2641                           	psect	text5
  2642  0638                     __ptext5:	
  2643 ;; *************** function __doprnt *****************
  2644 ;; Defined at:
  2645 ;;		line 471 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  2646 ;; Parameters:    Size  Location     Type
  2647 ;;  pb              1    wreg     PTR struct __prbuf
  2648 ;;		 -> sprintf@pb(2), printf@pb(2), 
  2649 ;;  f               1    9[BANK0 ] PTR const unsigned char 
  2650 ;;		 -> STR_10(38), STR_9(41), STR_8(40), STR_7(2), 
  2651 ;;		 -> STR_6(17), STR_5(2), STR_4(17), STR_3(6), 
  2652 ;;		 -> STR_2(8), 
  2653 ;;  ap              1   10[BANK0 ] PTR PTR void 
  2654 ;;		 -> sprintf@ap(1), printf@ap(1), 
  2655 ;; Auto vars:     Size  Location     Type
  2656 ;;  pb              1   19[BANK0 ] PTR struct __prbuf
  2657 ;;		 -> sprintf@pb(2), printf@pb(2), 
  2658 ;;  tmpval          4    0        struct .
  2659 ;;  val             2   16[BANK0 ] unsigned int 
  2660 ;;  cp              2    0        PTR const unsigned char 
  2661 ;;  len             2    0        unsigned int 
  2662 ;;  c               1   18[BANK0 ] unsigned char 
  2663 ;;  prec            1   15[BANK0 ] char 
  2664 ;;  flag            1   14[BANK0 ] unsigned char 
  2665 ;; Return value:  Size  Location     Type
  2666 ;;                  2    9[BANK0 ] int 
  2667 ;; Registers used:
  2668 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2669 ;; Tracked objects:
  2670 ;;		On entry : 0/0
  2671 ;;		On exit  : 0/0
  2672 ;;		Unchanged: 0/0
  2673 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2674 ;;      Params:         0       2       0       0       0
  2675 ;;      Locals:         0       6       0       0       0
  2676 ;;      Temps:          0       3       0       0       0
  2677 ;;      Totals:         0      11       0       0       0
  2678 ;;Total ram usage:       11 bytes
  2679 ;; Hardware stack levels used:    1
  2680 ;; Hardware stack levels required when called:    2
  2681 ;; This function calls:
  2682 ;;		Absolute function
  2683 ;;		___lwdiv
  2684 ;;		___lwmod
  2685 ;;		_putch
  2686 ;; This function is called by:
  2687 ;;		_printf
  2688 ;;		_sprintf
  2689 ;; This function uses a non-reentrant model
  2690 ;;
  2691                           
  2692                           
  2693                           ;psect for function __doprnt
  2694  0638                     __doprnt:
  2695                           
  2696                           ;incstack = 0
  2697                           ; Regs used in __doprnt: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2698                           ;__doprnt@pb stored from wreg
  2699  0638  1283               	bcf	3,5	;RP0=0, select bank0
  2700  0639  1303               	bcf	3,6	;RP1=0, select bank0
  2701  063A  00B3               	movwf	__doprnt@pb
  2702  063B                     l2684:
  2703                           
  2704                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 471: _doprnt(stru
      +                          ct __prbuf * pb, register const char * f, register va_list ap);C:\Program Files\Microchi
      +                          p\xc8\v2.31\pic\sources\c90\common\doprnt.c: 472: {;C:\Program Files\Microchip\xc8\v2.31
      +                          \pic\sources\c90\common\doprnt.c: 512:  char c;;C:\Program Files\Microchip\xc8\v2.31\pic
      +                          \sources\c90\common\doprnt.c: 521:  signed char prec;;C:\Program Files\Microchip\xc8\v2.
      +                          31\pic\sources\c90\common\doprnt.c: 525:  unsigned char flag;;C:\Program Files\Microchip
      +                          \xc8\v2.31\pic\sources\c90\common\doprnt.c: 543:  } tmpval;
  2705  063B  2F57               	goto	l2746
  2706  063C                     l2686:
  2707                           
  2708                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  2709  063C  3025               	movlw	37
  2710  063D  0632               	xorwf	__doprnt@c,w
  2711  063E  1903               	btfsc	3,2
  2712  063F  2E41               	goto	u2651
  2713  0640  2E42               	goto	u2650
  2714  0641                     u2651:
  2715  0641  2E68               	goto	l2696
  2716  0642                     u2650:
  2717  0642                     l2688:
  2718  0642  0A33               	incf	__doprnt@pb,w
  2719  0643  0084               	movwf	4
  2720  0644  1383               	bcf	3,7	;select IRP bank0
  2721  0645  0800               	movf	0,w
  2722  0646  1903               	btfsc	3,2
  2723  0647  2E49               	goto	u2661
  2724  0648  2E4A               	goto	u2660
  2725  0649                     u2661:
  2726  0649  2E59               	goto	l2692
  2727  064A                     u2660:
  2728  064A                     l2690:
  2729  064A  0832               	movf	__doprnt@c,w
  2730  064B  00AB               	movwf	??__doprnt
  2731  064C  082B               	movf	??__doprnt,w
  2732  064D  00F3               	movwf	putch@data
  2733  064E  0A33               	incf	__doprnt@pb,w
  2734  064F  0084               	movwf	4
  2735  0650  0800               	movf	0,w
  2736  0651  120A  118A  2023  120A  118A  	fcall	fptable
  2737  0656  1283               	bcf	3,5	;RP0=0, select bank0
  2738  0657  1303               	bcf	3,6	;RP1=0, select bank0
  2739  0658  2E3B               	goto	l2684
  2740  0659                     l2692:
  2741  0659  0832               	movf	__doprnt@c,w
  2742  065A  00AB               	movwf	??__doprnt
  2743  065B  0833               	movf	__doprnt@pb,w
  2744  065C  0084               	movwf	4
  2745  065D  0800               	movf	0,w
  2746  065E  0084               	movwf	4
  2747  065F  082B               	movf	??__doprnt,w
  2748  0660  0080               	movwf	0
  2749  0661                     l2694:
  2750  0661  3001               	movlw	1
  2751  0662  00AB               	movwf	??__doprnt
  2752  0663  0833               	movf	__doprnt@pb,w
  2753  0664  0084               	movwf	4
  2754  0665  082B               	movf	??__doprnt,w
  2755  0666  0780               	addwf	0,f
  2756  0667  2E3B               	goto	l2684
  2757  0668                     l2696:
  2758                           
  2759                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  2760  0668  01AE               	clrf	__doprnt@flag
  2761  0669                     l2700:	
  2762                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 661:   switch(c =
      +                           *f++) {
  2763                           
  2764  0669  3001               	movlw	1
  2765  066A  07A9               	addwf	__doprnt@f,f
  2766  066B  30FF               	movlw	-1
  2767  066C  0729               	addwf	__doprnt@f,w
  2768  066D  0084               	movwf	4
  2769  066E  120A  158A  200A  120A  118A  	fcall	stringdir
  2770  0673  00B2               	movwf	__doprnt@c
  2771  0674  00AB               	movwf	??__doprnt
  2772  0675  01AC               	clrf	??__doprnt+1
  2773                           
  2774                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2775                           ; Switch size 1, requested type "simple"
  2776                           ; Number of cases is 1, Range of values is 0 to 0
  2777                           ; switch strategies available:
  2778                           ; Name         Instructions Cycles
  2779                           ; simple_byte            4     3 (average)
  2780                           ; direct_byte           11     8 (fixed)
  2781                           ; jumptable            260     6 (fixed)
  2782                           ;	Chosen strategy is simple_byte
  2783  0676  082C               	movf	??__doprnt+1,w
  2784  0677  3A00               	xorlw	0	; case 0
  2785  0678  1903               	skipnz
  2786  0679  2E7B               	goto	l3020
  2787  067A  2F57               	goto	l2746
  2788  067B                     l3020:
  2789                           
  2790                           ; Switch size 1, requested type "simple"
  2791                           ; Number of cases is 3, Range of values is 0 to 105
  2792                           ; switch strategies available:
  2793                           ; Name         Instructions Cycles
  2794                           ; simple_byte           10     6 (average)
  2795                           ; jumptable            260     6 (fixed)
  2796                           ;	Chosen strategy is simple_byte
  2797  067B  082B               	movf	??__doprnt,w
  2798  067C  3A00               	xorlw	0	; case 0
  2799  067D  1903               	skipnz
  2800  067E  2F6B               	goto	l2748
  2801  067F  3A64               	xorlw	100	; case 100
  2802  0680  1903               	skipnz
  2803  0681  2E86               	goto	l2702
  2804  0682  3A0D               	xorlw	13	; case 105
  2805  0683  1903               	skipnz
  2806  0684  2E86               	goto	l2702
  2807  0685  2F57               	goto	l2746
  2808  0686                     l2702:
  2809                           
  2810                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1279:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned
      +                           int)(*(int *)__va_arg((*(int **)ap), (int)0));
  2811  0686  082A               	movf	__doprnt@ap,w
  2812  0687  0084               	movwf	4
  2813  0688  1383               	bcf	3,7	;select IRP bank0
  2814  0689  0800               	movf	0,w
  2815  068A  00AB               	movwf	??__doprnt
  2816  068B  3002               	movlw	2
  2817  068C  0780               	addwf	0,f
  2818  068D  082B               	movf	??__doprnt,w
  2819  068E  0084               	movwf	4
  2820  068F  0800               	movf	0,w
  2821  0690  00B0               	movwf	__doprnt@val
  2822  0691  0A84               	incf	4,f
  2823  0692  0800               	movf	0,w
  2824  0693  00B1               	movwf	__doprnt@val+1
  2825  0694                     l2704:
  2826                           
  2827                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1287:    if((int)
      +                          val < 0) {
  2828  0694  1FB1               	btfss	__doprnt@val+1,7
  2829  0695  2E97               	goto	u2671
  2830  0696  2E98               	goto	u2670
  2831  0697                     u2671:
  2832  0697  2EA1               	goto	l2710
  2833  0698                     u2670:
  2834  0698                     l2706:
  2835                           
  2836                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1288:     flag |=
      +                           0x03;
  2837  0698  3003               	movlw	3
  2838  0699  00AB               	movwf	??__doprnt
  2839  069A  082B               	movf	??__doprnt,w
  2840  069B  04AE               	iorwf	__doprnt@flag,f
  2841  069C                     l2708:
  2842                           
  2843                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1289:     val = -
      +                          val;
  2844  069C  09B0               	comf	__doprnt@val,f
  2845  069D  09B1               	comf	__doprnt@val+1,f
  2846  069E  0AB0               	incf	__doprnt@val,f
  2847  069F  1903               	skipnz
  2848  06A0  0AB1               	incf	__doprnt@val+1,f
  2849  06A1                     l2710:
  2850                           
  2851                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1292:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1331:    for(c = 1 ; c !=
      +                           sizeof dpowers/sizeof dpowers[0] ; c++)
  2852  06A1  01B2               	clrf	__doprnt@c
  2853  06A2  0AB2               	incf	__doprnt@c,f
  2854  06A3                     l2716:
  2855                           
  2856                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  2857  06A3  0832               	movf	__doprnt@c,w
  2858  06A4  00AB               	movwf	??__doprnt
  2859  06A5  072B               	addwf	??__doprnt,w
  2860  06A6  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2861  06A7  0084               	movwf	4
  2862  06A8  120A  158A  200A  120A  118A  	fcall	stringdir
  2863  06AD  00AC               	movwf	??__doprnt+1
  2864  06AE  120A  158A  200A  120A  118A  	fcall	stringdir
  2865  06B3  00AD               	movwf	??__doprnt+2
  2866  06B4  082D               	movf	??__doprnt+2,w
  2867  06B5  0231               	subwf	__doprnt@val+1,w
  2868  06B6  1D03               	skipz
  2869  06B7  2EBA               	goto	u2685
  2870  06B8  082C               	movf	??__doprnt+1,w
  2871  06B9  0230               	subwf	__doprnt@val,w
  2872  06BA                     u2685:
  2873  06BA  1803               	skipnc
  2874  06BB  2EBD               	goto	u2681
  2875  06BC  2EBE               	goto	u2680
  2876  06BD                     u2681:
  2877  06BD  2EBF               	goto	l2720
  2878  06BE                     u2680:
  2879  06BE  2EC9               	goto	l2722
  2880  06BF                     l2720:
  2881  06BF  3001               	movlw	1
  2882  06C0  00AB               	movwf	??__doprnt
  2883  06C1  082B               	movf	??__doprnt,w
  2884  06C2  07B2               	addwf	__doprnt@c,f
  2885  06C3  3005               	movlw	5
  2886  06C4  0632               	xorwf	__doprnt@c,w
  2887  06C5  1D03               	btfss	3,2
  2888  06C6  2EC8               	goto	u2691
  2889  06C7  2EC9               	goto	u2690
  2890  06C8                     u2691:
  2891  06C8  2EA3               	goto	l2716
  2892  06C9                     u2690:
  2893  06C9                     l2722:
  2894                           
  2895                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1464:    if(flag & 0x03)
  2896  06C9  082E               	movf	__doprnt@flag,w
  2897  06CA  3903               	andlw	3
  2898  06CB  1903               	btfsc	3,2
  2899  06CC  2ECE               	goto	u2701
  2900  06CD  2ECF               	goto	u2700
  2901  06CE                     u2701:
  2902  06CE  2EF2               	goto	l2732
  2903  06CF                     u2700:
  2904  06CF                     l2724:
  2905  06CF  0A33               	incf	__doprnt@pb,w
  2906  06D0  0084               	movwf	4
  2907  06D1  1383               	bcf	3,7	;select IRP bank0
  2908  06D2  0800               	movf	0,w
  2909  06D3  1903               	btfsc	3,2
  2910  06D4  2ED6               	goto	u2711
  2911  06D5  2ED7               	goto	u2710
  2912  06D6                     u2711:
  2913  06D6  2EE4               	goto	l2728
  2914  06D7                     u2710:
  2915  06D7                     l2726:
  2916  06D7  302D               	movlw	45
  2917  06D8  00AB               	movwf	??__doprnt
  2918  06D9  082B               	movf	??__doprnt,w
  2919  06DA  00F3               	movwf	putch@data
  2920  06DB  0A33               	incf	__doprnt@pb,w
  2921  06DC  0084               	movwf	4
  2922  06DD  0800               	movf	0,w
  2923  06DE  120A  118A  2023  120A  118A  	fcall	fptable
  2924  06E3  2EF2               	goto	l2732
  2925  06E4                     l2728:
  2926  06E4  302D               	movlw	45
  2927  06E5  00AB               	movwf	??__doprnt
  2928  06E6  0833               	movf	__doprnt@pb,w
  2929  06E7  0084               	movwf	4
  2930  06E8  0800               	movf	0,w
  2931  06E9  0084               	movwf	4
  2932  06EA  082B               	movf	??__doprnt,w
  2933  06EB  0080               	movwf	0
  2934  06EC                     l2730:
  2935  06EC  3001               	movlw	1
  2936  06ED  00AB               	movwf	??__doprnt
  2937  06EE  0833               	movf	__doprnt@pb,w
  2938  06EF  0084               	movwf	4
  2939  06F0  082B               	movf	??__doprnt,w
  2940  06F1  0780               	addwf	0,f
  2941  06F2                     l2732:
  2942                           
  2943                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1495:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
  2944  06F2  1283               	bcf	3,5	;RP0=0, select bank0
  2945  06F3  1303               	bcf	3,6	;RP1=0, select bank0
  2946  06F4  0832               	movf	__doprnt@c,w
  2947  06F5  00AB               	movwf	??__doprnt
  2948  06F6  082B               	movf	??__doprnt,w
  2949  06F7  00AF               	movwf	__doprnt@prec
  2950                           
  2951                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  2952  06F8  2F4C               	goto	l2744
  2953  06F9                     l2734:
  2954                           
  2955                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned char)prec]) % 10 + '0';
  2956  06F9  300A               	movlw	10
  2957  06FA  00A3               	movwf	___lwmod@divisor
  2958  06FB  3000               	movlw	0
  2959  06FC  00A4               	movwf	___lwmod@divisor+1
  2960  06FD  082F               	movf	__doprnt@prec,w
  2961  06FE  00AB               	movwf	??__doprnt
  2962  06FF  072B               	addwf	??__doprnt,w
  2963  0700  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2964  0701  0084               	movwf	4
  2965  0702  120A  158A  200A  120A  118A  	fcall	stringdir
  2966  0707  00F3               	movwf	___lwdiv@divisor
  2967  0708  120A  158A  200A  120A  118A  	fcall	stringdir
  2968  070D  00F4               	movwf	___lwdiv@divisor+1
  2969  070E  0831               	movf	__doprnt@val+1,w
  2970  070F  00F6               	movwf	___lwdiv@dividend+1
  2971  0710  0830               	movf	__doprnt@val,w
  2972  0711  00F5               	movwf	___lwdiv@dividend
  2973  0712  120A  158A  24B3  120A  118A  	fcall	___lwdiv
  2974  0717  0874               	movf	?___lwdiv+1,w
  2975  0718  1283               	bcf	3,5	;RP0=0, select bank0
  2976  0719  1303               	bcf	3,6	;RP1=0, select bank0
  2977  071A  00A6               	movwf	___lwmod@dividend+1
  2978  071B  0873               	movf	?___lwdiv,w
  2979  071C  00A5               	movwf	___lwmod@dividend
  2980  071D  120A  158A  2437  120A  118A  	fcall	___lwmod
  2981  0722  1283               	bcf	3,5	;RP0=0, select bank0
  2982  0723  1303               	bcf	3,6	;RP1=0, select bank0
  2983  0724  0823               	movf	?___lwmod,w
  2984  0725  3E30               	addlw	48
  2985  0726  00AC               	movwf	??__doprnt+1
  2986  0727  082C               	movf	??__doprnt+1,w
  2987  0728  00B2               	movwf	__doprnt@c
  2988  0729                     l2736:
  2989  0729  0A33               	incf	__doprnt@pb,w
  2990  072A  0084               	movwf	4
  2991  072B  1383               	bcf	3,7	;select IRP bank0
  2992  072C  0800               	movf	0,w
  2993  072D  1903               	btfsc	3,2
  2994  072E  2F30               	goto	u2721
  2995  072F  2F31               	goto	u2720
  2996  0730                     u2721:
  2997  0730  2F3E               	goto	l2740
  2998  0731                     u2720:
  2999  0731                     l2738:
  3000  0731  0832               	movf	__doprnt@c,w
  3001  0732  00AB               	movwf	??__doprnt
  3002  0733  082B               	movf	??__doprnt,w
  3003  0734  00F3               	movwf	putch@data
  3004  0735  0A33               	incf	__doprnt@pb,w
  3005  0736  0084               	movwf	4
  3006  0737  0800               	movf	0,w
  3007  0738  120A  118A  2023  120A  118A  	fcall	fptable
  3008  073D  2F4C               	goto	l2744
  3009  073E                     l2740:
  3010  073E  0832               	movf	__doprnt@c,w
  3011  073F  00AB               	movwf	??__doprnt
  3012  0740  0833               	movf	__doprnt@pb,w
  3013  0741  0084               	movwf	4
  3014  0742  0800               	movf	0,w
  3015  0743  0084               	movwf	4
  3016  0744  082B               	movf	??__doprnt,w
  3017  0745  0080               	movwf	0
  3018  0746                     l2742:
  3019  0746  3001               	movlw	1
  3020  0747  00AB               	movwf	??__doprnt
  3021  0748  0833               	movf	__doprnt@pb,w
  3022  0749  0084               	movwf	4
  3023  074A  082B               	movf	??__doprnt,w
  3024  074B  0780               	addwf	0,f
  3025  074C                     l2744:
  3026                           
  3027                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  3028  074C  30FF               	movlw	255
  3029  074D  1283               	bcf	3,5	;RP0=0, select bank0
  3030  074E  1303               	bcf	3,6	;RP1=0, select bank0
  3031  074F  00AB               	movwf	??__doprnt
  3032  0750  082B               	movf	??__doprnt,w
  3033  0751  07AF               	addwf	__doprnt@prec,f
  3034  0752  0A2F               	incf	__doprnt@prec,w
  3035  0753  1D03               	btfss	3,2
  3036  0754  2F56               	goto	u2731
  3037  0755  2F57               	goto	u2730
  3038  0756                     u2731:
  3039  0756  2EF9               	goto	l2734
  3040  0757                     u2730:
  3041  0757                     l2746:
  3042                           
  3043                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  3044  0757  3001               	movlw	1
  3045  0758  1283               	bcf	3,5	;RP0=0, select bank0
  3046  0759  1303               	bcf	3,6	;RP1=0, select bank0
  3047  075A  07A9               	addwf	__doprnt@f,f
  3048  075B  30FF               	movlw	-1
  3049  075C  0729               	addwf	__doprnt@f,w
  3050  075D  0084               	movwf	4
  3051  075E  120A  158A  200A  120A  118A  	fcall	stringdir
  3052  0763  00AB               	movwf	??__doprnt
  3053  0764  082B               	movf	??__doprnt,w
  3054  0765  00B2               	movwf	__doprnt@c
  3055  0766  0832               	movf	__doprnt@c,w
  3056  0767  1D03               	btfss	3,2
  3057  0768  2F6A               	goto	u2741
  3058  0769  2F6B               	goto	u2740
  3059  076A                     u2741:
  3060  076A  2E3C               	goto	l2686
  3061  076B                     u2740:
  3062  076B                     l2748:
  3063                           
  3064                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1566:  return 0;
  3065  076B  01A9               	clrf	?__doprnt
  3066  076C  01AA               	clrf	?__doprnt+1
  3067  076D                     l789:
  3068  076D  0008               	return
  3069  076E                     __end_of__doprnt:
  3070                           
  3071                           	psect	text6
  3072  0B2C                     __ptext6:	
  3073 ;; *************** function _putch *****************
  3074 ;; Defined at:
  3075 ;;		line 199 in file "D2_main2.c"
  3076 ;; Parameters:    Size  Location     Type
  3077 ;;  data            1    3[COMMON] unsigned char 
  3078 ;; Auto vars:     Size  Location     Type
  3079 ;;		None
  3080 ;; Return value:  Size  Location     Type
  3081 ;;                  1    wreg      void 
  3082 ;; Registers used:
  3083 ;;		wreg
  3084 ;; Tracked objects:
  3085 ;;		On entry : 0/0
  3086 ;;		On exit  : 0/0
  3087 ;;		Unchanged: 0/0
  3088 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3089 ;;      Params:         1       0       0       0       0
  3090 ;;      Locals:         0       0       0       0       0
  3091 ;;      Temps:          0       0       0       0       0
  3092 ;;      Totals:         1       0       0       0       0
  3093 ;;Total ram usage:        1 bytes
  3094 ;; Hardware stack levels used:    1
  3095 ;; Hardware stack levels required when called:    1
  3096 ;; This function calls:
  3097 ;;		Nothing
  3098 ;; This function is called by:
  3099 ;;		_printf
  3100 ;;		__doprnt
  3101 ;; This function uses a non-reentrant model
  3102 ;;
  3103                           
  3104                           
  3105                           ;psect for function _putch
  3106  0B2C                     _putch:
  3107  0B2C                     l1730:	
  3108                           ;incstack = 0
  3109                           ; Regs used in _putch: [wreg]
  3110                           
  3111  0B2C                     l125:	
  3112                           ;D2_main2.c: 200:     while(TXIF == 0);
  3113                           
  3114  0B2C  1283               	bcf	3,5	;RP0=0, select bank0
  3115  0B2D  1303               	bcf	3,6	;RP1=0, select bank0
  3116  0B2E  1E0C               	btfss	12,4	;volatile
  3117  0B2F  2B31               	goto	u1201
  3118  0B30  2B32               	goto	u1200
  3119  0B31                     u1201:
  3120  0B31  2B2C               	goto	l125
  3121  0B32                     u1200:
  3122  0B32                     l1732:
  3123                           
  3124                           ;D2_main2.c: 201:     TXREG = data;
  3125  0B32  0873               	movf	putch@data,w
  3126  0B33  0099               	movwf	25	;volatile
  3127  0B34                     l128:
  3128  0B34  0008               	return
  3129  0B35                     __end_of_putch:
  3130                           
  3131                           	psect	text7
  3132  0C37                     __ptext7:	
  3133 ;; *************** function ___lwmod *****************
  3134 ;; Defined at:
  3135 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwmod.c"
  3136 ;; Parameters:    Size  Location     Type
  3137 ;;  divisor         2    3[BANK0 ] unsigned int 
  3138 ;;  dividend        2    5[BANK0 ] unsigned int 
  3139 ;; Auto vars:     Size  Location     Type
  3140 ;;  counter         1    8[BANK0 ] unsigned char 
  3141 ;; Return value:  Size  Location     Type
  3142 ;;                  2    3[BANK0 ] unsigned int 
  3143 ;; Registers used:
  3144 ;;		wreg, status,2, status,0
  3145 ;; Tracked objects:
  3146 ;;		On entry : 0/0
  3147 ;;		On exit  : 0/0
  3148 ;;		Unchanged: 0/0
  3149 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3150 ;;      Params:         0       4       0       0       0
  3151 ;;      Locals:         0       1       0       0       0
  3152 ;;      Temps:          0       1       0       0       0
  3153 ;;      Totals:         0       6       0       0       0
  3154 ;;Total ram usage:        6 bytes
  3155 ;; Hardware stack levels used:    1
  3156 ;; Hardware stack levels required when called:    1
  3157 ;; This function calls:
  3158 ;;		Nothing
  3159 ;; This function is called by:
  3160 ;;		__doprnt
  3161 ;; This function uses a non-reentrant model
  3162 ;;
  3163                           
  3164                           
  3165                           ;psect for function ___lwmod
  3166  0C37                     ___lwmod:
  3167  0C37                     l1764:	
  3168                           ;incstack = 0
  3169                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  3170                           
  3171  0C37  1283               	bcf	3,5	;RP0=0, select bank0
  3172  0C38  1303               	bcf	3,6	;RP1=0, select bank0
  3173  0C39  0823               	movf	___lwmod@divisor,w
  3174  0C3A  0424               	iorwf	___lwmod@divisor+1,w
  3175  0C3B  1903               	btfsc	3,2
  3176  0C3C  2C3E               	goto	u1281
  3177  0C3D  2C3F               	goto	u1280
  3178  0C3E                     u1281:
  3179  0C3E  2C6E               	goto	l1782
  3180  0C3F                     u1280:
  3181  0C3F                     l1766:
  3182  0C3F  01A8               	clrf	___lwmod@counter
  3183  0C40  0AA8               	incf	___lwmod@counter,f
  3184  0C41  2C4D               	goto	l1772
  3185  0C42                     l1768:
  3186  0C42  3001               	movlw	1
  3187  0C43                     u1295:
  3188  0C43  1003               	clrc
  3189  0C44  0DA3               	rlf	___lwmod@divisor,f
  3190  0C45  0DA4               	rlf	___lwmod@divisor+1,f
  3191  0C46  3EFF               	addlw	-1
  3192  0C47  1D03               	skipz
  3193  0C48  2C43               	goto	u1295
  3194  0C49                     l1770:
  3195  0C49  3001               	movlw	1
  3196  0C4A  00A7               	movwf	??___lwmod
  3197  0C4B  0827               	movf	??___lwmod,w
  3198  0C4C  07A8               	addwf	___lwmod@counter,f
  3199  0C4D                     l1772:
  3200  0C4D  1FA4               	btfss	___lwmod@divisor+1,7
  3201  0C4E  2C50               	goto	u1301
  3202  0C4F  2C51               	goto	u1300
  3203  0C50                     u1301:
  3204  0C50  2C42               	goto	l1768
  3205  0C51                     u1300:
  3206  0C51                     l1774:
  3207  0C51  0824               	movf	___lwmod@divisor+1,w
  3208  0C52  0226               	subwf	___lwmod@dividend+1,w
  3209  0C53  1D03               	skipz
  3210  0C54  2C57               	goto	u1315
  3211  0C55  0823               	movf	___lwmod@divisor,w
  3212  0C56  0225               	subwf	___lwmod@dividend,w
  3213  0C57                     u1315:
  3214  0C57  1C03               	skipc
  3215  0C58  2C5A               	goto	u1311
  3216  0C59  2C5B               	goto	u1310
  3217  0C5A                     u1311:
  3218  0C5A  2C61               	goto	l1778
  3219  0C5B                     u1310:
  3220  0C5B                     l1776:
  3221  0C5B  0823               	movf	___lwmod@divisor,w
  3222  0C5C  02A5               	subwf	___lwmod@dividend,f
  3223  0C5D  0824               	movf	___lwmod@divisor+1,w
  3224  0C5E  1C03               	skipc
  3225  0C5F  03A6               	decf	___lwmod@dividend+1,f
  3226  0C60  02A6               	subwf	___lwmod@dividend+1,f
  3227  0C61                     l1778:
  3228  0C61  3001               	movlw	1
  3229  0C62                     u1325:
  3230  0C62  1003               	clrc
  3231  0C63  0CA4               	rrf	___lwmod@divisor+1,f
  3232  0C64  0CA3               	rrf	___lwmod@divisor,f
  3233  0C65  3EFF               	addlw	-1
  3234  0C66  1D03               	skipz
  3235  0C67  2C62               	goto	u1325
  3236  0C68                     l1780:
  3237  0C68  3001               	movlw	1
  3238  0C69  02A8               	subwf	___lwmod@counter,f
  3239  0C6A  1D03               	btfss	3,2
  3240  0C6B  2C6D               	goto	u1331
  3241  0C6C  2C6E               	goto	u1330
  3242  0C6D                     u1331:
  3243  0C6D  2C51               	goto	l1774
  3244  0C6E                     u1330:
  3245  0C6E                     l1782:
  3246  0C6E  0826               	movf	___lwmod@dividend+1,w
  3247  0C6F  00A4               	movwf	?___lwmod+1
  3248  0C70  0825               	movf	___lwmod@dividend,w
  3249  0C71  00A3               	movwf	?___lwmod
  3250  0C72                     l576:
  3251  0C72  0008               	return
  3252  0C73                     __end_of___lwmod:
  3253                           
  3254                           	psect	text8
  3255  0CB3                     __ptext8:	
  3256 ;; *************** function ___lwdiv *****************
  3257 ;; Defined at:
  3258 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwdiv.c"
  3259 ;; Parameters:    Size  Location     Type
  3260 ;;  divisor         2    3[COMMON] unsigned int 
  3261 ;;  dividend        2    5[COMMON] unsigned int 
  3262 ;; Auto vars:     Size  Location     Type
  3263 ;;  quotient        2    1[BANK0 ] unsigned int 
  3264 ;;  counter         1    0[BANK0 ] unsigned char 
  3265 ;; Return value:  Size  Location     Type
  3266 ;;                  2    3[COMMON] unsigned int 
  3267 ;; Registers used:
  3268 ;;		wreg, status,2, status,0
  3269 ;; Tracked objects:
  3270 ;;		On entry : 0/0
  3271 ;;		On exit  : 0/0
  3272 ;;		Unchanged: 0/0
  3273 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3274 ;;      Params:         4       0       0       0       0
  3275 ;;      Locals:         0       3       0       0       0
  3276 ;;      Temps:          1       0       0       0       0
  3277 ;;      Totals:         5       3       0       0       0
  3278 ;;Total ram usage:        8 bytes
  3279 ;; Hardware stack levels used:    1
  3280 ;; Hardware stack levels required when called:    1
  3281 ;; This function calls:
  3282 ;;		Nothing
  3283 ;; This function is called by:
  3284 ;;		__doprnt
  3285 ;; This function uses a non-reentrant model
  3286 ;;
  3287                           
  3288                           
  3289                           ;psect for function ___lwdiv
  3290  0CB3                     ___lwdiv:
  3291  0CB3                     l2576:	
  3292                           ;incstack = 0
  3293                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  3294                           
  3295  0CB3  1283               	bcf	3,5	;RP0=0, select bank0
  3296  0CB4  1303               	bcf	3,6	;RP1=0, select bank0
  3297  0CB5  01A1               	clrf	___lwdiv@quotient
  3298  0CB6  01A2               	clrf	___lwdiv@quotient+1
  3299  0CB7                     l2578:
  3300  0CB7  0873               	movf	___lwdiv@divisor,w
  3301  0CB8  0474               	iorwf	___lwdiv@divisor+1,w
  3302  0CB9  1903               	btfsc	3,2
  3303  0CBA  2CBC               	goto	u2391
  3304  0CBB  2CBD               	goto	u2390
  3305  0CBC                     u2391:
  3306  0CBC  2CF4               	goto	l2598
  3307  0CBD                     u2390:
  3308  0CBD                     l2580:
  3309  0CBD  01A0               	clrf	___lwdiv@counter
  3310  0CBE  0AA0               	incf	___lwdiv@counter,f
  3311  0CBF  2CCB               	goto	l2586
  3312  0CC0                     l2582:
  3313  0CC0  3001               	movlw	1
  3314  0CC1                     u2405:
  3315  0CC1  1003               	clrc
  3316  0CC2  0DF3               	rlf	___lwdiv@divisor,f
  3317  0CC3  0DF4               	rlf	___lwdiv@divisor+1,f
  3318  0CC4  3EFF               	addlw	-1
  3319  0CC5  1D03               	skipz
  3320  0CC6  2CC1               	goto	u2405
  3321  0CC7                     l2584:
  3322  0CC7  3001               	movlw	1
  3323  0CC8  00F7               	movwf	??___lwdiv
  3324  0CC9  0877               	movf	??___lwdiv,w
  3325  0CCA  07A0               	addwf	___lwdiv@counter,f
  3326  0CCB                     l2586:
  3327  0CCB  1FF4               	btfss	___lwdiv@divisor+1,7
  3328  0CCC  2CCE               	goto	u2411
  3329  0CCD  2CCF               	goto	u2410
  3330  0CCE                     u2411:
  3331  0CCE  2CC0               	goto	l2582
  3332  0CCF                     u2410:
  3333  0CCF                     l2588:
  3334  0CCF  3001               	movlw	1
  3335  0CD0                     u2425:
  3336  0CD0  1003               	clrc
  3337  0CD1  0DA1               	rlf	___lwdiv@quotient,f
  3338  0CD2  0DA2               	rlf	___lwdiv@quotient+1,f
  3339  0CD3  3EFF               	addlw	-1
  3340  0CD4  1D03               	skipz
  3341  0CD5  2CD0               	goto	u2425
  3342  0CD6  0874               	movf	___lwdiv@divisor+1,w
  3343  0CD7  0276               	subwf	___lwdiv@dividend+1,w
  3344  0CD8  1D03               	skipz
  3345  0CD9  2CDC               	goto	u2435
  3346  0CDA  0873               	movf	___lwdiv@divisor,w
  3347  0CDB  0275               	subwf	___lwdiv@dividend,w
  3348  0CDC                     u2435:
  3349  0CDC  1C03               	skipc
  3350  0CDD  2CDF               	goto	u2431
  3351  0CDE  2CE0               	goto	u2430
  3352  0CDF                     u2431:
  3353  0CDF  2CE7               	goto	l2594
  3354  0CE0                     u2430:
  3355  0CE0                     l2590:
  3356  0CE0  0873               	movf	___lwdiv@divisor,w
  3357  0CE1  02F5               	subwf	___lwdiv@dividend,f
  3358  0CE2  0874               	movf	___lwdiv@divisor+1,w
  3359  0CE3  1C03               	skipc
  3360  0CE4  03F6               	decf	___lwdiv@dividend+1,f
  3361  0CE5  02F6               	subwf	___lwdiv@dividend+1,f
  3362  0CE6                     l2592:
  3363  0CE6  1421               	bsf	___lwdiv@quotient,0
  3364  0CE7                     l2594:
  3365  0CE7  3001               	movlw	1
  3366  0CE8                     u2445:
  3367  0CE8  1003               	clrc
  3368  0CE9  0CF4               	rrf	___lwdiv@divisor+1,f
  3369  0CEA  0CF3               	rrf	___lwdiv@divisor,f
  3370  0CEB  3EFF               	addlw	-1
  3371  0CEC  1D03               	skipz
  3372  0CED  2CE8               	goto	u2445
  3373  0CEE                     l2596:
  3374  0CEE  3001               	movlw	1
  3375  0CEF  02A0               	subwf	___lwdiv@counter,f
  3376  0CF0  1D03               	btfss	3,2
  3377  0CF1  2CF3               	goto	u2451
  3378  0CF2  2CF4               	goto	u2450
  3379  0CF3                     u2451:
  3380  0CF3  2CCF               	goto	l2588
  3381  0CF4                     u2450:
  3382  0CF4                     l2598:
  3383  0CF4  0822               	movf	___lwdiv@quotient+1,w
  3384  0CF5  00F4               	movwf	?___lwdiv+1
  3385  0CF6  0821               	movf	___lwdiv@quotient,w
  3386  0CF7  00F3               	movwf	?___lwdiv
  3387  0CF8                     l566:
  3388  0CF8  0008               	return
  3389  0CF9                     __end_of___lwdiv:
  3390                           
  3391                           	psect	text9
  3392  076E                     __ptext9:	
  3393 ;; *************** function _division *****************
  3394 ;; Defined at:
  3395 ;;		line 205 in file "D2_main2.c"
  3396 ;; Parameters:    Size  Location     Type
  3397 ;;  valor           1    wreg     unsigned char 
  3398 ;; Auto vars:     Size  Location     Type
  3399 ;;  valor           1    7[BANK0 ] unsigned char 
  3400 ;; Return value:  Size  Location     Type
  3401 ;;                  1    wreg      unsigned char 
  3402 ;; Registers used:
  3403 ;;		wreg, status,2, status,0, pclath, cstack
  3404 ;; Tracked objects:
  3405 ;;		On entry : 0/0
  3406 ;;		On exit  : 0/0
  3407 ;;		Unchanged: 0/0
  3408 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3409 ;;      Params:         0       0       0       0       0
  3410 ;;      Locals:         0       1       0       0       0
  3411 ;;      Temps:          0       3       0       0       0
  3412 ;;      Totals:         0       4       0       0       0
  3413 ;;Total ram usage:        4 bytes
  3414 ;; Hardware stack levels used:    1
  3415 ;; Hardware stack levels required when called:    2
  3416 ;; This function calls:
  3417 ;;		___awdiv
  3418 ;;		___awmod
  3419 ;; This function is called by:
  3420 ;;		_main
  3421 ;;		_voltajes
  3422 ;; This function uses a non-reentrant model
  3423 ;;
  3424                           
  3425                           
  3426                           ;psect for function _division
  3427  076E                     _division:
  3428                           
  3429                           ;incstack = 0
  3430                           ; Regs used in _division: [wreg+status,2+status,0+pclath+cstack]
  3431                           ;division@valor stored from wreg
  3432  076E  1283               	bcf	3,5	;RP0=0, select bank0
  3433  076F  1303               	bcf	3,6	;RP1=0, select bank0
  3434  0770  00A7               	movwf	division@valor
  3435  0771                     l2806:
  3436                           
  3437                           ;D2_main2.c: 206:     hundreds = valor/100;
  3438  0771  3064               	movlw	100
  3439  0772  00F3               	movwf	___awdiv@divisor
  3440  0773  3000               	movlw	0
  3441  0774  00F4               	movwf	___awdiv@divisor+1
  3442  0775  0827               	movf	division@valor,w
  3443  0776  00A4               	movwf	??_division
  3444  0777  01A5               	clrf	??_division+1
  3445  0778  0824               	movf	??_division,w
  3446  0779  00F5               	movwf	___awdiv@dividend
  3447  077A  0825               	movf	??_division+1,w
  3448  077B  00F6               	movwf	___awdiv@dividend+1
  3449  077C  120A  158A  265F  120A  118A  	fcall	___awdiv
  3450  0781  0873               	movf	?___awdiv,w
  3451  0782  1283               	bcf	3,5	;RP0=0, select bank0
  3452  0783  1303               	bcf	3,6	;RP1=0, select bank0
  3453  0784  00A6               	movwf	??_division+2
  3454  0785  0826               	movf	??_division+2,w
  3455  0786  1683               	bsf	3,5	;RP0=1, select bank1
  3456  0787  1303               	bcf	3,6	;RP1=0, select bank1
  3457  0788  00CE               	movwf	_hundreds^(0+128)
  3458                           
  3459                           ;D2_main2.c: 207:     residuo = valor%100;
  3460  0789  3064               	movlw	100
  3461  078A  00F3               	movwf	___awmod@divisor
  3462  078B  3000               	movlw	0
  3463  078C  00F4               	movwf	___awmod@divisor+1
  3464  078D  1283               	bcf	3,5	;RP0=0, select bank0
  3465  078E  1303               	bcf	3,6	;RP1=0, select bank0
  3466  078F  0827               	movf	division@valor,w
  3467  0790  00A4               	movwf	??_division
  3468  0791  01A5               	clrf	??_division+1
  3469  0792  0824               	movf	??_division,w
  3470  0793  00F5               	movwf	___awmod@dividend
  3471  0794  0825               	movf	??_division+1,w
  3472  0795  00F6               	movwf	___awmod@dividend+1
  3473  0796  120A  158A  259F  120A  118A  	fcall	___awmod
  3474  079B  0873               	movf	?___awmod,w
  3475  079C  1283               	bcf	3,5	;RP0=0, select bank0
  3476  079D  1303               	bcf	3,6	;RP1=0, select bank0
  3477  079E  00A6               	movwf	??_division+2
  3478  079F  0826               	movf	??_division+2,w
  3479  07A0  00F8               	movwf	_residuo
  3480                           
  3481                           ;D2_main2.c: 208:     tens = residuo/10;
  3482  07A1  300A               	movlw	10
  3483  07A2  00F3               	movwf	___awdiv@divisor
  3484  07A3  3000               	movlw	0
  3485  07A4  00F4               	movwf	___awdiv@divisor+1
  3486  07A5  0878               	movf	_residuo,w
  3487  07A6  00A4               	movwf	??_division
  3488  07A7  01A5               	clrf	??_division+1
  3489  07A8  0824               	movf	??_division,w
  3490  07A9  00F5               	movwf	___awdiv@dividend
  3491  07AA  0825               	movf	??_division+1,w
  3492  07AB  00F6               	movwf	___awdiv@dividend+1
  3493  07AC  120A  158A  265F  120A  118A  	fcall	___awdiv
  3494  07B1  0873               	movf	?___awdiv,w
  3495  07B2  1283               	bcf	3,5	;RP0=0, select bank0
  3496  07B3  1303               	bcf	3,6	;RP1=0, select bank0
  3497  07B4  00A6               	movwf	??_division+2
  3498  07B5  0826               	movf	??_division+2,w
  3499  07B6  1683               	bsf	3,5	;RP0=1, select bank1
  3500  07B7  1303               	bcf	3,6	;RP1=0, select bank1
  3501  07B8  00CD               	movwf	_tens^(0+128)
  3502                           
  3503                           ;D2_main2.c: 209:     units = residuo%10;
  3504  07B9  300A               	movlw	10
  3505  07BA  00F3               	movwf	___awmod@divisor
  3506  07BB  3000               	movlw	0
  3507  07BC  00F4               	movwf	___awmod@divisor+1
  3508  07BD  0878               	movf	_residuo,w
  3509  07BE  1283               	bcf	3,5	;RP0=0, select bank0
  3510  07BF  1303               	bcf	3,6	;RP1=0, select bank0
  3511  07C0  00A4               	movwf	??_division
  3512  07C1  01A5               	clrf	??_division+1
  3513  07C2  0824               	movf	??_division,w
  3514  07C3  00F5               	movwf	___awmod@dividend
  3515  07C4  0825               	movf	??_division+1,w
  3516  07C5  00F6               	movwf	___awmod@dividend+1
  3517  07C6  120A  158A  259F  120A  118A  	fcall	___awmod
  3518  07CB  0873               	movf	?___awmod,w
  3519  07CC  1283               	bcf	3,5	;RP0=0, select bank0
  3520  07CD  1303               	bcf	3,6	;RP1=0, select bank0
  3521  07CE  00A6               	movwf	??_division+2
  3522  07CF  0826               	movf	??_division+2,w
  3523  07D0  1683               	bsf	3,5	;RP0=1, select bank1
  3524  07D1  1303               	bcf	3,6	;RP1=0, select bank1
  3525  07D2  00CC               	movwf	_units^(0+128)
  3526  07D3                     l2808:
  3527                           
  3528                           ;D2_main2.c: 211:     hundreds = hundreds + 48;
  3529  07D3  084E               	movf	_hundreds^(0+128),w
  3530  07D4  3E30               	addlw	48
  3531  07D5  1283               	bcf	3,5	;RP0=0, select bank0
  3532  07D6  1303               	bcf	3,6	;RP1=0, select bank0
  3533  07D7  00A4               	movwf	??_division
  3534  07D8  0824               	movf	??_division,w
  3535  07D9  1683               	bsf	3,5	;RP0=1, select bank1
  3536  07DA  1303               	bcf	3,6	;RP1=0, select bank1
  3537  07DB  00CE               	movwf	_hundreds^(0+128)
  3538  07DC                     l2810:
  3539                           
  3540                           ;D2_main2.c: 212:     tens = tens + 48;
  3541  07DC  084D               	movf	_tens^(0+128),w
  3542  07DD  3E30               	addlw	48
  3543  07DE  1283               	bcf	3,5	;RP0=0, select bank0
  3544  07DF  1303               	bcf	3,6	;RP1=0, select bank0
  3545  07E0  00A4               	movwf	??_division
  3546  07E1  0824               	movf	??_division,w
  3547  07E2  1683               	bsf	3,5	;RP0=1, select bank1
  3548  07E3  1303               	bcf	3,6	;RP1=0, select bank1
  3549  07E4  00CD               	movwf	_tens^(0+128)
  3550  07E5                     l2812:
  3551                           
  3552                           ;D2_main2.c: 213:     units = units + 48;
  3553  07E5  084C               	movf	_units^(0+128),w
  3554  07E6  3E30               	addlw	48
  3555  07E7  1283               	bcf	3,5	;RP0=0, select bank0
  3556  07E8  1303               	bcf	3,6	;RP1=0, select bank0
  3557  07E9  00A4               	movwf	??_division
  3558  07EA  0824               	movf	??_division,w
  3559  07EB  1683               	bsf	3,5	;RP0=1, select bank1
  3560  07EC  1303               	bcf	3,6	;RP1=0, select bank1
  3561  07ED  00CC               	movwf	_units^(0+128)
  3562  07EE                     l131:
  3563  07EE  0008               	return
  3564  07EF                     __end_of_division:
  3565                           
  3566                           	psect	text10
  3567  0D9F                     __ptext10:	
  3568 ;; *************** function ___awmod *****************
  3569 ;; Defined at:
  3570 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awmod.c"
  3571 ;; Parameters:    Size  Location     Type
  3572 ;;  divisor         2    3[COMMON] int 
  3573 ;;  dividend        2    5[COMMON] int 
  3574 ;; Auto vars:     Size  Location     Type
  3575 ;;  sign            1    1[BANK0 ] unsigned char 
  3576 ;;  counter         1    0[BANK0 ] unsigned char 
  3577 ;; Return value:  Size  Location     Type
  3578 ;;                  2    3[COMMON] int 
  3579 ;; Registers used:
  3580 ;;		wreg, status,2, status,0
  3581 ;; Tracked objects:
  3582 ;;		On entry : 0/0
  3583 ;;		On exit  : 0/0
  3584 ;;		Unchanged: 0/0
  3585 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3586 ;;      Params:         4       0       0       0       0
  3587 ;;      Locals:         0       2       0       0       0
  3588 ;;      Temps:          1       0       0       0       0
  3589 ;;      Totals:         5       2       0       0       0
  3590 ;;Total ram usage:        7 bytes
  3591 ;; Hardware stack levels used:    1
  3592 ;; Hardware stack levels required when called:    1
  3593 ;; This function calls:
  3594 ;;		Nothing
  3595 ;; This function is called by:
  3596 ;;		_division
  3597 ;; This function uses a non-reentrant model
  3598 ;;
  3599                           
  3600                           
  3601                           ;psect for function ___awmod
  3602  0D9F                     ___awmod:
  3603  0D9F                     l2646:	
  3604                           ;incstack = 0
  3605                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  3606                           
  3607  0D9F  1283               	bcf	3,5	;RP0=0, select bank0
  3608  0DA0  1303               	bcf	3,6	;RP1=0, select bank0
  3609  0DA1  01A1               	clrf	___awmod@sign
  3610  0DA2                     l2648:
  3611  0DA2  1FF6               	btfss	___awmod@dividend+1,7
  3612  0DA3  2DA5               	goto	u2561
  3613  0DA4  2DA6               	goto	u2560
  3614  0DA5                     u2561:
  3615  0DA5  2DAD               	goto	l2654
  3616  0DA6                     u2560:
  3617  0DA6                     l2650:
  3618  0DA6  09F5               	comf	___awmod@dividend,f
  3619  0DA7  09F6               	comf	___awmod@dividend+1,f
  3620  0DA8  0AF5               	incf	___awmod@dividend,f
  3621  0DA9  1903               	skipnz
  3622  0DAA  0AF6               	incf	___awmod@dividend+1,f
  3623  0DAB                     l2652:
  3624  0DAB  01A1               	clrf	___awmod@sign
  3625  0DAC  0AA1               	incf	___awmod@sign,f
  3626  0DAD                     l2654:
  3627  0DAD  1FF4               	btfss	___awmod@divisor+1,7
  3628  0DAE  2DB0               	goto	u2571
  3629  0DAF  2DB1               	goto	u2570
  3630  0DB0                     u2571:
  3631  0DB0  2DB6               	goto	l2658
  3632  0DB1                     u2570:
  3633  0DB1                     l2656:
  3634  0DB1  09F3               	comf	___awmod@divisor,f
  3635  0DB2  09F4               	comf	___awmod@divisor+1,f
  3636  0DB3  0AF3               	incf	___awmod@divisor,f
  3637  0DB4  1903               	skipnz
  3638  0DB5  0AF4               	incf	___awmod@divisor+1,f
  3639  0DB6                     l2658:
  3640  0DB6  0873               	movf	___awmod@divisor,w
  3641  0DB7  0474               	iorwf	___awmod@divisor+1,w
  3642  0DB8  1903               	btfsc	3,2
  3643  0DB9  2DBB               	goto	u2581
  3644  0DBA  2DBC               	goto	u2580
  3645  0DBB                     u2581:
  3646  0DBB  2DEB               	goto	l2676
  3647  0DBC                     u2580:
  3648  0DBC                     l2660:
  3649  0DBC  01A0               	clrf	___awmod@counter
  3650  0DBD  0AA0               	incf	___awmod@counter,f
  3651  0DBE  2DCA               	goto	l2666
  3652  0DBF                     l2662:
  3653  0DBF  3001               	movlw	1
  3654  0DC0                     u2595:
  3655  0DC0  1003               	clrc
  3656  0DC1  0DF3               	rlf	___awmod@divisor,f
  3657  0DC2  0DF4               	rlf	___awmod@divisor+1,f
  3658  0DC3  3EFF               	addlw	-1
  3659  0DC4  1D03               	skipz
  3660  0DC5  2DC0               	goto	u2595
  3661  0DC6                     l2664:
  3662  0DC6  3001               	movlw	1
  3663  0DC7  00F7               	movwf	??___awmod
  3664  0DC8  0877               	movf	??___awmod,w
  3665  0DC9  07A0               	addwf	___awmod@counter,f
  3666  0DCA                     l2666:
  3667  0DCA  1FF4               	btfss	___awmod@divisor+1,7
  3668  0DCB  2DCD               	goto	u2601
  3669  0DCC  2DCE               	goto	u2600
  3670  0DCD                     u2601:
  3671  0DCD  2DBF               	goto	l2662
  3672  0DCE                     u2600:
  3673  0DCE                     l2668:
  3674  0DCE  0874               	movf	___awmod@divisor+1,w
  3675  0DCF  0276               	subwf	___awmod@dividend+1,w
  3676  0DD0  1D03               	skipz
  3677  0DD1  2DD4               	goto	u2615
  3678  0DD2  0873               	movf	___awmod@divisor,w
  3679  0DD3  0275               	subwf	___awmod@dividend,w
  3680  0DD4                     u2615:
  3681  0DD4  1C03               	skipc
  3682  0DD5  2DD7               	goto	u2611
  3683  0DD6  2DD8               	goto	u2610
  3684  0DD7                     u2611:
  3685  0DD7  2DDE               	goto	l2672
  3686  0DD8                     u2610:
  3687  0DD8                     l2670:
  3688  0DD8  0873               	movf	___awmod@divisor,w
  3689  0DD9  02F5               	subwf	___awmod@dividend,f
  3690  0DDA  0874               	movf	___awmod@divisor+1,w
  3691  0DDB  1C03               	skipc
  3692  0DDC  03F6               	decf	___awmod@dividend+1,f
  3693  0DDD  02F6               	subwf	___awmod@dividend+1,f
  3694  0DDE                     l2672:
  3695  0DDE  3001               	movlw	1
  3696  0DDF                     u2625:
  3697  0DDF  1003               	clrc
  3698  0DE0  0CF4               	rrf	___awmod@divisor+1,f
  3699  0DE1  0CF3               	rrf	___awmod@divisor,f
  3700  0DE2  3EFF               	addlw	-1
  3701  0DE3  1D03               	skipz
  3702  0DE4  2DDF               	goto	u2625
  3703  0DE5                     l2674:
  3704  0DE5  3001               	movlw	1
  3705  0DE6  02A0               	subwf	___awmod@counter,f
  3706  0DE7  1D03               	btfss	3,2
  3707  0DE8  2DEA               	goto	u2631
  3708  0DE9  2DEB               	goto	u2630
  3709  0DEA                     u2631:
  3710  0DEA  2DCE               	goto	l2668
  3711  0DEB                     u2630:
  3712  0DEB                     l2676:
  3713  0DEB  0821               	movf	___awmod@sign,w
  3714  0DEC  1903               	btfsc	3,2
  3715  0DED  2DEF               	goto	u2641
  3716  0DEE  2DF0               	goto	u2640
  3717  0DEF                     u2641:
  3718  0DEF  2DF5               	goto	l2680
  3719  0DF0                     u2640:
  3720  0DF0                     l2678:
  3721  0DF0  09F5               	comf	___awmod@dividend,f
  3722  0DF1  09F6               	comf	___awmod@dividend+1,f
  3723  0DF2  0AF5               	incf	___awmod@dividend,f
  3724  0DF3  1903               	skipnz
  3725  0DF4  0AF6               	incf	___awmod@dividend+1,f
  3726  0DF5                     l2680:
  3727  0DF5  0876               	movf	___awmod@dividend+1,w
  3728  0DF6  00F4               	movwf	?___awmod+1
  3729  0DF7  0875               	movf	___awmod@dividend,w
  3730  0DF8  00F3               	movwf	?___awmod
  3731  0DF9                     l460:
  3732  0DF9  0008               	return
  3733  0DFA                     __end_of___awmod:
  3734                           
  3735                           	psect	text11
  3736  0E5F                     __ptext11:	
  3737 ;; *************** function ___awdiv *****************
  3738 ;; Defined at:
  3739 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
  3740 ;; Parameters:    Size  Location     Type
  3741 ;;  divisor         2    3[COMMON] int 
  3742 ;;  dividend        2    5[COMMON] int 
  3743 ;; Auto vars:     Size  Location     Type
  3744 ;;  quotient        2    2[BANK0 ] int 
  3745 ;;  sign            1    1[BANK0 ] unsigned char 
  3746 ;;  counter         1    0[BANK0 ] unsigned char 
  3747 ;; Return value:  Size  Location     Type
  3748 ;;                  2    3[COMMON] int 
  3749 ;; Registers used:
  3750 ;;		wreg, status,2, status,0
  3751 ;; Tracked objects:
  3752 ;;		On entry : 0/0
  3753 ;;		On exit  : 0/0
  3754 ;;		Unchanged: 0/0
  3755 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3756 ;;      Params:         4       0       0       0       0
  3757 ;;      Locals:         0       4       0       0       0
  3758 ;;      Temps:          1       0       0       0       0
  3759 ;;      Totals:         5       4       0       0       0
  3760 ;;Total ram usage:        9 bytes
  3761 ;; Hardware stack levels used:    1
  3762 ;; Hardware stack levels required when called:    1
  3763 ;; This function calls:
  3764 ;;		Nothing
  3765 ;; This function is called by:
  3766 ;;		_division
  3767 ;; This function uses a non-reentrant model
  3768 ;;
  3769                           
  3770                           
  3771                           ;psect for function ___awdiv
  3772  0E5F                     ___awdiv:
  3773  0E5F                     l2602:	
  3774                           ;incstack = 0
  3775                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3776                           
  3777  0E5F  1283               	bcf	3,5	;RP0=0, select bank0
  3778  0E60  1303               	bcf	3,6	;RP1=0, select bank0
  3779  0E61  01A1               	clrf	___awdiv@sign
  3780  0E62                     l2604:
  3781  0E62  1FF4               	btfss	___awdiv@divisor+1,7
  3782  0E63  2E65               	goto	u2461
  3783  0E64  2E66               	goto	u2460
  3784  0E65                     u2461:
  3785  0E65  2E6D               	goto	l2610
  3786  0E66                     u2460:
  3787  0E66                     l2606:
  3788  0E66  09F3               	comf	___awdiv@divisor,f
  3789  0E67  09F4               	comf	___awdiv@divisor+1,f
  3790  0E68  0AF3               	incf	___awdiv@divisor,f
  3791  0E69  1903               	skipnz
  3792  0E6A  0AF4               	incf	___awdiv@divisor+1,f
  3793  0E6B                     l2608:
  3794  0E6B  01A1               	clrf	___awdiv@sign
  3795  0E6C  0AA1               	incf	___awdiv@sign,f
  3796  0E6D                     l2610:
  3797  0E6D  1FF6               	btfss	___awdiv@dividend+1,7
  3798  0E6E  2E70               	goto	u2471
  3799  0E6F  2E71               	goto	u2470
  3800  0E70                     u2471:
  3801  0E70  2E7A               	goto	l2616
  3802  0E71                     u2470:
  3803  0E71                     l2612:
  3804  0E71  09F5               	comf	___awdiv@dividend,f
  3805  0E72  09F6               	comf	___awdiv@dividend+1,f
  3806  0E73  0AF5               	incf	___awdiv@dividend,f
  3807  0E74  1903               	skipnz
  3808  0E75  0AF6               	incf	___awdiv@dividend+1,f
  3809  0E76                     l2614:
  3810  0E76  3001               	movlw	1
  3811  0E77  00F7               	movwf	??___awdiv
  3812  0E78  0877               	movf	??___awdiv,w
  3813  0E79  06A1               	xorwf	___awdiv@sign,f
  3814  0E7A                     l2616:
  3815  0E7A  01A2               	clrf	___awdiv@quotient
  3816  0E7B  01A3               	clrf	___awdiv@quotient+1
  3817  0E7C                     l2618:
  3818  0E7C  0873               	movf	___awdiv@divisor,w
  3819  0E7D  0474               	iorwf	___awdiv@divisor+1,w
  3820  0E7E  1903               	btfsc	3,2
  3821  0E7F  2E81               	goto	u2481
  3822  0E80  2E82               	goto	u2480
  3823  0E81                     u2481:
  3824  0E81  2EB9               	goto	l2638
  3825  0E82                     u2480:
  3826  0E82                     l2620:
  3827  0E82  01A0               	clrf	___awdiv@counter
  3828  0E83  0AA0               	incf	___awdiv@counter,f
  3829  0E84  2E90               	goto	l2626
  3830  0E85                     l2622:
  3831  0E85  3001               	movlw	1
  3832  0E86                     u2495:
  3833  0E86  1003               	clrc
  3834  0E87  0DF3               	rlf	___awdiv@divisor,f
  3835  0E88  0DF4               	rlf	___awdiv@divisor+1,f
  3836  0E89  3EFF               	addlw	-1
  3837  0E8A  1D03               	skipz
  3838  0E8B  2E86               	goto	u2495
  3839  0E8C                     l2624:
  3840  0E8C  3001               	movlw	1
  3841  0E8D  00F7               	movwf	??___awdiv
  3842  0E8E  0877               	movf	??___awdiv,w
  3843  0E8F  07A0               	addwf	___awdiv@counter,f
  3844  0E90                     l2626:
  3845  0E90  1FF4               	btfss	___awdiv@divisor+1,7
  3846  0E91  2E93               	goto	u2501
  3847  0E92  2E94               	goto	u2500
  3848  0E93                     u2501:
  3849  0E93  2E85               	goto	l2622
  3850  0E94                     u2500:
  3851  0E94                     l2628:
  3852  0E94  3001               	movlw	1
  3853  0E95                     u2515:
  3854  0E95  1003               	clrc
  3855  0E96  0DA2               	rlf	___awdiv@quotient,f
  3856  0E97  0DA3               	rlf	___awdiv@quotient+1,f
  3857  0E98  3EFF               	addlw	-1
  3858  0E99  1D03               	skipz
  3859  0E9A  2E95               	goto	u2515
  3860  0E9B  0874               	movf	___awdiv@divisor+1,w
  3861  0E9C  0276               	subwf	___awdiv@dividend+1,w
  3862  0E9D  1D03               	skipz
  3863  0E9E  2EA1               	goto	u2525
  3864  0E9F  0873               	movf	___awdiv@divisor,w
  3865  0EA0  0275               	subwf	___awdiv@dividend,w
  3866  0EA1                     u2525:
  3867  0EA1  1C03               	skipc
  3868  0EA2  2EA4               	goto	u2521
  3869  0EA3  2EA5               	goto	u2520
  3870  0EA4                     u2521:
  3871  0EA4  2EAC               	goto	l2634
  3872  0EA5                     u2520:
  3873  0EA5                     l2630:
  3874  0EA5  0873               	movf	___awdiv@divisor,w
  3875  0EA6  02F5               	subwf	___awdiv@dividend,f
  3876  0EA7  0874               	movf	___awdiv@divisor+1,w
  3877  0EA8  1C03               	skipc
  3878  0EA9  03F6               	decf	___awdiv@dividend+1,f
  3879  0EAA  02F6               	subwf	___awdiv@dividend+1,f
  3880  0EAB                     l2632:
  3881  0EAB  1422               	bsf	___awdiv@quotient,0
  3882  0EAC                     l2634:
  3883  0EAC  3001               	movlw	1
  3884  0EAD                     u2535:
  3885  0EAD  1003               	clrc
  3886  0EAE  0CF4               	rrf	___awdiv@divisor+1,f
  3887  0EAF  0CF3               	rrf	___awdiv@divisor,f
  3888  0EB0  3EFF               	addlw	-1
  3889  0EB1  1D03               	skipz
  3890  0EB2  2EAD               	goto	u2535
  3891  0EB3                     l2636:
  3892  0EB3  3001               	movlw	1
  3893  0EB4  02A0               	subwf	___awdiv@counter,f
  3894  0EB5  1D03               	btfss	3,2
  3895  0EB6  2EB8               	goto	u2541
  3896  0EB7  2EB9               	goto	u2540
  3897  0EB8                     u2541:
  3898  0EB8  2E94               	goto	l2628
  3899  0EB9                     u2540:
  3900  0EB9                     l2638:
  3901  0EB9  0821               	movf	___awdiv@sign,w
  3902  0EBA  1903               	btfsc	3,2
  3903  0EBB  2EBD               	goto	u2551
  3904  0EBC  2EBE               	goto	u2550
  3905  0EBD                     u2551:
  3906  0EBD  2EC3               	goto	l2642
  3907  0EBE                     u2550:
  3908  0EBE                     l2640:
  3909  0EBE  09A2               	comf	___awdiv@quotient,f
  3910  0EBF  09A3               	comf	___awdiv@quotient+1,f
  3911  0EC0  0AA2               	incf	___awdiv@quotient,f
  3912  0EC1  1903               	skipnz
  3913  0EC2  0AA3               	incf	___awdiv@quotient+1,f
  3914  0EC3                     l2642:
  3915  0EC3  0823               	movf	___awdiv@quotient+1,w
  3916  0EC4  00F4               	movwf	?___awdiv+1
  3917  0EC5  0822               	movf	___awdiv@quotient,w
  3918  0EC6  00F3               	movwf	?___awdiv
  3919  0EC7                     l447:
  3920  0EC7  0008               	return
  3921  0EC8                     __end_of___awdiv:
  3922                           
  3923                           	psect	text12
  3924  0F44                     __ptext12:	
  3925 ;; *************** function ___xxtofl *****************
  3926 ;; Defined at:
  3927 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\xxtofl.c"
  3928 ;; Parameters:    Size  Location     Type
  3929 ;;  sign            1    wreg     unsigned char 
  3930 ;;  val             4    3[COMMON] long 
  3931 ;; Auto vars:     Size  Location     Type
  3932 ;;  sign            1    4[BANK0 ] unsigned char 
  3933 ;;  arg             4    6[BANK0 ] unsigned long 
  3934 ;;  exp             1    5[BANK0 ] unsigned char 
  3935 ;; Return value:  Size  Location     Type
  3936 ;;                  4    3[COMMON] unsigned char 
  3937 ;; Registers used:
  3938 ;;		wreg, status,2, status,0
  3939 ;; Tracked objects:
  3940 ;;		On entry : 0/0
  3941 ;;		On exit  : 0/0
  3942 ;;		Unchanged: 0/0
  3943 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3944 ;;      Params:         4       0       0       0       0
  3945 ;;      Locals:         0       6       0       0       0
  3946 ;;      Temps:          0       4       0       0       0
  3947 ;;      Totals:         4      10       0       0       0
  3948 ;;Total ram usage:       14 bytes
  3949 ;; Hardware stack levels used:    1
  3950 ;; Hardware stack levels required when called:    1
  3951 ;; This function calls:
  3952 ;;		Nothing
  3953 ;; This function is called by:
  3954 ;;		_main
  3955 ;; This function uses a non-reentrant model
  3956 ;;
  3957                           
  3958                           
  3959                           ;psect for function ___xxtofl
  3960  0F44                     ___xxtofl:
  3961                           
  3962                           ;incstack = 0
  3963                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  3964                           ;___xxtofl@sign stored from wreg
  3965  0F44  1283               	bcf	3,5	;RP0=0, select bank0
  3966  0F45  1303               	bcf	3,6	;RP1=0, select bank0
  3967  0F46  00A4               	movwf	___xxtofl@sign
  3968  0F47                     l2824:
  3969  0F47  0824               	movf	___xxtofl@sign,w
  3970  0F48  1903               	btfsc	3,2
  3971  0F49  2F4B               	goto	u2801
  3972  0F4A  2F4C               	goto	u2800
  3973  0F4B                     u2801:
  3974  0F4B  2F60               	goto	l2830
  3975  0F4C                     u2800:
  3976  0F4C                     l2826:
  3977  0F4C  1FF6               	btfss	___xxtofl@val+3,7
  3978  0F4D  2F4F               	goto	u2811
  3979  0F4E  2F50               	goto	u2810
  3980  0F4F                     u2811:
  3981  0F4F  2F60               	goto	l2830
  3982  0F50                     u2810:
  3983  0F50                     l2828:
  3984  0F50  0973               	comf	___xxtofl@val,w
  3985  0F51  00A6               	movwf	___xxtofl@arg
  3986  0F52  0974               	comf	___xxtofl@val+1,w
  3987  0F53  00A7               	movwf	___xxtofl@arg+1
  3988  0F54  0975               	comf	___xxtofl@val+2,w
  3989  0F55  00A8               	movwf	___xxtofl@arg+2
  3990  0F56  0976               	comf	___xxtofl@val+3,w
  3991  0F57  00A9               	movwf	___xxtofl@arg+3
  3992  0F58  0AA6               	incf	___xxtofl@arg,f
  3993  0F59  1903               	skipnz
  3994  0F5A  0AA7               	incf	___xxtofl@arg+1,f
  3995  0F5B  1903               	skipnz
  3996  0F5C  0AA8               	incf	___xxtofl@arg+2,f
  3997  0F5D  1903               	skipnz
  3998  0F5E  0AA9               	incf	___xxtofl@arg+3,f
  3999  0F5F  2F68               	goto	l727
  4000  0F60                     l2830:
  4001  0F60  0876               	movf	___xxtofl@val+3,w
  4002  0F61  00A9               	movwf	___xxtofl@arg+3
  4003  0F62  0875               	movf	___xxtofl@val+2,w
  4004  0F63  00A8               	movwf	___xxtofl@arg+2
  4005  0F64  0874               	movf	___xxtofl@val+1,w
  4006  0F65  00A7               	movwf	___xxtofl@arg+1
  4007  0F66  0873               	movf	___xxtofl@val,w
  4008  0F67  00A6               	movwf	___xxtofl@arg
  4009  0F68                     l727:
  4010  0F68  0876               	movf	___xxtofl@val+3,w
  4011  0F69  0475               	iorwf	___xxtofl@val+2,w
  4012  0F6A  0474               	iorwf	___xxtofl@val+1,w
  4013  0F6B  0473               	iorwf	___xxtofl@val,w
  4014  0F6C  1D03               	skipz
  4015  0F6D  2F6F               	goto	u2821
  4016  0F6E  2F70               	goto	u2820
  4017  0F6F                     u2821:
  4018  0F6F  2F79               	goto	l2836
  4019  0F70                     u2820:
  4020  0F70                     l2832:
  4021  0F70  3000               	movlw	0
  4022  0F71  00F6               	movwf	?___xxtofl+3
  4023  0F72  3000               	movlw	0
  4024  0F73  00F5               	movwf	?___xxtofl+2
  4025  0F74  3000               	movlw	0
  4026  0F75  00F4               	movwf	?___xxtofl+1
  4027  0F76  3000               	movlw	0
  4028  0F77  00F3               	movwf	?___xxtofl
  4029  0F78  2FFF               	goto	l729
  4030  0F79                     l2836:
  4031  0F79  3096               	movlw	150
  4032  0F7A  00A0               	movwf	??___xxtofl
  4033  0F7B  0820               	movf	??___xxtofl,w
  4034  0F7C  00A5               	movwf	___xxtofl@exp
  4035  0F7D  2F8B               	goto	l2840
  4036  0F7E                     l2838:
  4037  0F7E  3001               	movlw	1
  4038  0F7F  00A0               	movwf	??___xxtofl
  4039  0F80  0820               	movf	??___xxtofl,w
  4040  0F81  07A5               	addwf	___xxtofl@exp,f
  4041  0F82  3001               	movlw	1
  4042  0F83                     u2835:
  4043  0F83  1003               	clrc
  4044  0F84  0CA9               	rrf	___xxtofl@arg+3,f
  4045  0F85  0CA8               	rrf	___xxtofl@arg+2,f
  4046  0F86  0CA7               	rrf	___xxtofl@arg+1,f
  4047  0F87  0CA6               	rrf	___xxtofl@arg,f
  4048  0F88  3EFF               	addlw	-1
  4049  0F89  1D03               	skipz
  4050  0F8A  2F83               	goto	u2835
  4051  0F8B                     l2840:
  4052  0F8B  30FE               	movlw	254
  4053  0F8C  0529               	andwf	___xxtofl@arg+3,w
  4054  0F8D  1D03               	btfss	3,2
  4055  0F8E  2F90               	goto	u2841
  4056  0F8F  2F91               	goto	u2840
  4057  0F90                     u2841:
  4058  0F90  2F7E               	goto	l2838
  4059  0F91                     u2840:
  4060  0F91  2FAD               	goto	l733
  4061  0F92                     l2842:
  4062  0F92  3001               	movlw	1
  4063  0F93  00A0               	movwf	??___xxtofl
  4064  0F94  0820               	movf	??___xxtofl,w
  4065  0F95  07A5               	addwf	___xxtofl@exp,f
  4066  0F96                     l2844:
  4067  0F96  3001               	movlw	1
  4068  0F97  07A6               	addwf	___xxtofl@arg,f
  4069  0F98  3000               	movlw	0
  4070  0F99  1803               	skipnc
  4071  0F9A  3001               	movlw	1
  4072  0F9B  07A7               	addwf	___xxtofl@arg+1,f
  4073  0F9C  3000               	movlw	0
  4074  0F9D  1803               	skipnc
  4075  0F9E  3001               	movlw	1
  4076  0F9F  07A8               	addwf	___xxtofl@arg+2,f
  4077  0FA0  3000               	movlw	0
  4078  0FA1  1803               	skipnc
  4079  0FA2  3001               	movlw	1
  4080  0FA3  07A9               	addwf	___xxtofl@arg+3,f
  4081  0FA4                     l2846:
  4082  0FA4  3001               	movlw	1
  4083  0FA5                     u2855:
  4084  0FA5  1003               	clrc
  4085  0FA6  0CA9               	rrf	___xxtofl@arg+3,f
  4086  0FA7  0CA8               	rrf	___xxtofl@arg+2,f
  4087  0FA8  0CA7               	rrf	___xxtofl@arg+1,f
  4088  0FA9  0CA6               	rrf	___xxtofl@arg,f
  4089  0FAA  3EFF               	addlw	-1
  4090  0FAB  1D03               	skipz
  4091  0FAC  2FA5               	goto	u2855
  4092  0FAD                     l733:
  4093  0FAD  30FF               	movlw	255
  4094  0FAE  0529               	andwf	___xxtofl@arg+3,w
  4095  0FAF  1D03               	btfss	3,2
  4096  0FB0  2FB2               	goto	u2861
  4097  0FB1  2FB3               	goto	u2860
  4098  0FB2                     u2861:
  4099  0FB2  2F92               	goto	l2842
  4100  0FB3                     u2860:
  4101  0FB3  2FBF               	goto	l2850
  4102  0FB4                     l2848:
  4103  0FB4  3001               	movlw	1
  4104  0FB5  02A5               	subwf	___xxtofl@exp,f
  4105  0FB6  3001               	movlw	1
  4106  0FB7  00A0               	movwf	??___xxtofl
  4107  0FB8                     u2875:
  4108  0FB8  1003               	clrc
  4109  0FB9  0DA6               	rlf	___xxtofl@arg,f
  4110  0FBA  0DA7               	rlf	___xxtofl@arg+1,f
  4111  0FBB  0DA8               	rlf	___xxtofl@arg+2,f
  4112  0FBC  0DA9               	rlf	___xxtofl@arg+3,f
  4113  0FBD  0BA0               	decfsz	??___xxtofl,f
  4114  0FBE  2FB8               	goto	u2875
  4115  0FBF                     l2850:
  4116  0FBF  1BA8               	btfsc	___xxtofl@arg+2,7
  4117  0FC0  2FC2               	goto	u2881
  4118  0FC1  2FC3               	goto	u2880
  4119  0FC2                     u2881:
  4120  0FC2  2FC9               	goto	l740
  4121  0FC3                     u2880:
  4122  0FC3                     l2852:
  4123  0FC3  3002               	movlw	2
  4124  0FC4  0225               	subwf	___xxtofl@exp,w
  4125  0FC5  1803               	skipnc
  4126  0FC6  2FC8               	goto	u2891
  4127  0FC7  2FC9               	goto	u2890
  4128  0FC8                     u2891:
  4129  0FC8  2FB4               	goto	l2848
  4130  0FC9                     u2890:
  4131  0FC9                     l740:
  4132  0FC9  1825               	btfsc	___xxtofl@exp,0
  4133  0FCA  2FCC               	goto	u2901
  4134  0FCB  2FCD               	goto	u2900
  4135  0FCC                     u2901:
  4136  0FCC  2FD5               	goto	l741
  4137  0FCD                     u2900:
  4138  0FCD                     l2854:
  4139  0FCD  30FF               	movlw	255
  4140  0FCE  05A6               	andwf	___xxtofl@arg,f
  4141  0FCF  30FF               	movlw	255
  4142  0FD0  05A7               	andwf	___xxtofl@arg+1,f
  4143  0FD1  307F               	movlw	127
  4144  0FD2  05A8               	andwf	___xxtofl@arg+2,f
  4145  0FD3  30FF               	movlw	255
  4146  0FD4  05A9               	andwf	___xxtofl@arg+3,f
  4147  0FD5                     l741:
  4148  0FD5  1003               	clrc
  4149  0FD6  0CA5               	rrf	___xxtofl@exp,f
  4150  0FD7                     l2856:
  4151  0FD7  0825               	movf	___xxtofl@exp,w
  4152  0FD8  00A0               	movwf	??___xxtofl
  4153  0FD9  01A1               	clrf	??___xxtofl+1
  4154  0FDA  01A2               	clrf	??___xxtofl+2
  4155  0FDB  01A3               	clrf	??___xxtofl+3
  4156  0FDC  3018               	movlw	24
  4157  0FDD                     u2915:
  4158  0FDD  1003               	clrc
  4159  0FDE  0DA0               	rlf	??___xxtofl,f
  4160  0FDF  0DA1               	rlf	??___xxtofl+1,f
  4161  0FE0  0DA2               	rlf	??___xxtofl+2,f
  4162  0FE1  0DA3               	rlf	??___xxtofl+3,f
  4163  0FE2                     u2910:
  4164  0FE2  3EFF               	addlw	-1
  4165  0FE3  1D03               	skipz
  4166  0FE4  2FDD               	goto	u2915
  4167  0FE5  0820               	movf	??___xxtofl,w
  4168  0FE6  04A6               	iorwf	___xxtofl@arg,f
  4169  0FE7  0821               	movf	??___xxtofl+1,w
  4170  0FE8  04A7               	iorwf	___xxtofl@arg+1,f
  4171  0FE9  0822               	movf	??___xxtofl+2,w
  4172  0FEA  04A8               	iorwf	___xxtofl@arg+2,f
  4173  0FEB  0823               	movf	??___xxtofl+3,w
  4174  0FEC  04A9               	iorwf	___xxtofl@arg+3,f
  4175  0FED                     l2858:
  4176  0FED  0824               	movf	___xxtofl@sign,w
  4177  0FEE  1903               	btfsc	3,2
  4178  0FEF  2FF1               	goto	u2921
  4179  0FF0  2FF2               	goto	u2920
  4180  0FF1                     u2921:
  4181  0FF1  2FF7               	goto	l2864
  4182  0FF2                     u2920:
  4183  0FF2                     l2860:
  4184  0FF2  1FF6               	btfss	___xxtofl@val+3,7
  4185  0FF3  2FF5               	goto	u2931
  4186  0FF4  2FF6               	goto	u2930
  4187  0FF5                     u2931:
  4188  0FF5  2FF7               	goto	l2864
  4189  0FF6                     u2930:
  4190  0FF6                     l2862:
  4191  0FF6  17A9               	bsf	___xxtofl@arg+3,7
  4192  0FF7                     l2864:
  4193  0FF7  0829               	movf	___xxtofl@arg+3,w
  4194  0FF8  00F6               	movwf	?___xxtofl+3
  4195  0FF9  0828               	movf	___xxtofl@arg+2,w
  4196  0FFA  00F5               	movwf	?___xxtofl+2
  4197  0FFB  0827               	movf	___xxtofl@arg+1,w
  4198  0FFC  00F4               	movwf	?___xxtofl+1
  4199  0FFD  0826               	movf	___xxtofl@arg,w
  4200  0FFE  00F3               	movwf	?___xxtofl
  4201  0FFF                     l729:
  4202  0FFF  0008               	return
  4203  1000                     __end_of___xxtofl:
  4204                           
  4205                           	psect	text13
  4206  0EC8                     __ptext13:	
  4207 ;; *************** function ___fltol *****************
  4208 ;; Defined at:
  4209 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fltol.c"
  4210 ;; Parameters:    Size  Location     Type
  4211 ;;  f1              4   36[BANK0 ] unsigned char 
  4212 ;; Auto vars:     Size  Location     Type
  4213 ;;  exp1            1   46[BANK0 ] unsigned char 
  4214 ;;  sign1           1   45[BANK0 ] unsigned char 
  4215 ;; Return value:  Size  Location     Type
  4216 ;;                  4   36[BANK0 ] long 
  4217 ;; Registers used:
  4218 ;;		wreg, status,2, status,0
  4219 ;; Tracked objects:
  4220 ;;		On entry : 0/0
  4221 ;;		On exit  : 0/0
  4222 ;;		Unchanged: 0/0
  4223 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4224 ;;      Params:         0       4       0       0       0
  4225 ;;      Locals:         0       2       0       0       0
  4226 ;;      Temps:          0       5       0       0       0
  4227 ;;      Totals:         0      11       0       0       0
  4228 ;;Total ram usage:       11 bytes
  4229 ;; Hardware stack levels used:    1
  4230 ;; Hardware stack levels required when called:    1
  4231 ;; This function calls:
  4232 ;;		Nothing
  4233 ;; This function is called by:
  4234 ;;		_main
  4235 ;; This function uses a non-reentrant model
  4236 ;;
  4237                           
  4238                           
  4239                           ;psect for function ___fltol
  4240  0EC8                     ___fltol:
  4241  0EC8                     l2186:	
  4242                           ;incstack = 0
  4243                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  4244                           
  4245  0EC8  1003               	clrc
  4246  0EC9  1283               	bcf	3,5	;RP0=0, select bank0
  4247  0ECA  1303               	bcf	3,6	;RP1=0, select bank0
  4248  0ECB  0D46               	rlf	___fltol@f1+2,w
  4249  0ECC  0D47               	rlf	___fltol@f1+3,w
  4250  0ECD  00C8               	movwf	??___fltol
  4251  0ECE  0848               	movf	??___fltol,w
  4252  0ECF  00CE               	movwf	___fltol@exp1
  4253  0ED0  084E               	movf	___fltol@exp1,w
  4254  0ED1  1D03               	btfss	3,2
  4255  0ED2  2ED4               	goto	u1711
  4256  0ED3  2ED5               	goto	u1710
  4257  0ED4                     u1711:
  4258  0ED4  2EDE               	goto	l2192
  4259  0ED5                     u1710:
  4260  0ED5                     l2188:
  4261  0ED5  3000               	movlw	0
  4262  0ED6  00C7               	movwf	?___fltol+3
  4263  0ED7  3000               	movlw	0
  4264  0ED8  00C6               	movwf	?___fltol+2
  4265  0ED9  3000               	movlw	0
  4266  0EDA  00C5               	movwf	?___fltol+1
  4267  0EDB  3000               	movlw	0
  4268  0EDC  00C4               	movwf	?___fltol
  4269  0EDD  2F43               	goto	l480
  4270  0EDE                     l2192:
  4271  0EDE  0844               	movf	___fltol@f1,w
  4272  0EDF  00C8               	movwf	??___fltol
  4273  0EE0  0845               	movf	___fltol@f1+1,w
  4274  0EE1  00C9               	movwf	??___fltol+1
  4275  0EE2  0846               	movf	___fltol@f1+2,w
  4276  0EE3  00CA               	movwf	??___fltol+2
  4277  0EE4  0847               	movf	___fltol@f1+3,w
  4278  0EE5  00CB               	movwf	??___fltol+3
  4279  0EE6  301F               	movlw	31
  4280  0EE7                     u1725:
  4281  0EE7  1003               	clrc
  4282  0EE8  0CCB               	rrf	??___fltol+3,f
  4283  0EE9  0CCA               	rrf	??___fltol+2,f
  4284  0EEA  0CC9               	rrf	??___fltol+1,f
  4285  0EEB  0CC8               	rrf	??___fltol,f
  4286  0EEC                     u1720:
  4287  0EEC  3EFF               	addlw	-1
  4288  0EED  1D03               	skipz
  4289  0EEE  2EE7               	goto	u1725
  4290  0EEF  0848               	movf	??___fltol,w
  4291  0EF0  00CC               	movwf	??___fltol+4
  4292  0EF1  084C               	movf	??___fltol+4,w
  4293  0EF2  00CD               	movwf	___fltol@sign1
  4294  0EF3                     l2194:
  4295  0EF3  17C6               	bsf	___fltol@f1+2,7
  4296  0EF4                     l2196:
  4297  0EF4  30FF               	movlw	255
  4298  0EF5  05C4               	andwf	___fltol@f1,f
  4299  0EF6  30FF               	movlw	255
  4300  0EF7  05C5               	andwf	___fltol@f1+1,f
  4301  0EF8  30FF               	movlw	255
  4302  0EF9  05C6               	andwf	___fltol@f1+2,f
  4303  0EFA  3000               	movlw	0
  4304  0EFB  05C7               	andwf	___fltol@f1+3,f
  4305  0EFC                     l2198:
  4306  0EFC  3096               	movlw	150
  4307  0EFD  02CE               	subwf	___fltol@exp1,f
  4308  0EFE                     l2200:
  4309  0EFE  1FCE               	btfss	___fltol@exp1,7
  4310  0EFF  2F01               	goto	u1731
  4311  0F00  2F02               	goto	u1730
  4312  0F01                     u1731:
  4313  0F01  2F1C               	goto	l2210
  4314  0F02                     u1730:
  4315  0F02                     l2202:
  4316  0F02  084E               	movf	___fltol@exp1,w
  4317  0F03  3A80               	xorlw	128
  4318  0F04  3E97               	addlw	151
  4319  0F05  1803               	skipnc
  4320  0F06  2F08               	goto	u1741
  4321  0F07  2F09               	goto	u1740
  4322  0F08                     u1741:
  4323  0F08  2F0A               	goto	l2208
  4324  0F09                     u1740:
  4325  0F09  2ED5               	goto	l2188
  4326  0F0A                     l2208:
  4327  0F0A  3001               	movlw	1
  4328  0F0B                     u1755:
  4329  0F0B  1003               	clrc
  4330  0F0C  0CC7               	rrf	___fltol@f1+3,f
  4331  0F0D  0CC6               	rrf	___fltol@f1+2,f
  4332  0F0E  0CC5               	rrf	___fltol@f1+1,f
  4333  0F0F  0CC4               	rrf	___fltol@f1,f
  4334  0F10  3EFF               	addlw	-1
  4335  0F11  1D03               	skipz
  4336  0F12  2F0B               	goto	u1755
  4337  0F13  3001               	movlw	1
  4338  0F14  00C8               	movwf	??___fltol
  4339  0F15  0848               	movf	??___fltol,w
  4340  0F16  07CE               	addwf	___fltol@exp1,f
  4341  0F17  1D03               	btfss	3,2
  4342  0F18  2F1A               	goto	u1761
  4343  0F19  2F1B               	goto	u1760
  4344  0F1A                     u1761:
  4345  0F1A  2F0A               	goto	l2208
  4346  0F1B                     u1760:
  4347  0F1B  2F33               	goto	l2218
  4348  0F1C                     l2210:
  4349  0F1C  3020               	movlw	32
  4350  0F1D  024E               	subwf	___fltol@exp1,w
  4351  0F1E  1C03               	skipc
  4352  0F1F  2F21               	goto	u1771
  4353  0F20  2F22               	goto	u1770
  4354  0F21                     u1771:
  4355  0F21  2F2E               	goto	l487
  4356  0F22                     u1770:
  4357  0F22  2ED5               	goto	l2188
  4358  0F23                     l2216:
  4359  0F23  3001               	movlw	1
  4360  0F24  00C8               	movwf	??___fltol
  4361  0F25                     u1785:
  4362  0F25  1003               	clrc
  4363  0F26  0DC4               	rlf	___fltol@f1,f
  4364  0F27  0DC5               	rlf	___fltol@f1+1,f
  4365  0F28  0DC6               	rlf	___fltol@f1+2,f
  4366  0F29  0DC7               	rlf	___fltol@f1+3,f
  4367  0F2A  0BC8               	decfsz	??___fltol,f
  4368  0F2B  2F25               	goto	u1785
  4369  0F2C  3001               	movlw	1
  4370  0F2D  02CE               	subwf	___fltol@exp1,f
  4371  0F2E                     l487:
  4372  0F2E  084E               	movf	___fltol@exp1,w
  4373  0F2F  1D03               	btfss	3,2
  4374  0F30  2F32               	goto	u1791
  4375  0F31  2F33               	goto	u1790
  4376  0F32                     u1791:
  4377  0F32  2F23               	goto	l2216
  4378  0F33                     u1790:
  4379  0F33                     l2218:
  4380  0F33  084D               	movf	___fltol@sign1,w
  4381  0F34  1903               	btfsc	3,2
  4382  0F35  2F37               	goto	u1801
  4383  0F36  2F38               	goto	u1800
  4384  0F37                     u1801:
  4385  0F37  2F43               	goto	l490
  4386  0F38                     u1800:
  4387  0F38                     l2220:
  4388  0F38  09C4               	comf	___fltol@f1,f
  4389  0F39  09C5               	comf	___fltol@f1+1,f
  4390  0F3A  09C6               	comf	___fltol@f1+2,f
  4391  0F3B  09C7               	comf	___fltol@f1+3,f
  4392  0F3C  0AC4               	incf	___fltol@f1,f
  4393  0F3D  1903               	skipnz
  4394  0F3E  0AC5               	incf	___fltol@f1+1,f
  4395  0F3F  1903               	skipnz
  4396  0F40  0AC6               	incf	___fltol@f1+2,f
  4397  0F41  1903               	skipnz
  4398  0F42  0AC7               	incf	___fltol@f1+3,f
  4399  0F43                     l490:
  4400  0F43                     l480:
  4401  0F43  0008               	return
  4402  0F44                     __end_of___fltol:
  4403                           
  4404                           	psect	text14
  4405  002C                     __ptext14:	
  4406 ;; *************** function ___flmul *****************
  4407 ;; Defined at:
  4408 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcmul.c"
  4409 ;; Parameters:    Size  Location     Type
  4410 ;;  b               4   10[BANK0 ] long 
  4411 ;;  a               4   14[BANK0 ] long 
  4412 ;; Auto vars:     Size  Location     Type
  4413 ;;  prod            4   30[BANK0 ] struct .
  4414 ;;  grs             4   24[BANK0 ] unsigned long 
  4415 ;;  temp            2   34[BANK0 ] struct .
  4416 ;;  bexp            1   29[BANK0 ] unsigned char 
  4417 ;;  aexp            1   28[BANK0 ] unsigned char 
  4418 ;;  sign            1   23[BANK0 ] unsigned char 
  4419 ;; Return value:  Size  Location     Type
  4420 ;;                  4   10[BANK0 ] unsigned char 
  4421 ;; Registers used:
  4422 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  4423 ;; Tracked objects:
  4424 ;;		On entry : 0/0
  4425 ;;		On exit  : 0/0
  4426 ;;		Unchanged: 0/0
  4427 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4428 ;;      Params:         0       8       0       0       0
  4429 ;;      Locals:         0      13       0       0       0
  4430 ;;      Temps:          0       5       0       0       0
  4431 ;;      Totals:         0      26       0       0       0
  4432 ;;Total ram usage:       26 bytes
  4433 ;; Hardware stack levels used:    1
  4434 ;; Hardware stack levels required when called:    2
  4435 ;; This function calls:
  4436 ;;		__Umul8_16
  4437 ;; This function is called by:
  4438 ;;		_main
  4439 ;; This function uses a non-reentrant model
  4440 ;;
  4441                           
  4442                           
  4443                           ;psect for function ___flmul
  4444  002C                     ___flmul:
  4445  002C                     l2222:	
  4446                           ;incstack = 0
  4447                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  4448                           
  4449  002C  1283               	bcf	3,5	;RP0=0, select bank0
  4450  002D  1303               	bcf	3,6	;RP1=0, select bank0
  4451  002E  082D               	movf	___flmul@b+3,w
  4452  002F  3980               	andlw	128
  4453  0030  00B2               	movwf	??___flmul
  4454  0031  0832               	movf	??___flmul,w
  4455  0032  00B7               	movwf	___flmul@sign
  4456  0033                     l2224:
  4457  0033  082D               	movf	___flmul@b+3,w
  4458  0034  00B2               	movwf	??___flmul
  4459  0035  0732               	addwf	??___flmul,w
  4460  0036  00B3               	movwf	??___flmul+1
  4461  0037  0833               	movf	??___flmul+1,w
  4462  0038  00BD               	movwf	___flmul@bexp
  4463  0039                     l2226:
  4464  0039  1FAC               	btfss	___flmul@b+2,7
  4465  003A  283C               	goto	u1811
  4466  003B  283D               	goto	u1810
  4467  003C                     u1811:
  4468  003C  283E               	goto	l2230
  4469  003D                     u1810:
  4470  003D                     l2228:
  4471  003D  143D               	bsf	___flmul@bexp,0
  4472  003E                     l2230:
  4473  003E  083D               	movf	___flmul@bexp,w
  4474  003F  1903               	btfsc	3,2
  4475  0040  2842               	goto	u1821
  4476  0041  2843               	goto	u1820
  4477  0042                     u1821:
  4478  0042  2852               	goto	l2238
  4479  0043                     u1820:
  4480  0043                     l2232:
  4481  0043  0A3D               	incf	___flmul@bexp,w
  4482  0044  1D03               	btfss	3,2
  4483  0045  2847               	goto	u1831
  4484  0046  2848               	goto	u1830
  4485  0047                     u1831:
  4486  0047  2850               	goto	l2236
  4487  0048                     u1830:
  4488  0048                     l2234:
  4489  0048  3000               	movlw	0
  4490  0049  00AD               	movwf	___flmul@b+3
  4491  004A  3000               	movlw	0
  4492  004B  00AC               	movwf	___flmul@b+2
  4493  004C  3000               	movlw	0
  4494  004D  00AB               	movwf	___flmul@b+1
  4495  004E  3000               	movlw	0
  4496  004F  00AA               	movwf	___flmul@b
  4497  0050                     l2236:
  4498  0050  17AC               	bsf	___flmul@b+2,7
  4499  0051  285A               	goto	l2240
  4500  0052                     l2238:
  4501  0052  3000               	movlw	0
  4502  0053  00AD               	movwf	___flmul@b+3
  4503  0054  3000               	movlw	0
  4504  0055  00AC               	movwf	___flmul@b+2
  4505  0056  3000               	movlw	0
  4506  0057  00AB               	movwf	___flmul@b+1
  4507  0058  3000               	movlw	0
  4508  0059  00AA               	movwf	___flmul@b
  4509  005A                     l2240:
  4510  005A  0831               	movf	___flmul@a+3,w
  4511  005B  3980               	andlw	128
  4512  005C  00B2               	movwf	??___flmul
  4513  005D  0832               	movf	??___flmul,w
  4514  005E  06B7               	xorwf	___flmul@sign,f
  4515  005F                     l2242:
  4516  005F  0831               	movf	___flmul@a+3,w
  4517  0060  00B2               	movwf	??___flmul
  4518  0061  0732               	addwf	??___flmul,w
  4519  0062  00B3               	movwf	??___flmul+1
  4520  0063  0833               	movf	??___flmul+1,w
  4521  0064  00BC               	movwf	___flmul@aexp
  4522  0065                     l2244:
  4523  0065  1FB0               	btfss	___flmul@a+2,7
  4524  0066  2868               	goto	u1841
  4525  0067  2869               	goto	u1840
  4526  0068                     u1841:
  4527  0068  286A               	goto	l2248
  4528  0069                     u1840:
  4529  0069                     l2246:
  4530  0069  143C               	bsf	___flmul@aexp,0
  4531  006A                     l2248:
  4532  006A  083C               	movf	___flmul@aexp,w
  4533  006B  1903               	btfsc	3,2
  4534  006C  286E               	goto	u1851
  4535  006D  286F               	goto	u1850
  4536  006E                     u1851:
  4537  006E  287E               	goto	l2256
  4538  006F                     u1850:
  4539  006F                     l2250:
  4540  006F  0A3C               	incf	___flmul@aexp,w
  4541  0070  1D03               	btfss	3,2
  4542  0071  2873               	goto	u1861
  4543  0072  2874               	goto	u1860
  4544  0073                     u1861:
  4545  0073  287C               	goto	l2254
  4546  0074                     u1860:
  4547  0074                     l2252:
  4548  0074  3000               	movlw	0
  4549  0075  00B1               	movwf	___flmul@a+3
  4550  0076  3000               	movlw	0
  4551  0077  00B0               	movwf	___flmul@a+2
  4552  0078  3000               	movlw	0
  4553  0079  00AF               	movwf	___flmul@a+1
  4554  007A  3000               	movlw	0
  4555  007B  00AE               	movwf	___flmul@a
  4556  007C                     l2254:
  4557  007C  17B0               	bsf	___flmul@a+2,7
  4558  007D  2886               	goto	l2258
  4559  007E                     l2256:
  4560  007E  3000               	movlw	0
  4561  007F  00B1               	movwf	___flmul@a+3
  4562  0080  3000               	movlw	0
  4563  0081  00B0               	movwf	___flmul@a+2
  4564  0082  3000               	movlw	0
  4565  0083  00AF               	movwf	___flmul@a+1
  4566  0084  3000               	movlw	0
  4567  0085  00AE               	movwf	___flmul@a
  4568  0086                     l2258:
  4569  0086  083C               	movf	___flmul@aexp,w
  4570  0087  1903               	btfsc	3,2
  4571  0088  288A               	goto	u1871
  4572  0089  288B               	goto	u1870
  4573  008A                     u1871:
  4574  008A  2890               	goto	l2262
  4575  008B                     u1870:
  4576  008B                     l2260:
  4577  008B  083D               	movf	___flmul@bexp,w
  4578  008C  1D03               	btfss	3,2
  4579  008D  288F               	goto	u1881
  4580  008E  2890               	goto	u1880
  4581  008F                     u1881:
  4582  008F  2899               	goto	l2266
  4583  0090                     u1880:
  4584  0090                     l2262:
  4585  0090  3000               	movlw	0
  4586  0091  00AD               	movwf	?___flmul+3
  4587  0092  3000               	movlw	0
  4588  0093  00AC               	movwf	?___flmul+2
  4589  0094  3000               	movlw	0
  4590  0095  00AB               	movwf	?___flmul+1
  4591  0096  3000               	movlw	0
  4592  0097  00AA               	movwf	?___flmul
  4593  0098  2B8C               	goto	l683
  4594  0099                     l2266:
  4595  0099  082A               	movf	___flmul@b,w
  4596  009A  00B2               	movwf	??___flmul
  4597  009B  0832               	movf	??___flmul,w
  4598  009C  00F3               	movwf	__Umul8_16@multiplicand
  4599  009D  0830               	movf	___flmul@a+2,w
  4600  009E  120A  158A  23A8  120A  118A  	fcall	__Umul8_16
  4601  00A3  0874               	movf	?__Umul8_16+1,w
  4602  00A4  1283               	bcf	3,5	;RP0=0, select bank0
  4603  00A5  1303               	bcf	3,6	;RP1=0, select bank0
  4604  00A6  00C3               	movwf	___flmul@temp+1
  4605  00A7  0873               	movf	?__Umul8_16,w
  4606  00A8  00C2               	movwf	___flmul@temp
  4607  00A9                     l2268:
  4608  00A9  0842               	movf	___flmul@temp,w
  4609  00AA  00B2               	movwf	??___flmul
  4610  00AB  01B3               	clrf	??___flmul+1
  4611  00AC  01B4               	clrf	??___flmul+2
  4612  00AD  01B5               	clrf	??___flmul+3
  4613  00AE  0835               	movf	??___flmul+3,w
  4614  00AF  00BB               	movwf	___flmul@grs+3
  4615  00B0  0834               	movf	??___flmul+2,w
  4616  00B1  00BA               	movwf	___flmul@grs+2
  4617  00B2  0833               	movf	??___flmul+1,w
  4618  00B3  00B9               	movwf	___flmul@grs+1
  4619  00B4  0832               	movf	??___flmul,w
  4620  00B5  00B8               	movwf	___flmul@grs
  4621  00B6                     l2270:
  4622  00B6  0843               	movf	___flmul@temp+1,w
  4623  00B7  00B2               	movwf	??___flmul
  4624  00B8  01B3               	clrf	??___flmul+1
  4625  00B9  01B4               	clrf	??___flmul+2
  4626  00BA  01B5               	clrf	??___flmul+3
  4627  00BB  0835               	movf	??___flmul+3,w
  4628  00BC  00C1               	movwf	___flmul@prod+3
  4629  00BD  0834               	movf	??___flmul+2,w
  4630  00BE  00C0               	movwf	___flmul@prod+2
  4631  00BF  0833               	movf	??___flmul+1,w
  4632  00C0  00BF               	movwf	___flmul@prod+1
  4633  00C1  0832               	movf	??___flmul,w
  4634  00C2  00BE               	movwf	___flmul@prod
  4635  00C3  082B               	movf	___flmul@b+1,w
  4636  00C4  00B2               	movwf	??___flmul
  4637  00C5  0832               	movf	??___flmul,w
  4638  00C6  00F3               	movwf	__Umul8_16@multiplicand
  4639  00C7  082F               	movf	___flmul@a+1,w
  4640  00C8  120A  158A  23A8  120A  118A  	fcall	__Umul8_16
  4641  00CD  0874               	movf	?__Umul8_16+1,w
  4642  00CE  1283               	bcf	3,5	;RP0=0, select bank0
  4643  00CF  1303               	bcf	3,6	;RP1=0, select bank0
  4644  00D0  00C3               	movwf	___flmul@temp+1
  4645  00D1  0873               	movf	?__Umul8_16,w
  4646  00D2  00C2               	movwf	___flmul@temp
  4647  00D3                     l2272:
  4648  00D3  0842               	movf	___flmul@temp,w
  4649  00D4  00B2               	movwf	??___flmul
  4650  00D5  01B3               	clrf	??___flmul+1
  4651  00D6  01B4               	clrf	??___flmul+2
  4652  00D7  01B5               	clrf	??___flmul+3
  4653  00D8  0832               	movf	??___flmul,w
  4654  00D9  07B8               	addwf	___flmul@grs,f
  4655  00DA  0833               	movf	??___flmul+1,w
  4656  00DB  1103               	clrz
  4657  00DC  1803               	skipnc
  4658  00DD  3E01               	addlw	1
  4659  00DE  1903               	skipnz
  4660  00DF  28E1               	goto	u1891
  4661  00E0  07B9               	addwf	___flmul@grs+1,f
  4662  00E1                     u1891:
  4663  00E1  0834               	movf	??___flmul+2,w
  4664  00E2  1103               	clrz
  4665  00E3  1803               	skipnc
  4666  00E4  3E01               	addlw	1
  4667  00E5  1903               	skipnz
  4668  00E6  28E8               	goto	u1892
  4669  00E7  07BA               	addwf	___flmul@grs+2,f
  4670  00E8                     u1892:
  4671  00E8  0835               	movf	??___flmul+3,w
  4672  00E9  1103               	clrz
  4673  00EA  1803               	skipnc
  4674  00EB  3E01               	addlw	1
  4675  00EC  1903               	skipnz
  4676  00ED  28EF               	goto	u1893
  4677  00EE  07BB               	addwf	___flmul@grs+3,f
  4678  00EF                     u1893:
  4679  00EF                     l2274:
  4680  00EF  0843               	movf	___flmul@temp+1,w
  4681  00F0  00B2               	movwf	??___flmul
  4682  00F1  01B3               	clrf	??___flmul+1
  4683  00F2  01B4               	clrf	??___flmul+2
  4684  00F3  01B5               	clrf	??___flmul+3
  4685  00F4  0832               	movf	??___flmul,w
  4686  00F5  07BE               	addwf	___flmul@prod,f
  4687  00F6  0833               	movf	??___flmul+1,w
  4688  00F7  1103               	clrz
  4689  00F8  1803               	skipnc
  4690  00F9  3E01               	addlw	1
  4691  00FA  1903               	skipnz
  4692  00FB  28FD               	goto	u1901
  4693  00FC  07BF               	addwf	___flmul@prod+1,f
  4694  00FD                     u1901:
  4695  00FD  0834               	movf	??___flmul+2,w
  4696  00FE  1103               	clrz
  4697  00FF  1803               	skipnc
  4698  0100  3E01               	addlw	1
  4699  0101  1903               	skipnz
  4700  0102  2904               	goto	u1902
  4701  0103  07C0               	addwf	___flmul@prod+2,f
  4702  0104                     u1902:
  4703  0104  0835               	movf	??___flmul+3,w
  4704  0105  1103               	clrz
  4705  0106  1803               	skipnc
  4706  0107  3E01               	addlw	1
  4707  0108  1903               	skipnz
  4708  0109  290B               	goto	u1903
  4709  010A  07C1               	addwf	___flmul@prod+3,f
  4710  010B                     u1903:
  4711  010B  082C               	movf	___flmul@b+2,w
  4712  010C  00B2               	movwf	??___flmul
  4713  010D  0832               	movf	??___flmul,w
  4714  010E  00F3               	movwf	__Umul8_16@multiplicand
  4715  010F  082E               	movf	___flmul@a,w
  4716  0110  120A  158A  23A8  120A  118A  	fcall	__Umul8_16
  4717  0115  0874               	movf	?__Umul8_16+1,w
  4718  0116  1283               	bcf	3,5	;RP0=0, select bank0
  4719  0117  1303               	bcf	3,6	;RP1=0, select bank0
  4720  0118  00C3               	movwf	___flmul@temp+1
  4721  0119  0873               	movf	?__Umul8_16,w
  4722  011A  00C2               	movwf	___flmul@temp
  4723  011B                     l2276:
  4724  011B  0842               	movf	___flmul@temp,w
  4725  011C  00B2               	movwf	??___flmul
  4726  011D  01B3               	clrf	??___flmul+1
  4727  011E  01B4               	clrf	??___flmul+2
  4728  011F  01B5               	clrf	??___flmul+3
  4729  0120  0832               	movf	??___flmul,w
  4730  0121  07B8               	addwf	___flmul@grs,f
  4731  0122  0833               	movf	??___flmul+1,w
  4732  0123  1103               	clrz
  4733  0124  1803               	skipnc
  4734  0125  3E01               	addlw	1
  4735  0126  1903               	skipnz
  4736  0127  2929               	goto	u1911
  4737  0128  07B9               	addwf	___flmul@grs+1,f
  4738  0129                     u1911:
  4739  0129  0834               	movf	??___flmul+2,w
  4740  012A  1103               	clrz
  4741  012B  1803               	skipnc
  4742  012C  3E01               	addlw	1
  4743  012D  1903               	skipnz
  4744  012E  2930               	goto	u1912
  4745  012F  07BA               	addwf	___flmul@grs+2,f
  4746  0130                     u1912:
  4747  0130  0835               	movf	??___flmul+3,w
  4748  0131  1103               	clrz
  4749  0132  1803               	skipnc
  4750  0133  3E01               	addlw	1
  4751  0134  1903               	skipnz
  4752  0135  2937               	goto	u1913
  4753  0136  07BB               	addwf	___flmul@grs+3,f
  4754  0137                     u1913:
  4755  0137                     l2278:
  4756  0137  0843               	movf	___flmul@temp+1,w
  4757  0138  00B2               	movwf	??___flmul
  4758  0139  01B3               	clrf	??___flmul+1
  4759  013A  01B4               	clrf	??___flmul+2
  4760  013B  01B5               	clrf	??___flmul+3
  4761  013C  0832               	movf	??___flmul,w
  4762  013D  07BE               	addwf	___flmul@prod,f
  4763  013E  0833               	movf	??___flmul+1,w
  4764  013F  1103               	clrz
  4765  0140  1803               	skipnc
  4766  0141  3E01               	addlw	1
  4767  0142  1903               	skipnz
  4768  0143  2945               	goto	u1921
  4769  0144  07BF               	addwf	___flmul@prod+1,f
  4770  0145                     u1921:
  4771  0145  0834               	movf	??___flmul+2,w
  4772  0146  1103               	clrz
  4773  0147  1803               	skipnc
  4774  0148  3E01               	addlw	1
  4775  0149  1903               	skipnz
  4776  014A  294C               	goto	u1922
  4777  014B  07C0               	addwf	___flmul@prod+2,f
  4778  014C                     u1922:
  4779  014C  0835               	movf	??___flmul+3,w
  4780  014D  1103               	clrz
  4781  014E  1803               	skipnc
  4782  014F  3E01               	addlw	1
  4783  0150  1903               	skipnz
  4784  0151  2953               	goto	u1923
  4785  0152  07C1               	addwf	___flmul@prod+3,f
  4786  0153                     u1923:
  4787  0153                     l2280:
  4788  0153  3008               	movlw	8
  4789  0154  00B2               	movwf	??___flmul
  4790  0155                     u1935:
  4791  0155  1003               	clrc
  4792  0156  0DB8               	rlf	___flmul@grs,f
  4793  0157  0DB9               	rlf	___flmul@grs+1,f
  4794  0158  0DBA               	rlf	___flmul@grs+2,f
  4795  0159  0DBB               	rlf	___flmul@grs+3,f
  4796  015A  0BB2               	decfsz	??___flmul,f
  4797  015B  2955               	goto	u1935
  4798  015C                     l2282:
  4799  015C  082B               	movf	___flmul@b+1,w
  4800  015D  00B2               	movwf	??___flmul
  4801  015E  0832               	movf	??___flmul,w
  4802  015F  00F3               	movwf	__Umul8_16@multiplicand
  4803  0160  082E               	movf	___flmul@a,w
  4804  0161  120A  158A  23A8  120A  118A  	fcall	__Umul8_16
  4805  0166  0874               	movf	?__Umul8_16+1,w
  4806  0167  1283               	bcf	3,5	;RP0=0, select bank0
  4807  0168  1303               	bcf	3,6	;RP1=0, select bank0
  4808  0169  00C3               	movwf	___flmul@temp+1
  4809  016A  0873               	movf	?__Umul8_16,w
  4810  016B  00C2               	movwf	___flmul@temp
  4811  016C                     l2284:
  4812  016C  0842               	movf	___flmul@temp,w
  4813  016D  00B2               	movwf	??___flmul
  4814  016E  0843               	movf	___flmul@temp+1,w
  4815  016F  00B3               	movwf	??___flmul+1
  4816  0170  01B4               	clrf	??___flmul+2
  4817  0171  01B5               	clrf	??___flmul+3
  4818  0172  0832               	movf	??___flmul,w
  4819  0173  07B8               	addwf	___flmul@grs,f
  4820  0174  0833               	movf	??___flmul+1,w
  4821  0175  1103               	clrz
  4822  0176  1803               	skipnc
  4823  0177  3E01               	addlw	1
  4824  0178  1903               	skipnz
  4825  0179  297B               	goto	u1941
  4826  017A  07B9               	addwf	___flmul@grs+1,f
  4827  017B                     u1941:
  4828  017B  0834               	movf	??___flmul+2,w
  4829  017C  1103               	clrz
  4830  017D  1803               	skipnc
  4831  017E  3E01               	addlw	1
  4832  017F  1903               	skipnz
  4833  0180  2982               	goto	u1942
  4834  0181  07BA               	addwf	___flmul@grs+2,f
  4835  0182                     u1942:
  4836  0182  0835               	movf	??___flmul+3,w
  4837  0183  1103               	clrz
  4838  0184  1803               	skipnc
  4839  0185  3E01               	addlw	1
  4840  0186  1903               	skipnz
  4841  0187  2989               	goto	u1943
  4842  0188  07BB               	addwf	___flmul@grs+3,f
  4843  0189                     u1943:
  4844  0189                     l2286:
  4845  0189  082A               	movf	___flmul@b,w
  4846  018A  00B2               	movwf	??___flmul
  4847  018B  0832               	movf	??___flmul,w
  4848  018C  00F3               	movwf	__Umul8_16@multiplicand
  4849  018D  082F               	movf	___flmul@a+1,w
  4850  018E  120A  158A  23A8  120A  118A  	fcall	__Umul8_16
  4851  0193  0874               	movf	?__Umul8_16+1,w
  4852  0194  1283               	bcf	3,5	;RP0=0, select bank0
  4853  0195  1303               	bcf	3,6	;RP1=0, select bank0
  4854  0196  00C3               	movwf	___flmul@temp+1
  4855  0197  0873               	movf	?__Umul8_16,w
  4856  0198  00C2               	movwf	___flmul@temp
  4857  0199                     l2288:
  4858  0199  0842               	movf	___flmul@temp,w
  4859  019A  00B2               	movwf	??___flmul
  4860  019B  0843               	movf	___flmul@temp+1,w
  4861  019C  00B3               	movwf	??___flmul+1
  4862  019D  01B4               	clrf	??___flmul+2
  4863  019E  01B5               	clrf	??___flmul+3
  4864  019F  0832               	movf	??___flmul,w
  4865  01A0  07B8               	addwf	___flmul@grs,f
  4866  01A1  0833               	movf	??___flmul+1,w
  4867  01A2  1103               	clrz
  4868  01A3  1803               	skipnc
  4869  01A4  3E01               	addlw	1
  4870  01A5  1903               	skipnz
  4871  01A6  29A8               	goto	u1951
  4872  01A7  07B9               	addwf	___flmul@grs+1,f
  4873  01A8                     u1951:
  4874  01A8  0834               	movf	??___flmul+2,w
  4875  01A9  1103               	clrz
  4876  01AA  1803               	skipnc
  4877  01AB  3E01               	addlw	1
  4878  01AC  1903               	skipnz
  4879  01AD  29AF               	goto	u1952
  4880  01AE  07BA               	addwf	___flmul@grs+2,f
  4881  01AF                     u1952:
  4882  01AF  0835               	movf	??___flmul+3,w
  4883  01B0  1103               	clrz
  4884  01B1  1803               	skipnc
  4885  01B2  3E01               	addlw	1
  4886  01B3  1903               	skipnz
  4887  01B4  29B6               	goto	u1953
  4888  01B5  07BB               	addwf	___flmul@grs+3,f
  4889  01B6                     u1953:
  4890  01B6                     l2290:
  4891  01B6  3008               	movlw	8
  4892  01B7  00B2               	movwf	??___flmul
  4893  01B8                     u1965:
  4894  01B8  1003               	clrc
  4895  01B9  0DB8               	rlf	___flmul@grs,f
  4896  01BA  0DB9               	rlf	___flmul@grs+1,f
  4897  01BB  0DBA               	rlf	___flmul@grs+2,f
  4898  01BC  0DBB               	rlf	___flmul@grs+3,f
  4899  01BD  0BB2               	decfsz	??___flmul,f
  4900  01BE  29B8               	goto	u1965
  4901  01BF  082A               	movf	___flmul@b,w
  4902  01C0  00B2               	movwf	??___flmul
  4903  01C1  0832               	movf	??___flmul,w
  4904  01C2  00F3               	movwf	__Umul8_16@multiplicand
  4905  01C3  082E               	movf	___flmul@a,w
  4906  01C4  120A  158A  23A8  120A  118A  	fcall	__Umul8_16
  4907  01C9  0874               	movf	?__Umul8_16+1,w
  4908  01CA  1283               	bcf	3,5	;RP0=0, select bank0
  4909  01CB  1303               	bcf	3,6	;RP1=0, select bank0
  4910  01CC  00C3               	movwf	___flmul@temp+1
  4911  01CD  0873               	movf	?__Umul8_16,w
  4912  01CE  00C2               	movwf	___flmul@temp
  4913  01CF                     l2292:
  4914  01CF  0842               	movf	___flmul@temp,w
  4915  01D0  00B2               	movwf	??___flmul
  4916  01D1  0843               	movf	___flmul@temp+1,w
  4917  01D2  00B3               	movwf	??___flmul+1
  4918  01D3  01B4               	clrf	??___flmul+2
  4919  01D4  01B5               	clrf	??___flmul+3
  4920  01D5  0832               	movf	??___flmul,w
  4921  01D6  07B8               	addwf	___flmul@grs,f
  4922  01D7  0833               	movf	??___flmul+1,w
  4923  01D8  1103               	clrz
  4924  01D9  1803               	skipnc
  4925  01DA  3E01               	addlw	1
  4926  01DB  1903               	skipnz
  4927  01DC  29DE               	goto	u1971
  4928  01DD  07B9               	addwf	___flmul@grs+1,f
  4929  01DE                     u1971:
  4930  01DE  0834               	movf	??___flmul+2,w
  4931  01DF  1103               	clrz
  4932  01E0  1803               	skipnc
  4933  01E1  3E01               	addlw	1
  4934  01E2  1903               	skipnz
  4935  01E3  29E5               	goto	u1972
  4936  01E4  07BA               	addwf	___flmul@grs+2,f
  4937  01E5                     u1972:
  4938  01E5  0835               	movf	??___flmul+3,w
  4939  01E6  1103               	clrz
  4940  01E7  1803               	skipnc
  4941  01E8  3E01               	addlw	1
  4942  01E9  1903               	skipnz
  4943  01EA  29EC               	goto	u1973
  4944  01EB  07BB               	addwf	___flmul@grs+3,f
  4945  01EC                     u1973:
  4946  01EC                     l2294:
  4947  01EC  082B               	movf	___flmul@b+1,w
  4948  01ED  00B2               	movwf	??___flmul
  4949  01EE  0832               	movf	??___flmul,w
  4950  01EF  00F3               	movwf	__Umul8_16@multiplicand
  4951  01F0  0830               	movf	___flmul@a+2,w
  4952  01F1  120A  158A  23A8  120A  118A  	fcall	__Umul8_16
  4953  01F6  0874               	movf	?__Umul8_16+1,w
  4954  01F7  1283               	bcf	3,5	;RP0=0, select bank0
  4955  01F8  1303               	bcf	3,6	;RP1=0, select bank0
  4956  01F9  00C3               	movwf	___flmul@temp+1
  4957  01FA  0873               	movf	?__Umul8_16,w
  4958  01FB  00C2               	movwf	___flmul@temp
  4959  01FC  0842               	movf	___flmul@temp,w
  4960  01FD  00B2               	movwf	??___flmul
  4961  01FE  0843               	movf	___flmul@temp+1,w
  4962  01FF  00B3               	movwf	??___flmul+1
  4963  0200  01B4               	clrf	??___flmul+2
  4964  0201  01B5               	clrf	??___flmul+3
  4965  0202  0832               	movf	??___flmul,w
  4966  0203  07BE               	addwf	___flmul@prod,f
  4967  0204  0833               	movf	??___flmul+1,w
  4968  0205  1103               	clrz
  4969  0206  1803               	skipnc
  4970  0207  3E01               	addlw	1
  4971  0208  1903               	skipnz
  4972  0209  2A0B               	goto	u1981
  4973  020A  07BF               	addwf	___flmul@prod+1,f
  4974  020B                     u1981:
  4975  020B  0834               	movf	??___flmul+2,w
  4976  020C  1103               	clrz
  4977  020D  1803               	skipnc
  4978  020E  3E01               	addlw	1
  4979  020F  1903               	skipnz
  4980  0210  2A12               	goto	u1982
  4981  0211  07C0               	addwf	___flmul@prod+2,f
  4982  0212                     u1982:
  4983  0212  0835               	movf	??___flmul+3,w
  4984  0213  1103               	clrz
  4985  0214  1803               	skipnc
  4986  0215  3E01               	addlw	1
  4987  0216  1903               	skipnz
  4988  0217  2A19               	goto	u1983
  4989  0218  07C1               	addwf	___flmul@prod+3,f
  4990  0219                     u1983:
  4991  0219                     l2296:
  4992  0219  082C               	movf	___flmul@b+2,w
  4993  021A  00B2               	movwf	??___flmul
  4994  021B  0832               	movf	??___flmul,w
  4995  021C  00F3               	movwf	__Umul8_16@multiplicand
  4996  021D  082F               	movf	___flmul@a+1,w
  4997  021E  120A  158A  23A8  120A  118A  	fcall	__Umul8_16
  4998  0223  0874               	movf	?__Umul8_16+1,w
  4999  0224  1283               	bcf	3,5	;RP0=0, select bank0
  5000  0225  1303               	bcf	3,6	;RP1=0, select bank0
  5001  0226  00C3               	movwf	___flmul@temp+1
  5002  0227  0873               	movf	?__Umul8_16,w
  5003  0228  00C2               	movwf	___flmul@temp
  5004  0229                     l2298:
  5005  0229  0842               	movf	___flmul@temp,w
  5006  022A  00B2               	movwf	??___flmul
  5007  022B  0843               	movf	___flmul@temp+1,w
  5008  022C  00B3               	movwf	??___flmul+1
  5009  022D  01B4               	clrf	??___flmul+2
  5010  022E  01B5               	clrf	??___flmul+3
  5011  022F  0832               	movf	??___flmul,w
  5012  0230  07BE               	addwf	___flmul@prod,f
  5013  0231  0833               	movf	??___flmul+1,w
  5014  0232  1103               	clrz
  5015  0233  1803               	skipnc
  5016  0234  3E01               	addlw	1
  5017  0235  1903               	skipnz
  5018  0236  2A38               	goto	u1991
  5019  0237  07BF               	addwf	___flmul@prod+1,f
  5020  0238                     u1991:
  5021  0238  0834               	movf	??___flmul+2,w
  5022  0239  1103               	clrz
  5023  023A  1803               	skipnc
  5024  023B  3E01               	addlw	1
  5025  023C  1903               	skipnz
  5026  023D  2A3F               	goto	u1992
  5027  023E  07C0               	addwf	___flmul@prod+2,f
  5028  023F                     u1992:
  5029  023F  0835               	movf	??___flmul+3,w
  5030  0240  1103               	clrz
  5031  0241  1803               	skipnc
  5032  0242  3E01               	addlw	1
  5033  0243  1903               	skipnz
  5034  0244  2A46               	goto	u1993
  5035  0245  07C1               	addwf	___flmul@prod+3,f
  5036  0246                     u1993:
  5037  0246  082C               	movf	___flmul@b+2,w
  5038  0247  00B2               	movwf	??___flmul
  5039  0248  0832               	movf	??___flmul,w
  5040  0249  00F3               	movwf	__Umul8_16@multiplicand
  5041  024A  0830               	movf	___flmul@a+2,w
  5042  024B  120A  158A  23A8  120A  118A  	fcall	__Umul8_16
  5043  0250  0874               	movf	?__Umul8_16+1,w
  5044  0251  1283               	bcf	3,5	;RP0=0, select bank0
  5045  0252  1303               	bcf	3,6	;RP1=0, select bank0
  5046  0253  00C3               	movwf	___flmul@temp+1
  5047  0254  0873               	movf	?__Umul8_16,w
  5048  0255  00C2               	movwf	___flmul@temp
  5049  0256                     l2300:
  5050  0256  0842               	movf	___flmul@temp,w
  5051  0257  00B2               	movwf	??___flmul
  5052  0258  0843               	movf	___flmul@temp+1,w
  5053  0259  00B3               	movwf	??___flmul+1
  5054  025A  01B4               	clrf	??___flmul+2
  5055  025B  01B5               	clrf	??___flmul+3
  5056  025C  3008               	movlw	8
  5057  025D                     u2005:
  5058  025D  1003               	clrc
  5059  025E  0DB2               	rlf	??___flmul,f
  5060  025F  0DB3               	rlf	??___flmul+1,f
  5061  0260  0DB4               	rlf	??___flmul+2,f
  5062  0261  0DB5               	rlf	??___flmul+3,f
  5063  0262                     u2000:
  5064  0262  3EFF               	addlw	-1
  5065  0263  1D03               	skipz
  5066  0264  2A5D               	goto	u2005
  5067  0265  0832               	movf	??___flmul,w
  5068  0266  07BE               	addwf	___flmul@prod,f
  5069  0267  0833               	movf	??___flmul+1,w
  5070  0268  1103               	clrz
  5071  0269  1803               	skipnc
  5072  026A  3E01               	addlw	1
  5073  026B  1903               	skipnz
  5074  026C  2A6E               	goto	u2011
  5075  026D  07BF               	addwf	___flmul@prod+1,f
  5076  026E                     u2011:
  5077  026E  0834               	movf	??___flmul+2,w
  5078  026F  1103               	clrz
  5079  0270  1803               	skipnc
  5080  0271  3E01               	addlw	1
  5081  0272  1903               	skipnz
  5082  0273  2A75               	goto	u2012
  5083  0274  07C0               	addwf	___flmul@prod+2,f
  5084  0275                     u2012:
  5085  0275  0835               	movf	??___flmul+3,w
  5086  0276  1103               	clrz
  5087  0277  1803               	skipnc
  5088  0278  3E01               	addlw	1
  5089  0279  1903               	skipnz
  5090  027A  2A7C               	goto	u2013
  5091  027B  07C1               	addwf	___flmul@prod+3,f
  5092  027C                     u2013:
  5093  027C                     l2302:
  5094  027C  0838               	movf	___flmul@grs,w
  5095  027D  00B2               	movwf	??___flmul
  5096  027E  0839               	movf	___flmul@grs+1,w
  5097  027F  00B3               	movwf	??___flmul+1
  5098  0280  083A               	movf	___flmul@grs+2,w
  5099  0281  00B4               	movwf	??___flmul+2
  5100  0282  083B               	movf	___flmul@grs+3,w
  5101  0283  00B5               	movwf	??___flmul+3
  5102  0284  3018               	movlw	24
  5103  0285                     u2025:
  5104  0285  1003               	clrc
  5105  0286  0CB5               	rrf	??___flmul+3,f
  5106  0287  0CB4               	rrf	??___flmul+2,f
  5107  0288  0CB3               	rrf	??___flmul+1,f
  5108  0289  0CB2               	rrf	??___flmul,f
  5109  028A                     u2020:
  5110  028A  3EFF               	addlw	-1
  5111  028B  1D03               	skipz
  5112  028C  2A85               	goto	u2025
  5113  028D  0832               	movf	??___flmul,w
  5114  028E  07BE               	addwf	___flmul@prod,f
  5115  028F  0833               	movf	??___flmul+1,w
  5116  0290  1103               	clrz
  5117  0291  1803               	skipnc
  5118  0292  3E01               	addlw	1
  5119  0293  1903               	skipnz
  5120  0294  2A96               	goto	u2031
  5121  0295  07BF               	addwf	___flmul@prod+1,f
  5122  0296                     u2031:
  5123  0296  0834               	movf	??___flmul+2,w
  5124  0297  1103               	clrz
  5125  0298  1803               	skipnc
  5126  0299  3E01               	addlw	1
  5127  029A  1903               	skipnz
  5128  029B  2A9D               	goto	u2032
  5129  029C  07C0               	addwf	___flmul@prod+2,f
  5130  029D                     u2032:
  5131  029D  0835               	movf	??___flmul+3,w
  5132  029E  1103               	clrz
  5133  029F  1803               	skipnc
  5134  02A0  3E01               	addlw	1
  5135  02A1  1903               	skipnz
  5136  02A2  2AA4               	goto	u2033
  5137  02A3  07C1               	addwf	___flmul@prod+3,f
  5138  02A4                     u2033:
  5139  02A4                     l2304:
  5140  02A4  3008               	movlw	8
  5141  02A5  00B2               	movwf	??___flmul
  5142  02A6                     u2045:
  5143  02A6  1003               	clrc
  5144  02A7  0DB8               	rlf	___flmul@grs,f
  5145  02A8  0DB9               	rlf	___flmul@grs+1,f
  5146  02A9  0DBA               	rlf	___flmul@grs+2,f
  5147  02AA  0DBB               	rlf	___flmul@grs+3,f
  5148  02AB  0BB2               	decfsz	??___flmul,f
  5149  02AC  2AA6               	goto	u2045
  5150  02AD                     l2306:
  5151  02AD  083D               	movf	___flmul@bexp,w
  5152  02AE  073C               	addwf	___flmul@aexp,w
  5153  02AF  00B2               	movwf	??___flmul
  5154  02B0  01B3               	clrf	??___flmul+1
  5155  02B1  0DB3               	rlf	??___flmul+1,f
  5156  02B2  0832               	movf	??___flmul,w
  5157  02B3  3E82               	addlw	130
  5158  02B4  00C2               	movwf	___flmul@temp
  5159  02B5  0833               	movf	??___flmul+1,w
  5160  02B6  1803               	skipnc
  5161  02B7  3E01               	addlw	1
  5162  02B8  3EFF               	addlw	255
  5163  02B9  00C3               	movwf	___flmul@temp+1
  5164  02BA  2AD8               	goto	l2318
  5165  02BB                     l2308:
  5166  02BB  3001               	movlw	1
  5167  02BC  00B2               	movwf	??___flmul
  5168  02BD                     u2055:
  5169  02BD  1003               	clrc
  5170  02BE  0DBE               	rlf	___flmul@prod,f
  5171  02BF  0DBF               	rlf	___flmul@prod+1,f
  5172  02C0  0DC0               	rlf	___flmul@prod+2,f
  5173  02C1  0DC1               	rlf	___flmul@prod+3,f
  5174  02C2  0BB2               	decfsz	??___flmul,f
  5175  02C3  2ABD               	goto	u2055
  5176  02C4                     l2310:
  5177  02C4  1FBB               	btfss	___flmul@grs+3,7
  5178  02C5  2AC7               	goto	u2061
  5179  02C6  2AC8               	goto	u2060
  5180  02C7                     u2061:
  5181  02C7  2AC9               	goto	l2314
  5182  02C8                     u2060:
  5183  02C8                     l2312:
  5184  02C8  143E               	bsf	___flmul@prod,0
  5185  02C9                     l2314:
  5186  02C9  3001               	movlw	1
  5187  02CA  00B2               	movwf	??___flmul
  5188  02CB                     u2075:
  5189  02CB  1003               	clrc
  5190  02CC  0DB8               	rlf	___flmul@grs,f
  5191  02CD  0DB9               	rlf	___flmul@grs+1,f
  5192  02CE  0DBA               	rlf	___flmul@grs+2,f
  5193  02CF  0DBB               	rlf	___flmul@grs+3,f
  5194  02D0  0BB2               	decfsz	??___flmul,f
  5195  02D1  2ACB               	goto	u2075
  5196  02D2                     l2316:
  5197  02D2  30FF               	movlw	255
  5198  02D3  07C2               	addwf	___flmul@temp,f
  5199  02D4  1803               	skipnc
  5200  02D5  0AC3               	incf	___flmul@temp+1,f
  5201  02D6  30FF               	movlw	255
  5202  02D7  07C3               	addwf	___flmul@temp+1,f
  5203  02D8                     l2318:
  5204  02D8  1FC0               	btfss	___flmul@prod+2,7
  5205  02D9  2ADB               	goto	u2081
  5206  02DA  2ADC               	goto	u2080
  5207  02DB                     u2081:
  5208  02DB  2ABB               	goto	l2308
  5209  02DC                     u2080:
  5210  02DC                     l2320:
  5211  02DC  01BC               	clrf	___flmul@aexp
  5212  02DD                     l2322:
  5213  02DD  1FBB               	btfss	___flmul@grs+3,7
  5214  02DE  2AE0               	goto	u2091
  5215  02DF  2AE1               	goto	u2090
  5216  02E0                     u2091:
  5217  02E0  2AFD               	goto	l2330
  5218  02E1                     u2090:
  5219  02E1                     l2324:
  5220  02E1  30FF               	movlw	255
  5221  02E2  0538               	andwf	___flmul@grs,w
  5222  02E3  00B2               	movwf	??___flmul
  5223  02E4  30FF               	movlw	255
  5224  02E5  0539               	andwf	___flmul@grs+1,w
  5225  02E6  00B3               	movwf	??___flmul+1
  5226  02E7  30FF               	movlw	255
  5227  02E8  053A               	andwf	___flmul@grs+2,w
  5228  02E9  00B4               	movwf	??___flmul+2
  5229  02EA  307F               	movlw	127
  5230  02EB  053B               	andwf	___flmul@grs+3,w
  5231  02EC  00B5               	movwf	??___flmul+3
  5232  02ED  0835               	movf	??___flmul+3,w
  5233  02EE  0434               	iorwf	??___flmul+2,w
  5234  02EF  0433               	iorwf	??___flmul+1,w
  5235  02F0  0432               	iorwf	??___flmul,w
  5236  02F1  1903               	skipnz
  5237  02F2  2AF4               	goto	u2101
  5238  02F3  2AF5               	goto	u2100
  5239  02F4                     u2101:
  5240  02F4  2AF8               	goto	l689
  5241  02F5                     u2100:
  5242  02F5                     l2326:
  5243  02F5  01BC               	clrf	___flmul@aexp
  5244  02F6  0ABC               	incf	___flmul@aexp,f
  5245  02F7  2AFD               	goto	l2330
  5246  02F8                     l689:
  5247  02F8  1C3E               	btfss	___flmul@prod,0
  5248  02F9  2AFB               	goto	u2111
  5249  02FA  2AFC               	goto	u2110
  5250  02FB                     u2111:
  5251  02FB  2AFD               	goto	l2330
  5252  02FC                     u2110:
  5253  02FC  2AF5               	goto	l2326
  5254  02FD                     l2330:
  5255  02FD  083C               	movf	___flmul@aexp,w
  5256  02FE  1903               	btfsc	3,2
  5257  02FF  2B01               	goto	u2121
  5258  0300  2B02               	goto	u2120
  5259  0301                     u2121:
  5260  0301  2B33               	goto	l2340
  5261  0302                     u2120:
  5262  0302                     l2332:
  5263  0302  3001               	movlw	1
  5264  0303  07BE               	addwf	___flmul@prod,f
  5265  0304  3000               	movlw	0
  5266  0305  1803               	skipnc
  5267  0306  3001               	movlw	1
  5268  0307  07BF               	addwf	___flmul@prod+1,f
  5269  0308  3000               	movlw	0
  5270  0309  1803               	skipnc
  5271  030A  3001               	movlw	1
  5272  030B  07C0               	addwf	___flmul@prod+2,f
  5273  030C  3000               	movlw	0
  5274  030D  1803               	skipnc
  5275  030E  3001               	movlw	1
  5276  030F  07C1               	addwf	___flmul@prod+3,f
  5277  0310                     l2334:
  5278  0310  1C41               	btfss	___flmul@prod+3,0
  5279  0311  2B13               	goto	u2131
  5280  0312  2B14               	goto	u2130
  5281  0313                     u2131:
  5282  0313  2B33               	goto	l2340
  5283  0314                     u2130:
  5284  0314                     l2336:
  5285  0314  083E               	movf	___flmul@prod,w
  5286  0315  00B2               	movwf	??___flmul
  5287  0316  083F               	movf	___flmul@prod+1,w
  5288  0317  00B3               	movwf	??___flmul+1
  5289  0318  0840               	movf	___flmul@prod+2,w
  5290  0319  00B4               	movwf	??___flmul+2
  5291  031A  0841               	movf	___flmul@prod+3,w
  5292  031B  00B5               	movwf	??___flmul+3
  5293  031C  3001               	movlw	1
  5294  031D  00B6               	movwf	??___flmul+4
  5295  031E                     u2145:
  5296  031E  0D35               	rlf	??___flmul+3,w
  5297  031F  0CB5               	rrf	??___flmul+3,f
  5298  0320  0CB4               	rrf	??___flmul+2,f
  5299  0321  0CB3               	rrf	??___flmul+1,f
  5300  0322  0CB2               	rrf	??___flmul,f
  5301  0323                     u2140:
  5302  0323  0BB6               	decfsz	??___flmul+4,f
  5303  0324  2B1E               	goto	u2145
  5304  0325  0835               	movf	??___flmul+3,w
  5305  0326  00C1               	movwf	___flmul@prod+3
  5306  0327  0834               	movf	??___flmul+2,w
  5307  0328  00C0               	movwf	___flmul@prod+2
  5308  0329  0833               	movf	??___flmul+1,w
  5309  032A  00BF               	movwf	___flmul@prod+1
  5310  032B  0832               	movf	??___flmul,w
  5311  032C  00BE               	movwf	___flmul@prod
  5312  032D                     l2338:
  5313  032D  3001               	movlw	1
  5314  032E  07C2               	addwf	___flmul@temp,f
  5315  032F  1803               	skipnc
  5316  0330  0AC3               	incf	___flmul@temp+1,f
  5317  0331  3000               	movlw	0
  5318  0332  07C3               	addwf	___flmul@temp+1,f
  5319  0333                     l2340:
  5320  0333  0843               	movf	___flmul@temp+1,w
  5321  0334  3A80               	xorlw	128
  5322  0335  00FF               	movwf	btemp+1
  5323  0336  3080               	movlw	128
  5324  0337  027F               	subwf	btemp+1,w
  5325  0338  1D03               	skipz
  5326  0339  2B3C               	goto	u2155
  5327  033A  30FF               	movlw	255
  5328  033B  0242               	subwf	___flmul@temp,w
  5329  033C                     u2155:
  5330  033C  1C03               	skipc
  5331  033D  2B3F               	goto	u2151
  5332  033E  2B40               	goto	u2150
  5333  033F                     u2151:
  5334  033F  2B4B               	goto	l2344
  5335  0340                     u2150:
  5336  0340                     l2342:
  5337  0340  307F               	movlw	127
  5338  0341  1283               	bcf	3,5	;RP0=0, select bank0
  5339  0342  1303               	bcf	3,6	;RP1=0, select bank0
  5340  0343  00C1               	movwf	___flmul@prod+3
  5341  0344  3080               	movlw	128
  5342  0345  00C0               	movwf	___flmul@prod+2
  5343  0346  3000               	movlw	0
  5344  0347  00BF               	movwf	___flmul@prod+1
  5345  0348  3000               	movlw	0
  5346  0349  00BE               	movwf	___flmul@prod
  5347  034A  2B80               	goto	l695
  5348  034B                     l2344:
  5349  034B  1283               	bcf	3,5	;RP0=0, select bank0
  5350  034C  1303               	bcf	3,6	;RP1=0, select bank0
  5351  034D  0843               	movf	___flmul@temp+1,w
  5352  034E  3A80               	xorlw	128
  5353  034F  00FF               	movwf	btemp+1
  5354  0350  3080               	movlw	128
  5355  0351  027F               	subwf	btemp+1,w
  5356  0352  1D03               	skipz
  5357  0353  2B56               	goto	u2165
  5358  0354  3001               	movlw	1
  5359  0355  0242               	subwf	___flmul@temp,w
  5360  0356                     u2165:
  5361  0356  1803               	skipnc
  5362  0357  2B59               	goto	u2161
  5363  0358  2B5A               	goto	u2160
  5364  0359                     u2161:
  5365  0359  2B66               	goto	l2350
  5366  035A                     u2160:
  5367  035A                     l2346:
  5368  035A  3000               	movlw	0
  5369  035B  1283               	bcf	3,5	;RP0=0, select bank0
  5370  035C  1303               	bcf	3,6	;RP1=0, select bank0
  5371  035D  00C1               	movwf	___flmul@prod+3
  5372  035E  3000               	movlw	0
  5373  035F  00C0               	movwf	___flmul@prod+2
  5374  0360  3000               	movlw	0
  5375  0361  00BF               	movwf	___flmul@prod+1
  5376  0362  3000               	movlw	0
  5377  0363  00BE               	movwf	___flmul@prod
  5378  0364                     l2348:
  5379  0364  01B7               	clrf	___flmul@sign
  5380  0365  2B80               	goto	l695
  5381  0366                     l2350:
  5382  0366  1283               	bcf	3,5	;RP0=0, select bank0
  5383  0367  1303               	bcf	3,6	;RP1=0, select bank0
  5384  0368  0842               	movf	___flmul@temp,w
  5385  0369  00B2               	movwf	??___flmul
  5386  036A  0832               	movf	??___flmul,w
  5387  036B  00BD               	movwf	___flmul@bexp
  5388  036C  30FF               	movlw	255
  5389  036D  05BE               	andwf	___flmul@prod,f
  5390  036E  30FF               	movlw	255
  5391  036F  05BF               	andwf	___flmul@prod+1,f
  5392  0370  307F               	movlw	127
  5393  0371  05C0               	andwf	___flmul@prod+2,f
  5394  0372  3000               	movlw	0
  5395  0373  05C1               	andwf	___flmul@prod+3,f
  5396  0374                     l2352:
  5397  0374  1C3D               	btfss	___flmul@bexp,0
  5398  0375  2B77               	goto	u2171
  5399  0376  2B78               	goto	u2170
  5400  0377                     u2171:
  5401  0377  2B79               	goto	l2356
  5402  0378                     u2170:
  5403  0378                     l2354:
  5404  0378  17C0               	bsf	___flmul@prod+2,7
  5405  0379                     l2356:
  5406  0379  083D               	movf	___flmul@bexp,w
  5407  037A  00B2               	movwf	??___flmul
  5408  037B  1003               	clrc
  5409  037C  0C32               	rrf	??___flmul,w
  5410  037D  00B3               	movwf	??___flmul+1
  5411  037E  0833               	movf	??___flmul+1,w
  5412  037F  00C1               	movwf	___flmul@prod+3
  5413  0380                     l695:
  5414  0380  0837               	movf	___flmul@sign,w
  5415  0381  00B2               	movwf	??___flmul
  5416  0382  0832               	movf	??___flmul,w
  5417  0383  04C1               	iorwf	___flmul@prod+3,f
  5418  0384                     l2358:
  5419  0384  0841               	movf	___flmul@prod+3,w
  5420  0385  00AD               	movwf	?___flmul+3
  5421  0386  0840               	movf	___flmul@prod+2,w
  5422  0387  00AC               	movwf	?___flmul+2
  5423  0388  083F               	movf	___flmul@prod+1,w
  5424  0389  00AB               	movwf	?___flmul+1
  5425  038A  083E               	movf	___flmul@prod,w
  5426  038B  00AA               	movwf	?___flmul
  5427  038C                     l683:
  5428  038C  0008               	return
  5429  038D                     __end_of___flmul:
  5430                           
  5431                           	psect	text15
  5432  0BA8                     __ptext15:	
  5433 ;; *************** function __Umul8_16 *****************
  5434 ;; Defined at:
  5435 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul8_16.c"
  5436 ;; Parameters:    Size  Location     Type
  5437 ;;  multiplier      1    wreg     unsigned char 
  5438 ;;  multiplicand    1    3[COMMON] unsigned char 
  5439 ;; Auto vars:     Size  Location     Type
  5440 ;;  multiplier      1    4[BANK0 ] unsigned char 
  5441 ;;  word_mpld       2    2[BANK0 ] unsigned int 
  5442 ;;  product         2    0[BANK0 ] unsigned int 
  5443 ;; Return value:  Size  Location     Type
  5444 ;;                  2    3[COMMON] unsigned int 
  5445 ;; Registers used:
  5446 ;;		wreg, status,2, status,0
  5447 ;; Tracked objects:
  5448 ;;		On entry : 0/0
  5449 ;;		On exit  : 0/0
  5450 ;;		Unchanged: 0/0
  5451 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5452 ;;      Params:         2       0       0       0       0
  5453 ;;      Locals:         0       5       0       0       0
  5454 ;;      Temps:          2       0       0       0       0
  5455 ;;      Totals:         4       5       0       0       0
  5456 ;;Total ram usage:        9 bytes
  5457 ;; Hardware stack levels used:    1
  5458 ;; Hardware stack levels required when called:    1
  5459 ;; This function calls:
  5460 ;;		Nothing
  5461 ;; This function is called by:
  5462 ;;		___flmul
  5463 ;; This function uses a non-reentrant model
  5464 ;;
  5465                           
  5466                           
  5467                           ;psect for function __Umul8_16
  5468  0BA8                     __Umul8_16:
  5469                           
  5470                           ;incstack = 0
  5471                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  5472                           ;__Umul8_16@multiplier stored from wreg
  5473  0BA8  1283               	bcf	3,5	;RP0=0, select bank0
  5474  0BA9  1303               	bcf	3,6	;RP1=0, select bank0
  5475  0BAA  00A4               	movwf	__Umul8_16@multiplier
  5476  0BAB                     l1964:
  5477  0BAB  01A0               	clrf	__Umul8_16@product
  5478  0BAC  01A1               	clrf	__Umul8_16@product+1
  5479  0BAD                     l1966:
  5480  0BAD  0873               	movf	__Umul8_16@multiplicand,w
  5481  0BAE  00F5               	movwf	??__Umul8_16
  5482  0BAF  01F6               	clrf	??__Umul8_16+1
  5483  0BB0  0875               	movf	??__Umul8_16,w
  5484  0BB1  00A2               	movwf	__Umul8_16@word_mpld
  5485  0BB2  0876               	movf	??__Umul8_16+1,w
  5486  0BB3  00A3               	movwf	__Umul8_16@word_mpld+1
  5487  0BB4                     l1968:
  5488  0BB4  1C24               	btfss	__Umul8_16@multiplier,0
  5489  0BB5  2BB7               	goto	u1531
  5490  0BB6  2BB8               	goto	u1530
  5491  0BB7                     u1531:
  5492  0BB7  2BBE               	goto	l702
  5493  0BB8                     u1530:
  5494  0BB8                     l1970:
  5495  0BB8  0822               	movf	__Umul8_16@word_mpld,w
  5496  0BB9  07A0               	addwf	__Umul8_16@product,f
  5497  0BBA  1803               	skipnc
  5498  0BBB  0AA1               	incf	__Umul8_16@product+1,f
  5499  0BBC  0823               	movf	__Umul8_16@word_mpld+1,w
  5500  0BBD  07A1               	addwf	__Umul8_16@product+1,f
  5501  0BBE                     l702:
  5502  0BBE  3001               	movlw	1
  5503  0BBF                     u1545:
  5504  0BBF  1003               	clrc
  5505  0BC0  0DA2               	rlf	__Umul8_16@word_mpld,f
  5506  0BC1  0DA3               	rlf	__Umul8_16@word_mpld+1,f
  5507  0BC2  3EFF               	addlw	-1
  5508  0BC3  1D03               	skipz
  5509  0BC4  2BBF               	goto	u1545
  5510  0BC5  1003               	clrc
  5511  0BC6  0CA4               	rrf	__Umul8_16@multiplier,f
  5512  0BC7                     l1972:
  5513  0BC7  0824               	movf	__Umul8_16@multiplier,w
  5514  0BC8  1D03               	btfss	3,2
  5515  0BC9  2BCB               	goto	u1551
  5516  0BCA  2BCC               	goto	u1550
  5517  0BCB                     u1551:
  5518  0BCB  2BB4               	goto	l1968
  5519  0BCC                     u1550:
  5520  0BCC                     l1974:
  5521  0BCC  0821               	movf	__Umul8_16@product+1,w
  5522  0BCD  00F4               	movwf	?__Umul8_16+1
  5523  0BCE  0820               	movf	__Umul8_16@product,w
  5524  0BCF  00F3               	movwf	?__Umul8_16
  5525  0BD0                     l704:
  5526  0BD0  0008               	return
  5527  0BD1                     __end_of__Umul8_16:
  5528                           
  5529                           	psect	text16
  5530  0BD1                     __ptext16:	
  5531 ;; *************** function _Lcd_Write_String *****************
  5532 ;; Defined at:
  5533 ;;		line 86 in file "LCD.c"
  5534 ;; Parameters:    Size  Location     Type
  5535 ;;  a               2    0[BANK0 ] PTR unsigned char 
  5536 ;;		 -> RAM(512), main@buffer1(20), main@buffer(20), STR_1(17), 
  5537 ;; Auto vars:     Size  Location     Type
  5538 ;;  i               2    2[BANK0 ] int 
  5539 ;; Return value:  Size  Location     Type
  5540 ;;                  1    wreg      void 
  5541 ;; Registers used:
  5542 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5543 ;; Tracked objects:
  5544 ;;		On entry : 0/0
  5545 ;;		On exit  : 0/0
  5546 ;;		Unchanged: 0/0
  5547 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5548 ;;      Params:         0       2       0       0       0
  5549 ;;      Locals:         0       2       0       0       0
  5550 ;;      Temps:          0       0       0       0       0
  5551 ;;      Totals:         0       4       0       0       0
  5552 ;;Total ram usage:        4 bytes
  5553 ;; Hardware stack levels used:    1
  5554 ;; Hardware stack levels required when called:    3
  5555 ;; This function calls:
  5556 ;;		_Lcd_Write_Char
  5557 ;; This function is called by:
  5558 ;;		_main
  5559 ;; This function uses a non-reentrant model
  5560 ;;
  5561                           
  5562                           
  5563                           ;psect for function _Lcd_Write_String
  5564  0BD1                     _Lcd_Write_String:
  5565  0BD1                     l2786:	
  5566                           ;incstack = 0
  5567                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5568                           
  5569                           
  5570                           ;LCD.c: 87:     int i;;LCD.c: 88:     for (i = 0; a[i] != '\0'; i++)
  5571  0BD1  1283               	bcf	3,5	;RP0=0, select bank0
  5572  0BD2  1303               	bcf	3,6	;RP1=0, select bank0
  5573  0BD3  01A2               	clrf	Lcd_Write_String@i
  5574  0BD4  01A3               	clrf	Lcd_Write_String@i+1
  5575  0BD5  2BF0               	goto	l2792
  5576  0BD6                     l2788:
  5577                           
  5578                           ;LCD.c: 89:         Lcd_Write_Char(a[i]);
  5579  0BD6  0822               	movf	Lcd_Write_String@i,w
  5580  0BD7  0720               	addwf	Lcd_Write_String@a,w
  5581  0BD8  0084               	movwf	4
  5582  0BD9  0823               	movf	Lcd_Write_String@i+1,w
  5583  0BDA  1803               	skipnc
  5584  0BDB  0A23               	incf	Lcd_Write_String@i+1,w
  5585  0BDC  0721               	addwf	Lcd_Write_String@a+1,w
  5586  0BDD  00FF               	movwf	btemp+1
  5587  0BDE  120A  158A  2000  120A  158A  	fcall	stringtab
  5588  0BE3  120A  158A  236A  120A  158A  	fcall	_Lcd_Write_Char
  5589  0BE8                     l2790:
  5590  0BE8  3001               	movlw	1
  5591  0BE9  1283               	bcf	3,5	;RP0=0, select bank0
  5592  0BEA  1303               	bcf	3,6	;RP1=0, select bank0
  5593  0BEB  07A2               	addwf	Lcd_Write_String@i,f
  5594  0BEC  1803               	skipnc
  5595  0BED  0AA3               	incf	Lcd_Write_String@i+1,f
  5596  0BEE  3000               	movlw	0
  5597  0BEF  07A3               	addwf	Lcd_Write_String@i+1,f
  5598  0BF0                     l2792:
  5599  0BF0  0822               	movf	Lcd_Write_String@i,w
  5600  0BF1  0720               	addwf	Lcd_Write_String@a,w
  5601  0BF2  0084               	movwf	4
  5602  0BF3  0823               	movf	Lcd_Write_String@i+1,w
  5603  0BF4  1803               	skipnc
  5604  0BF5  0A23               	incf	Lcd_Write_String@i+1,w
  5605  0BF6  0721               	addwf	Lcd_Write_String@a+1,w
  5606  0BF7  00FF               	movwf	btemp+1
  5607  0BF8  120A  158A  2000  120A  158A  	fcall	stringtab
  5608  0BFD  3A00               	xorlw	0
  5609  0BFE  1D03               	skipz
  5610  0BFF  2C01               	goto	u2791
  5611  0C00  2C02               	goto	u2790
  5612  0C01                     u2791:
  5613  0C01  2BD6               	goto	l2788
  5614  0C02                     u2790:
  5615  0C02                     l185:
  5616  0C02  0008               	return
  5617  0C03                     __end_of_Lcd_Write_String:
  5618                           
  5619                           	psect	text17
  5620  0B6A                     __ptext17:	
  5621 ;; *************** function _Lcd_Write_Char *****************
  5622 ;; Defined at:
  5623 ;;		line 71 in file "LCD.c"
  5624 ;; Parameters:    Size  Location     Type
  5625 ;;  a               1    wreg     unsigned char 
  5626 ;; Auto vars:     Size  Location     Type
  5627 ;;  a               1    5[COMMON] unsigned char 
  5628 ;;  y               1    7[COMMON] unsigned char 
  5629 ;;  temp            1    6[COMMON] unsigned char 
  5630 ;; Return value:  Size  Location     Type
  5631 ;;                  1    wreg      void 
  5632 ;; Registers used:
  5633 ;;		wreg, status,2, status,0, pclath, cstack
  5634 ;; Tracked objects:
  5635 ;;		On entry : 0/0
  5636 ;;		On exit  : 0/0
  5637 ;;		Unchanged: 0/0
  5638 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5639 ;;      Params:         0       0       0       0       0
  5640 ;;      Locals:         3       0       0       0       0
  5641 ;;      Temps:          1       0       0       0       0
  5642 ;;      Totals:         4       0       0       0       0
  5643 ;;Total ram usage:        4 bytes
  5644 ;; Hardware stack levels used:    1
  5645 ;; Hardware stack levels required when called:    2
  5646 ;; This function calls:
  5647 ;;		_Lcd_Port
  5648 ;; This function is called by:
  5649 ;;		_main
  5650 ;;		_Lcd_Write_String
  5651 ;; This function uses a non-reentrant model
  5652 ;;
  5653                           
  5654                           
  5655                           ;psect for function _Lcd_Write_Char
  5656  0B6A                     _Lcd_Write_Char:
  5657                           
  5658                           ;incstack = 0
  5659                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  5660                           ;Lcd_Write_Char@a stored from wreg
  5661  0B6A  00F5               	movwf	Lcd_Write_Char@a
  5662  0B6B                     l1786:
  5663                           
  5664                           ;LCD.c: 72:     char temp, y;;LCD.c: 73:     temp = a;
  5665  0B6B  0875               	movf	Lcd_Write_Char@a,w
  5666  0B6C  00F4               	movwf	??_Lcd_Write_Char
  5667  0B6D  0874               	movf	??_Lcd_Write_Char,w
  5668  0B6E  00F6               	movwf	Lcd_Write_Char@temp
  5669                           
  5670                           ;LCD.c: 74:     y = temp;
  5671  0B6F  0876               	movf	Lcd_Write_Char@temp,w
  5672  0B70  00F4               	movwf	??_Lcd_Write_Char
  5673  0B71  0874               	movf	??_Lcd_Write_Char,w
  5674  0B72  00F7               	movwf	Lcd_Write_Char@y
  5675  0B73                     l1788:
  5676                           
  5677                           ;LCD.c: 75:     PORTEbits.RE0 = 1;
  5678  0B73  1283               	bcf	3,5	;RP0=0, select bank0
  5679  0B74  1303               	bcf	3,6	;RP1=0, select bank0
  5680  0B75  1409               	bsf	9,0	;volatile
  5681  0B76                     l1790:
  5682                           
  5683                           ;LCD.c: 76:     Lcd_Port(y);
  5684  0B76  0877               	movf	Lcd_Write_Char@y,w
  5685  0B77  120A  158A  2326  120A  158A  	fcall	_Lcd_Port
  5686  0B7C                     l1792:
  5687                           
  5688                           ;LCD.c: 77:     PORTEbits.RE2 = 1;
  5689  0B7C  1283               	bcf	3,5	;RP0=0, select bank0
  5690  0B7D  1303               	bcf	3,6	;RP1=0, select bank0
  5691  0B7E  1509               	bsf	9,2	;volatile
  5692  0B7F                     l1794:
  5693                           
  5694                           ;LCD.c: 78:     _delay((unsigned long)((40)*(4000000/4000000.0)));
  5695  0B7F  300D               	movlw	13
  5696  0B80  00F4               	movwf	??_Lcd_Write_Char
  5697  0B81                     u3197:
  5698  0B81  0BF4               	decfsz	??_Lcd_Write_Char,f
  5699  0B82  2B81               	goto	u3197
  5700  0B83                     l1796:
  5701                           
  5702                           ;LCD.c: 79:     PORTEbits.RE2 = 0;
  5703  0B83  1283               	bcf	3,5	;RP0=0, select bank0
  5704  0B84  1303               	bcf	3,6	;RP1=0, select bank0
  5705  0B85  1109               	bcf	9,2	;volatile
  5706  0B86                     l179:
  5707  0B86  0008               	return
  5708  0B87                     __end_of_Lcd_Write_Char:
  5709                           
  5710                           	psect	text18
  5711  0D47                     __ptext18:	
  5712 ;; *************** function _Lcd_Set_Cursor *****************
  5713 ;; Defined at:
  5714 ;;		line 35 in file "LCD.c"
  5715 ;; Parameters:    Size  Location     Type
  5716 ;;  a               1    wreg     unsigned char 
  5717 ;;  b               1    7[COMMON] unsigned char 
  5718 ;; Auto vars:     Size  Location     Type
  5719 ;;  a               1    2[BANK0 ] unsigned char 
  5720 ;;  temp            1    5[BANK0 ] unsigned char 
  5721 ;;  y               1    4[BANK0 ] unsigned char 
  5722 ;;  z               1    3[BANK0 ] unsigned char 
  5723 ;; Return value:  Size  Location     Type
  5724 ;;                  1    wreg      void 
  5725 ;; Registers used:
  5726 ;;		wreg, status,2, status,0, pclath, cstack
  5727 ;; Tracked objects:
  5728 ;;		On entry : 0/0
  5729 ;;		On exit  : 0/0
  5730 ;;		Unchanged: 0/0
  5731 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5732 ;;      Params:         1       0       0       0       0
  5733 ;;      Locals:         0       4       0       0       0
  5734 ;;      Temps:          0       2       0       0       0
  5735 ;;      Totals:         1       6       0       0       0
  5736 ;;Total ram usage:        7 bytes
  5737 ;; Hardware stack levels used:    1
  5738 ;; Hardware stack levels required when called:    3
  5739 ;; This function calls:
  5740 ;;		_Lcd_Cmd
  5741 ;; This function is called by:
  5742 ;;		_main
  5743 ;; This function uses a non-reentrant model
  5744 ;;
  5745                           
  5746                           
  5747                           ;psect for function _Lcd_Set_Cursor
  5748  0D47                     _Lcd_Set_Cursor:
  5749                           
  5750                           ;incstack = 0
  5751                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  5752                           ;Lcd_Set_Cursor@a stored from wreg
  5753  0D47  1283               	bcf	3,5	;RP0=0, select bank0
  5754  0D48  1303               	bcf	3,6	;RP1=0, select bank0
  5755  0D49  00A2               	movwf	Lcd_Set_Cursor@a
  5756  0D4A                     l2766:
  5757                           
  5758                           ;LCD.c: 36:     char temp, z, y;;LCD.c: 37:     if (a == 1) {
  5759  0D4A  0322               	decf	Lcd_Set_Cursor@a,w
  5760  0D4B  1D03               	btfss	3,2
  5761  0D4C  2D4E               	goto	u2751
  5762  0D4D  2D4F               	goto	u2750
  5763  0D4E                     u2751:
  5764  0D4E  2D74               	goto	l2776
  5765  0D4F                     u2750:
  5766  0D4F                     l2768:
  5767                           
  5768                           ;LCD.c: 38:         temp = 0x80 + b - 1;
  5769  0D4F  0877               	movf	Lcd_Set_Cursor@b,w
  5770  0D50  3E7F               	addlw	127
  5771  0D51  00A0               	movwf	??_Lcd_Set_Cursor
  5772  0D52  0820               	movf	??_Lcd_Set_Cursor,w
  5773  0D53  00A5               	movwf	Lcd_Set_Cursor@temp
  5774                           
  5775                           ;LCD.c: 39:         z = temp >> 4;
  5776  0D54  0825               	movf	Lcd_Set_Cursor@temp,w
  5777  0D55  00A0               	movwf	??_Lcd_Set_Cursor
  5778  0D56  3004               	movlw	4
  5779  0D57                     u2765:
  5780  0D57  1003               	clrc
  5781  0D58  0CA0               	rrf	??_Lcd_Set_Cursor,f
  5782  0D59  3EFF               	addlw	-1
  5783  0D5A  1D03               	skipz
  5784  0D5B  2D57               	goto	u2765
  5785  0D5C  0820               	movf	??_Lcd_Set_Cursor,w
  5786  0D5D  00A1               	movwf	??_Lcd_Set_Cursor+1
  5787  0D5E  0821               	movf	??_Lcd_Set_Cursor+1,w
  5788  0D5F  00A3               	movwf	Lcd_Set_Cursor@z
  5789  0D60                     l2770:
  5790                           
  5791                           ;LCD.c: 40:         y = temp & 0x0F;
  5792  0D60  0825               	movf	Lcd_Set_Cursor@temp,w
  5793  0D61  390F               	andlw	15
  5794  0D62  00A0               	movwf	??_Lcd_Set_Cursor
  5795  0D63  0820               	movf	??_Lcd_Set_Cursor,w
  5796  0D64  00A4               	movwf	Lcd_Set_Cursor@y
  5797  0D65                     l2772:
  5798                           
  5799                           ;LCD.c: 41:         Lcd_Cmd(z);
  5800  0D65  0823               	movf	Lcd_Set_Cursor@z,w
  5801  0D66  120A  158A  2335  120A  158A  	fcall	_Lcd_Cmd
  5802  0D6B                     l2774:
  5803                           
  5804                           ;LCD.c: 43:         Lcd_Cmd(y);
  5805  0D6B  1283               	bcf	3,5	;RP0=0, select bank0
  5806  0D6C  1303               	bcf	3,6	;RP1=0, select bank0
  5807  0D6D  0824               	movf	Lcd_Set_Cursor@y,w
  5808  0D6E  120A  158A  2335  120A  158A  	fcall	_Lcd_Cmd
  5809                           
  5810                           ;LCD.c: 44:     } else if (a == 2) {
  5811  0D73  2D9E               	goto	l173
  5812  0D74                     l2776:
  5813  0D74  3002               	movlw	2
  5814  0D75  0622               	xorwf	Lcd_Set_Cursor@a,w
  5815  0D76  1D03               	btfss	3,2
  5816  0D77  2D79               	goto	u2771
  5817  0D78  2D7A               	goto	u2770
  5818  0D79                     u2771:
  5819  0D79  2D9E               	goto	l173
  5820  0D7A                     u2770:
  5821  0D7A                     l2778:
  5822                           
  5823                           ;LCD.c: 45:         temp = 0xC0 + b - 1;
  5824  0D7A  0877               	movf	Lcd_Set_Cursor@b,w
  5825  0D7B  3EBF               	addlw	191
  5826  0D7C  00A0               	movwf	??_Lcd_Set_Cursor
  5827  0D7D  0820               	movf	??_Lcd_Set_Cursor,w
  5828  0D7E  00A5               	movwf	Lcd_Set_Cursor@temp
  5829                           
  5830                           ;LCD.c: 46:         z = temp >> 4;
  5831  0D7F  0825               	movf	Lcd_Set_Cursor@temp,w
  5832  0D80  00A0               	movwf	??_Lcd_Set_Cursor
  5833  0D81  3004               	movlw	4
  5834  0D82                     u2785:
  5835  0D82  1003               	clrc
  5836  0D83  0CA0               	rrf	??_Lcd_Set_Cursor,f
  5837  0D84  3EFF               	addlw	-1
  5838  0D85  1D03               	skipz
  5839  0D86  2D82               	goto	u2785
  5840  0D87  0820               	movf	??_Lcd_Set_Cursor,w
  5841  0D88  00A1               	movwf	??_Lcd_Set_Cursor+1
  5842  0D89  0821               	movf	??_Lcd_Set_Cursor+1,w
  5843  0D8A  00A3               	movwf	Lcd_Set_Cursor@z
  5844  0D8B                     l2780:
  5845                           
  5846                           ;LCD.c: 47:         y = temp & 0xF0;
  5847  0D8B  0825               	movf	Lcd_Set_Cursor@temp,w
  5848  0D8C  39F0               	andlw	240
  5849  0D8D  00A0               	movwf	??_Lcd_Set_Cursor
  5850  0D8E  0820               	movf	??_Lcd_Set_Cursor,w
  5851  0D8F  00A4               	movwf	Lcd_Set_Cursor@y
  5852  0D90                     l2782:
  5853                           
  5854                           ;LCD.c: 48:         Lcd_Cmd(z);
  5855  0D90  0823               	movf	Lcd_Set_Cursor@z,w
  5856  0D91  120A  158A  2335  120A  158A  	fcall	_Lcd_Cmd
  5857  0D96                     l2784:
  5858                           
  5859                           ;LCD.c: 49:         Lcd_Cmd(y);
  5860  0D96  1283               	bcf	3,5	;RP0=0, select bank0
  5861  0D97  1303               	bcf	3,6	;RP1=0, select bank0
  5862  0D98  0824               	movf	Lcd_Set_Cursor@y,w
  5863  0D99  120A  158A  2335  120A  158A  	fcall	_Lcd_Cmd
  5864  0D9E                     l173:
  5865  0D9E  0008               	return
  5866  0D9F                     __end_of_Lcd_Set_Cursor:
  5867                           
  5868                           	psect	text19
  5869  0CF9                     __ptext19:	
  5870 ;; *************** function _Lcd_Init *****************
  5871 ;; Defined at:
  5872 ;;		line 53 in file "LCD.c"
  5873 ;; Parameters:    Size  Location     Type
  5874 ;;		None
  5875 ;; Auto vars:     Size  Location     Type
  5876 ;;		None
  5877 ;; Return value:  Size  Location     Type
  5878 ;;                  1    wreg      void 
  5879 ;; Registers used:
  5880 ;;		wreg, status,2, status,0, pclath, cstack
  5881 ;; Tracked objects:
  5882 ;;		On entry : 0/0
  5883 ;;		On exit  : 0/0
  5884 ;;		Unchanged: 0/0
  5885 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5886 ;;      Params:         0       0       0       0       0
  5887 ;;      Locals:         0       0       0       0       0
  5888 ;;      Temps:          0       2       0       0       0
  5889 ;;      Totals:         0       2       0       0       0
  5890 ;;Total ram usage:        2 bytes
  5891 ;; Hardware stack levels used:    1
  5892 ;; Hardware stack levels required when called:    3
  5893 ;; This function calls:
  5894 ;;		_Lcd_Cmd
  5895 ;;		_Lcd_Port
  5896 ;; This function is called by:
  5897 ;;		_main
  5898 ;; This function uses a non-reentrant model
  5899 ;;
  5900                           
  5901                           
  5902                           ;psect for function _Lcd_Init
  5903  0CF9                     _Lcd_Init:
  5904  0CF9                     l2756:	
  5905                           ;incstack = 0
  5906                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  5907                           
  5908                           
  5909                           ;LCD.c: 54:     Lcd_Port(0x00);
  5910  0CF9  3000               	movlw	0
  5911  0CFA  120A  158A  2326  120A  158A  	fcall	_Lcd_Port
  5912  0CFF                     l2758:
  5913                           
  5914                           ;LCD.c: 55:     _delay((unsigned long)((20)*(4000000/4000.0)));
  5915  0CFF  301A               	movlw	26
  5916  0D00  1283               	bcf	3,5	;RP0=0, select bank0
  5917  0D01  1303               	bcf	3,6	;RP1=0, select bank0
  5918  0D02  00A1               	movwf	??_Lcd_Init+1
  5919  0D03  30F7               	movlw	247
  5920  0D04  00A0               	movwf	??_Lcd_Init
  5921  0D05                     u3207:
  5922  0D05  0BA0               	decfsz	??_Lcd_Init,f
  5923  0D06  2D05               	goto	u3207
  5924  0D07  0BA1               	decfsz	??_Lcd_Init+1,f
  5925  0D08  2D05               	goto	u3207
  5926  0D09  2D0A               	nop2
  5927  0D0A                     l2760:
  5928                           
  5929                           ;LCD.c: 56:     Lcd_Cmd(0x30);
  5930  0D0A  3030               	movlw	48
  5931  0D0B  120A  158A  2335  120A  158A  	fcall	_Lcd_Cmd
  5932                           
  5933                           ;LCD.c: 57:     _delay((unsigned long)((5)*(4000000/4000.0)));
  5934  0D10  3007               	movlw	7
  5935  0D11  1283               	bcf	3,5	;RP0=0, select bank0
  5936  0D12  1303               	bcf	3,6	;RP1=0, select bank0
  5937  0D13  00A1               	movwf	??_Lcd_Init+1
  5938  0D14  307C               	movlw	124
  5939  0D15  00A0               	movwf	??_Lcd_Init
  5940  0D16                     u3217:
  5941  0D16  0BA0               	decfsz	??_Lcd_Init,f
  5942  0D17  2D16               	goto	u3217
  5943  0D18  0BA1               	decfsz	??_Lcd_Init+1,f
  5944  0D19  2D16               	goto	u3217
  5945  0D1A  0000               	nop
  5946  0D1B                     l2762:
  5947                           
  5948                           ;LCD.c: 58:     Lcd_Cmd(0x30);
  5949  0D1B  3030               	movlw	48
  5950  0D1C  120A  158A  2335  120A  158A  	fcall	_Lcd_Cmd
  5951  0D21                     l2764:
  5952                           
  5953                           ;LCD.c: 59:     _delay((unsigned long)((200)*(4000000/4000000.0)));
  5954  0D21  3041               	movlw	65
  5955  0D22  1283               	bcf	3,5	;RP0=0, select bank0
  5956  0D23  1303               	bcf	3,6	;RP1=0, select bank0
  5957  0D24  00A0               	movwf	??_Lcd_Init
  5958  0D25                     u3227:
  5959  0D25  0BA0               	decfsz	??_Lcd_Init,f
  5960  0D26  2D25               	goto	u3227
  5961  0D27  2D28               	nop2
  5962                           
  5963                           ;LCD.c: 60:     Lcd_Cmd(0x30);
  5964  0D28  3030               	movlw	48
  5965  0D29  120A  158A  2335  120A  158A  	fcall	_Lcd_Cmd
  5966                           
  5967                           ;LCD.c: 62:     Lcd_Cmd(0x3C);
  5968  0D2E  303C               	movlw	60
  5969  0D2F  120A  158A  2335  120A  158A  	fcall	_Lcd_Cmd
  5970                           
  5971                           ;LCD.c: 64:     Lcd_Cmd(0x08);
  5972  0D34  3008               	movlw	8
  5973  0D35  120A  158A  2335  120A  158A  	fcall	_Lcd_Cmd
  5974                           
  5975                           ;LCD.c: 66:     Lcd_Cmd(0x01);
  5976  0D3A  3001               	movlw	1
  5977  0D3B  120A  158A  2335  120A  158A  	fcall	_Lcd_Cmd
  5978                           
  5979                           ;LCD.c: 68:     Lcd_Cmd(0x06);
  5980  0D40  3006               	movlw	6
  5981  0D41  120A  158A  2335  120A  158A  	fcall	_Lcd_Cmd
  5982  0D46                     l176:
  5983  0D46  0008               	return
  5984  0D47                     __end_of_Lcd_Init:
  5985                           
  5986                           	psect	text20
  5987  07EF                     __ptext20:	
  5988 ;; *************** function _Lcd_Clear *****************
  5989 ;; Defined at:
  5990 ;;		line 17 in file "LCD.c"
  5991 ;; Parameters:    Size  Location     Type
  5992 ;;		None
  5993 ;; Auto vars:     Size  Location     Type
  5994 ;;		None
  5995 ;; Return value:  Size  Location     Type
  5996 ;;                  1    wreg      void 
  5997 ;; Registers used:
  5998 ;;		wreg, status,2, status,0, pclath, cstack
  5999 ;; Tracked objects:
  6000 ;;		On entry : 0/0
  6001 ;;		On exit  : 0/0
  6002 ;;		Unchanged: 0/0
  6003 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6004 ;;      Params:         0       0       0       0       0
  6005 ;;      Locals:         0       0       0       0       0
  6006 ;;      Temps:          0       0       0       0       0
  6007 ;;      Totals:         0       0       0       0       0
  6008 ;;Total ram usage:        0 bytes
  6009 ;; Hardware stack levels used:    1
  6010 ;; Hardware stack levels required when called:    3
  6011 ;; This function calls:
  6012 ;;		_Lcd_Cmd
  6013 ;; This function is called by:
  6014 ;;		_main
  6015 ;; This function uses a non-reentrant model
  6016 ;;
  6017                           
  6018                           
  6019                           ;psect for function _Lcd_Clear
  6020  07EF                     _Lcd_Clear:
  6021  07EF                     l2126:	
  6022                           ;incstack = 0
  6023                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  6024                           
  6025                           
  6026                           ;LCD.c: 18:     Lcd_Cmd(0);
  6027  07EF  3000               	movlw	0
  6028  07F0  120A  158A  2335  120A  118A  	fcall	_Lcd_Cmd
  6029                           
  6030                           ;LCD.c: 19:     Lcd_Cmd(1);
  6031  07F5  3001               	movlw	1
  6032  07F6  120A  158A  2335  120A  118A  	fcall	_Lcd_Cmd
  6033  07FB                     l167:
  6034  07FB  0008               	return
  6035  07FC                     __end_of_Lcd_Clear:
  6036                           
  6037                           	psect	text21
  6038  0B35                     __ptext21:	
  6039 ;; *************** function _Lcd_Cmd *****************
  6040 ;; Defined at:
  6041 ;;		line 9 in file "LCD.c"
  6042 ;; Parameters:    Size  Location     Type
  6043 ;;  a               1    wreg     unsigned char 
  6044 ;; Auto vars:     Size  Location     Type
  6045 ;;  a               1    6[COMMON] unsigned char 
  6046 ;; Return value:  Size  Location     Type
  6047 ;;                  1    wreg      void 
  6048 ;; Registers used:
  6049 ;;		wreg, status,2, status,0, pclath, cstack
  6050 ;; Tracked objects:
  6051 ;;		On entry : 0/0
  6052 ;;		On exit  : 0/0
  6053 ;;		Unchanged: 0/0
  6054 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6055 ;;      Params:         0       0       0       0       0
  6056 ;;      Locals:         1       0       0       0       0
  6057 ;;      Temps:          2       0       0       0       0
  6058 ;;      Totals:         3       0       0       0       0
  6059 ;;Total ram usage:        3 bytes
  6060 ;; Hardware stack levels used:    1
  6061 ;; Hardware stack levels required when called:    2
  6062 ;; This function calls:
  6063 ;;		_Lcd_Port
  6064 ;; This function is called by:
  6065 ;;		_Lcd_Clear
  6066 ;;		_Lcd_Set_Cursor
  6067 ;;		_Lcd_Init
  6068 ;;		_Lcd_Shift_Right
  6069 ;;		_Lcd_Shift_Left
  6070 ;; This function uses a non-reentrant model
  6071 ;;
  6072                           
  6073                           
  6074                           ;psect for function _Lcd_Cmd
  6075  0B35                     _Lcd_Cmd:
  6076                           
  6077                           ;incstack = 0
  6078                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  6079                           ;Lcd_Cmd@a stored from wreg
  6080  0B35  00F6               	movwf	Lcd_Cmd@a
  6081  0B36                     l1872:
  6082                           
  6083                           ;LCD.c: 10:     PORTEbits.RE0 = 0;
  6084  0B36  1283               	bcf	3,5	;RP0=0, select bank0
  6085  0B37  1303               	bcf	3,6	;RP1=0, select bank0
  6086  0B38  1009               	bcf	9,0	;volatile
  6087  0B39                     l1874:
  6088                           
  6089                           ;LCD.c: 11:     Lcd_Port(a);
  6090  0B39  0876               	movf	Lcd_Cmd@a,w
  6091  0B3A  120A  158A  2326  120A  158A  	fcall	_Lcd_Port
  6092  0B3F                     l1876:
  6093                           
  6094                           ;LCD.c: 12:     PORTEbits.RE2 = 1;
  6095  0B3F  1283               	bcf	3,5	;RP0=0, select bank0
  6096  0B40  1303               	bcf	3,6	;RP1=0, select bank0
  6097  0B41  1509               	bsf	9,2	;volatile
  6098  0B42                     l1878:
  6099                           
  6100                           ;LCD.c: 13:     _delay((unsigned long)((4)*(4000000/4000.0)));
  6101  0B42  3006               	movlw	6
  6102  0B43  00F5               	movwf	??_Lcd_Cmd+1
  6103  0B44  3030               	movlw	48
  6104  0B45  00F4               	movwf	??_Lcd_Cmd
  6105  0B46                     u3237:
  6106  0B46  0BF4               	decfsz	??_Lcd_Cmd,f
  6107  0B47  2B46               	goto	u3237
  6108  0B48  0BF5               	decfsz	??_Lcd_Cmd+1,f
  6109  0B49  2B46               	goto	u3237
  6110  0B4A  0000               	nop
  6111  0B4B                     l1880:
  6112                           
  6113                           ;LCD.c: 14:     PORTEbits.RE2 = 0;
  6114  0B4B  1283               	bcf	3,5	;RP0=0, select bank0
  6115  0B4C  1303               	bcf	3,6	;RP1=0, select bank0
  6116  0B4D  1109               	bcf	9,2	;volatile
  6117  0B4E                     l164:
  6118  0B4E  0008               	return
  6119  0B4F                     __end_of_Lcd_Cmd:
  6120                           
  6121                           	psect	text22
  6122  0B26                     __ptext22:	
  6123 ;; *************** function _Lcd_Port *****************
  6124 ;; Defined at:
  6125 ;;		line 4 in file "LCD.c"
  6126 ;; Parameters:    Size  Location     Type
  6127 ;;  a               1    wreg     unsigned char 
  6128 ;; Auto vars:     Size  Location     Type
  6129 ;;  a               1    3[COMMON] unsigned char 
  6130 ;; Return value:  Size  Location     Type
  6131 ;;                  1    wreg      void 
  6132 ;; Registers used:
  6133 ;;		wreg
  6134 ;; Tracked objects:
  6135 ;;		On entry : 0/0
  6136 ;;		On exit  : 0/0
  6137 ;;		Unchanged: 0/0
  6138 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6139 ;;      Params:         0       0       0       0       0
  6140 ;;      Locals:         1       0       0       0       0
  6141 ;;      Temps:          0       0       0       0       0
  6142 ;;      Totals:         1       0       0       0       0
  6143 ;;Total ram usage:        1 bytes
  6144 ;; Hardware stack levels used:    1
  6145 ;; Hardware stack levels required when called:    1
  6146 ;; This function calls:
  6147 ;;		Nothing
  6148 ;; This function is called by:
  6149 ;;		_Lcd_Cmd
  6150 ;;		_Lcd_Init
  6151 ;;		_Lcd_Write_Char
  6152 ;; This function uses a non-reentrant model
  6153 ;;
  6154                           
  6155                           
  6156                           ;psect for function _Lcd_Port
  6157  0B26                     _Lcd_Port:
  6158                           
  6159                           ;incstack = 0
  6160                           ; Regs used in _Lcd_Port: [wreg]
  6161                           ;Lcd_Port@a stored from wreg
  6162  0B26  00F3               	movwf	Lcd_Port@a
  6163  0B27                     l1736:
  6164                           
  6165                           ;LCD.c: 5:     PORTD = a;
  6166  0B27  0873               	movf	Lcd_Port@a,w
  6167  0B28  1283               	bcf	3,5	;RP0=0, select bank0
  6168  0B29  1303               	bcf	3,6	;RP1=0, select bank0
  6169  0B2A  0088               	movwf	8	;volatile
  6170  0B2B                     l161:
  6171  0B2B  0008               	return
  6172  0B2C                     __end_of_Lcd_Port:
  6173                           
  6174                           	psect	text23
  6175  0C03                     __ptext23:	
  6176 ;; *************** function _isr *****************
  6177 ;; Defined at:
  6178 ;;		line 87 in file "D2_main2.c"
  6179 ;; Parameters:    Size  Location     Type
  6180 ;;		None
  6181 ;; Auto vars:     Size  Location     Type
  6182 ;;		None
  6183 ;; Return value:  Size  Location     Type
  6184 ;;                  1    wreg      void 
  6185 ;; Registers used:
  6186 ;;		wreg, status,2, status,0
  6187 ;; Tracked objects:
  6188 ;;		On entry : 0/0
  6189 ;;		On exit  : 0/0
  6190 ;;		Unchanged: 0/0
  6191 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6192 ;;      Params:         0       0       0       0       0
  6193 ;;      Locals:         0       0       0       0       0
  6194 ;;      Temps:          3       0       0       0       0
  6195 ;;      Totals:         3       0       0       0       0
  6196 ;;Total ram usage:        3 bytes
  6197 ;; Hardware stack levels used:    1
  6198 ;; This function calls:
  6199 ;;		Nothing
  6200 ;; This function is called by:
  6201 ;;		Interrupt level 1
  6202 ;; This function uses a non-reentrant model
  6203 ;;
  6204                           
  6205                           
  6206                           ;psect for function _isr
  6207  0C03                     _isr:
  6208  0C03                     i1l2406:
  6209  0C03  1283               	bcf	3,5	;RP0=0, select bank0
  6210  0C04  1303               	bcf	3,6	;RP1=0, select bank0
  6211  0C05  1F0C               	btfss	12,6	;volatile
  6212  0C06  2C08               	goto	u232_21
  6213  0C07  2C09               	goto	u232_20
  6214  0C08                     u232_21:
  6215  0C08  2C2E               	goto	i1l2420
  6216  0C09                     u232_20:
  6217  0C09                     i1l2408:
  6218  0C09  0C1F               	rrf	31,w	;volatile
  6219  0C0A  00F0               	movwf	??_isr
  6220  0C0B  0C70               	rrf	??_isr,w
  6221  0C0C  390F               	andlw	15
  6222  0C0D  3A00               	xorlw	0
  6223  0C0E  1D03               	skipz
  6224  0C0F  2C11               	goto	u233_21
  6225  0C10  2C12               	goto	u233_20
  6226  0C11                     u233_21:
  6227  0C11  2C1D               	goto	i1l2414
  6228  0C12                     u233_20:
  6229  0C12                     i1l2410:
  6230  0C12  081F               	movf	31,w	;volatile
  6231  0C13  39C3               	andlw	-61
  6232  0C14  3804               	iorlw	4
  6233  0C15  009F               	movwf	31	;volatile
  6234  0C16                     i1l2412:
  6235  0C16  081E               	movf	30,w	;volatile
  6236  0C17  00F0               	movwf	??_isr
  6237  0C18  0870               	movf	??_isr,w
  6238  0C19  1683               	bsf	3,5	;RP0=1, select bank1
  6239  0C1A  1303               	bcf	3,6	;RP1=0, select bank1
  6240  0C1B  00D0               	movwf	_volt01^(0+128)
  6241  0C1C  2C2E               	goto	i1l2420
  6242  0C1D                     i1l2414:
  6243  0C1D  0C1F               	rrf	31,w	;volatile
  6244  0C1E  00F0               	movwf	??_isr
  6245  0C1F  0C70               	rrf	??_isr,w
  6246  0C20  390F               	andlw	15
  6247  0C21  3A01               	xorlw	1
  6248  0C22  1D03               	skipz
  6249  0C23  2C25               	goto	u234_21
  6250  0C24  2C26               	goto	u234_20
  6251  0C25                     u234_21:
  6252  0C25  2C2E               	goto	i1l2420
  6253  0C26                     u234_20:
  6254  0C26                     i1l2416:
  6255  0C26  30C3               	movlw	-61
  6256  0C27  059F               	andwf	31,f	;volatile
  6257  0C28                     i1l2418:
  6258  0C28  081E               	movf	30,w	;volatile
  6259  0C29  00F0               	movwf	??_isr
  6260  0C2A  0870               	movf	??_isr,w
  6261  0C2B  1683               	bsf	3,5	;RP0=1, select bank1
  6262  0C2C  1303               	bcf	3,6	;RP1=0, select bank1
  6263  0C2D  00CF               	movwf	_volt02^(0+128)
  6264  0C2E                     i1l2420:
  6265  0C2E  1283               	bcf	3,5	;RP0=0, select bank0
  6266  0C2F  130C               	bcf	12,6	;volatile
  6267  0C30                     i1l105:
  6268  0C30  0872               	movf	??_isr+2,w
  6269  0C31  008A               	movwf	10
  6270  0C32  0E71               	swapf	??_isr+1,w
  6271  0C33  0083               	movwf	3
  6272  0C34  0EFE               	swapf	btemp,f
  6273  0C35  0E7E               	swapf	btemp,w
  6274  0C36  0009               	retfie
  6275  0C37                     __end_of_isr:
  6276  0002                     
  6277                           	psect	intentry
  6278  0004                     __pintentry:	
  6279                           ;incstack = 0
  6280                           ; Regs used in _isr: [wreg+status,2+status,0]
  6281                           
  6282  0004                     interrupt_function:
  6283  007E                     saved_w	set	btemp
  6284  0004  00FE               	movwf	btemp
  6285  0005  0E03               	swapf	3,w
  6286  0006  00F1               	movwf	??_isr+1
  6287  0007  080A               	movf	10,w
  6288  0008  00F2               	movwf	??_isr+2
  6289  0009  120A  158A  2C03   	ljmp	_isr
  6290                           
  6291                           	psect	functab
  6292  0023                     __pfunctab:
  6293  0023                     __fptable:
  6294  0023                     fptable:
  6295  0023  00FF               	movwf	(btemp+1)& (0+127)
  6296  0024  3000               	movlw	high fptable
  6297  0025  008A               	movwf	10
  6298  0026  087F               	movf	(btemp+1)& (0+127),w
  6299  0027  0782               	addwf	2,f
  6300  0028                     fpbase:
  6301  0028  2828               	goto	fpbase	; Call via a null pointer and you will get stuck here.
  6302  0029                     fp__putch:
  6303  0029  120A  158A  2B2C   	ljmp	_putch
  6304  002C                     __end_of__fptable:
  6305  007E                     btemp	set	126	;btemp
  6306  007E                     wtemp0	set	126
  6307                           
  6308                           	psect	config
  6309                           
  6310                           ;Config register CONFIG1 @ 0x2007
  6311                           ;	Oscillator Selection bits
  6312                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  6313                           ;	Watchdog Timer Enable bit
  6314                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  6315                           ;	Power-up Timer Enable bit
  6316                           ;	PWRTE = OFF, PWRT disabled
  6317                           ;	RE3/MCLR pin function select bit
  6318                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  6319                           ;	Code Protection bit
  6320                           ;	CP = OFF, Program memory code protection is disabled
  6321                           ;	Data Code Protection bit
  6322                           ;	CPD = OFF, Data memory code protection is disabled
  6323                           ;	Brown Out Reset Selection bits
  6324                           ;	BOREN = OFF, BOR disabled
  6325                           ;	Internal External Switchover bit
  6326                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  6327                           ;	Fail-Safe Clock Monitor Enabled bit
  6328                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  6329                           ;	Low Voltage Programming Enable bit
  6330                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  6331                           ;	In-Circuit Debugger Mode bit
  6332                           ;	DEBUG = 0x1, unprogrammed default
  6333  2007                     	org	8199
  6334  2007  20D4               	dw	8404
  6335                           
  6336                           ;Config register CONFIG2 @ 0x2008
  6337                           ;	Brown-out Reset Selection bit
  6338                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  6339                           ;	Flash Program Memory Self Write Enable bits
  6340                           ;	WRT = OFF, Write protection off
  6341  2008                     	org	8200
  6342  2008  3FFF               	dw	16383

Data Sizes:
    Strings     184
    Constant    10
    Data        0
    BSS         12
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      11
    BANK0            80     52      53
    BANK1            80     41      49
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 8
		 -> STR_3(CODE[6]), STR_2(CODE[8]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), ?_printf(COMMON[2]), 

    sprintf@wh	PTR unsigned char  size(1) Largest target is 20
		 -> main@buffer1(BANK1[20]), main@buffer(BANK1[20]), 

    pb.func	PTR FTN(unsigned char ,)void  size(1) Largest target is 1
		 -> Absolute function(), putch(), 

    pb.ptr	PTR unsigned char  size(1) Largest target is 20
		 -> NULL(NULL[0]), main@buffer1(BANK1[20]), main@buffer(BANK1[20]), 

    _doprnt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), printf@ap(BANK0[1]), 

    _doprnt@f	PTR const unsigned char  size(1) Largest target is 41
		 -> STR_10(CODE[38]), STR_9(CODE[41]), STR_8(CODE[40]), STR_7(CODE[2]), 
		 -> STR_6(CODE[17]), STR_5(CODE[2]), STR_4(CODE[17]), STR_3(CODE[6]), 
		 -> STR_2(CODE[8]), 

    _doprnt@pb.func	PTR FTN(unsigned char ,)void  size(1) Largest target is 1
		 -> Absolute function(), putch(), 

    _doprnt@pb.ptr	PTR unsigned char  size(1) Largest target is 20
		 -> NULL(NULL[0]), main@buffer1(BANK1[20]), main@buffer(BANK1[20]), 

    _doprnt@pb	PTR struct __prbuf size(1) Largest target is 3
		 -> sprintf@pb(BANK0[2]), printf@pb(BANK0[2]), 

    printf@f	PTR const unsigned char  size(1) Largest target is 41
		 -> STR_10(CODE[38]), STR_9(CODE[41]), STR_8(CODE[40]), STR_7(CODE[2]), 
		 -> STR_6(CODE[17]), STR_5(CODE[2]), STR_4(CODE[17]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), ?_printf(COMMON[2]), 

    S1080__prbuf$func	PTR FTN(unsigned char ,)void  size(1) Largest target is 1
		 -> Absolute function(), putch(), 

    pb.func	PTR FTN(unsigned char ,)void  size(1) Largest target is 1
		 -> Absolute function(), putch(), 

    S1080__prbuf$ptr	PTR unsigned char  size(1) Largest target is 20
		 -> NULL(NULL[0]), main@buffer1(BANK1[20]), main@buffer(BANK1[20]), 

    pb.ptr	PTR unsigned char  size(1) Largest target is 20
		 -> NULL(NULL[0]), main@buffer1(BANK1[20]), main@buffer(BANK1[20]), 

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 512
		 -> RAM(DATA[512]), main@buffer1(BANK1[20]), main@buffer(BANK1[20]), STR_1(CODE[17]), 


Critical Paths under _main in COMMON

    _main->_Lcd_Set_Cursor
    _main->_Lcd_Write_Char
    _setup->_config_ADC
    __doprnt->___lwdiv
    ___lwmod->___lwdiv
    _division->___awdiv
    _division->___awmod
    ___fltol->___xxtofl
    ___flmul->__Umul8_16
    ___flmul->___xxtofl
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->___fltol
    _sprintf->__doprnt
    _printf->__doprnt
    __doprnt->___lwmod
    ___lwmod->___lwdiv
    _division->___awdiv
    ___fltol->___flmul
    ___flmul->___xxtofl

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                46    46      0   12588
                                             47 BANK0      5     5      0
                                              0 BANK1     41    41      0
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                     _Lcd_Write_Char
                   _Lcd_Write_String
                            ___flmul
                            ___fltol
                           ___xxtofl
                           _division
                             _printf
                              _setup
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                              9     6      3    2851
                                             20 BANK0      9     6      3
                            __doprnt
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0      22
                         _config_ADC
 ---------------------------------------------------------------------------------
 (2) _config_ADC                                           3     3      0      22
                                              3 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _printf                                               6     6      0    2775
                                             20 BANK0      6     6      0
                            __doprnt
 ---------------------------------------------------------------------------------
 (2) __doprnt                                             19    17      2    2336
                                              9 BANK0     11     9      2
                   Absolute function *
                            ___lwdiv
                            ___lwmod
                              _putch *
 ---------------------------------------------------------------------------------
 (3) _putch                                                1     0      1     181
                                              3 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     311
                                              3 BANK0      6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     421
                                              3 COMMON     5     1      4
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (3) Absolute function(Fake)                               1     0      1       0
 ---------------------------------------------------------------------------------
 (1) _division                                             4     4      0    1660
                                              4 BANK0      4     4      0
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     793
                                              3 COMMON     5     1      4
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     805
                                              3 COMMON     5     1      4
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     656
                                              3 COMMON     4     0      4
                                              0 BANK0     10    10      0
 ---------------------------------------------------------------------------------
 (1) ___fltol                                             11     7      4     381
                                             36 BANK0     11     7      4
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) ___flmul                                             26    18      8    2569
                                             10 BANK0     26    18      8
                          __Umul8_16
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) __Umul8_16                                            9     7      2     799
                                              3 COMMON     4     2      2
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     4     2      2     580
                                              0 BANK0      4     2      2
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       4     4      0      90
                                              4 COMMON     4     4      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       7     6      1     614
                                              7 COMMON     1     0      1
                                              0 BANK0      6     6      0
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0      66
                                              0 BANK0      2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0      44
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0      44
                                              4 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      22
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _isr                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
       _Lcd_Port
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Write_Char
     _Lcd_Port
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   ___flmul
     __Umul8_16
     ___xxtofl (ARG)
   ___fltol
     ___flmul (ARG)
       __Umul8_16
       ___xxtofl (ARG)
     ___xxtofl (ARG)
   ___xxtofl
   _division
     ___awdiv
     ___awmod
   _printf
     __doprnt
       Absolute function(Fake) *
       ___lwdiv *
       ___lwmod *
         ___lwdiv (ARG)
       _putch *
   _setup
     _config_ADC
   _sprintf
     __doprnt
       Absolute function(Fake) *
       ___lwdiv *
       ___lwmod *
         ___lwdiv (ARG)
       _putch *

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      8       B       1       78.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      71       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     34      35       5       66.2%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50     29      31       7       61.3%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      71      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Wed Jul 28 11:36:48 2021

                        pc 0002               ___awdiv@sign 0021                         fsr 0004  
      __Umul8_16@word_mpld 0022                        l110 03AF                        l112 0608  
                      l131 07EE                        l125 0B2C                        l118 0634  
                      l128 0B34                        l152 0E5E                        l161 0B2B  
                      l137 0CB2                        l164 0B4E                        l173 0D9E  
                      l167 07FB                        l176 0D46                        l185 0C02  
                      l179 0B86                        l460 0DF9                        l702 0BBE  
                      l447 0EC7                        l704 0BD0                        l480 0F43  
                      l490 0F43                        l740 0FC9                        l741 0FD5  
                      l733 0FAD                        l566 0CF8                        l487 0F2E  
                      l727 0F68                        l751 0B69                        l576 0C72  
                      l729 0FFF                        l683 038C                        l695 0380  
                      l689 02F8                        l796 0BA7                        l789 076D  
                      _isr 0C03                        fsr0 0004                        indf 0000  
             ___awmod@sign 0021               ___flmul@aexp 003C               ___flmul@bexp 003D  
             ___flmul@sign 0037               ___flmul@temp 0042               ___flmul@prod 003E  
              main@buffer1 00B4               ___fltol@exp1 004E                       l2100 0CA3  
                     l2110 0CAD                       l2102 0CA5                       l2200 0EFE  
                     l2112 0CAE                       l2104 0CA8                       l2202 0F02  
                     l2210 0F1C                       l2114 0CB1                       l2106 0CA9  
                     l2050 0C73                       l2300 0256                       l2220 0F38  
                     l3020 067B                       l2108 0CAA                       l2060 0C7D  
                     l2052 0C77                       l2126 07EF                       l2310 02C4  
                     l2302 027C                       l2230 003E                       l2222 002C  
                     l2070 0C82                       l2062 0C7E                       l2054 0C7A  
                     l2320 02DC                       l2312 02C8                       l2304 02A4  
                     l2240 005A                       l2232 0043                       l2224 0033  
                     l2216 0F23                       l2208 0F0A                       l2080 0C8B  
                     l2072 0C85                       l2064 0C7F                       l2056 0C7B  
                     l2330 02FD                       l2322 02DD                       l2314 02C9  
                     l2306 02AD                       l2250 006F                       l2242 005F  
                     l2234 0048                       l2226 0039                       l2218 0F33  
                     l3018 0E50                       l2090 0C92                       l2082 0C8E  
                     l2074 0C86                       l2066 0C80                       l2058 0C7C  
                     l2332 0302                       l2340 0333                       l2324 02E1  
                     l2316 02D2                       l2308 02BB                       l2260 008B  
                     l2252 0074                       l2244 0065                       l2236 0050  
                     l2228 003D                       l2092 0C98                       l2084 0C8F  
                     l2076 0C87                       l2068 0C81                       l2350 0366  
                     l2342 0340                       l2334 0310                       l2326 02F5  
                     l2318 02D8                       l2270 00B6                       l2262 0090  
                     l2254 007C                       l2246 0069                       l2238 0052  
                     l2094 0C9B                       l2086 0C90                       l2078 0C8A  
                     l2352 0374                       l2344 034B                       l2336 0314  
                     l2280 0153                       l2272 00D3                       l2256 007E  
                     l2248 006A                       l2192 0EDE                       l1800 0DFC  
                     l2096 0C9C                       l2088 0C91                       l2354 0378  
                     l2346 035A                       l2338 032D                       l2290 01B6  
                     l2282 015C                       l2274 00EF                       l2266 0099  
                     l2258 0086                       l2194 0EF3                       l2186 0EC8  
                     l2610 0E6D                       l2602 0E5F                       l1730 0B2C  
                     l1810 0E09                       l1802 0E00                       l2098 0C9F  
                     l2356 0379                       l2348 0364                       l2292 01CF  
                     l2284 016C                       l2276 011B                       l2268 00A9  
                     l2196 0EF4                       l2188 0ED5                       l2620 0E82  
                     l2612 0E71                       l2604 0E62                       l1732 0B32  
                     l2700 0669                       l1820 0E17                       l1812 0E0C  
                     l1804 0E04                       l2358 0384                       l2294 01EC  
                     l2286 0189                       l2278 0137                       l2198 0EFC  
                     l2630 0EA5                       l2622 0E85                       l2614 0E76  
                     l2606 0E66                       l2710 06A1                       l2702 0686  
                     l1830 0E20                       l1822 0E1A                       l1814 0E0D  
                     l1806 0E07                       l1736 0B27                       l2296 0219  
                     l2288 0199                       l2640 0EBE                       l2632 0EAB  
                     l2624 0E8C                       l2616 0E7A                       l2608 0E6B  
                     l2720 06BF                       l2704 0694                       l1840 0E2E  
                     l1832 0E22                       l1824 0E1B                       l1816 0E0F  
                     l1808 0E08                       l2800 0B93                       l2298 0229  
                     l2642 0EC3                       l2634 0EAC                       l2626 0E90  
                     l2618 0E7C                       l2650 0DA6                       l2810 07DC  
                     l1770 0C49                       l2730 06EC                       l2722 06C9  
                     l2706 0698                       l1850 0E39                       l1842 0E2F  
                     l1834 0E26                       l1826 0E1C                       l1818 0E13  
                     l2802 0BA1                       l2636 0EB3                       l2628 0E94  
                     l2660 0DBC                       l2652 0DAB                       l2812 07E5  
                     l2580 0CBD                       l1780 0C68                       l1772 0C4D  
                     l1764 0C37                       l2740 073E                       l2724 06CF  
                     l2732 06F2                       l2716 06A3                       l2708 069C  
                     l2820 0B5B                       l1860 0E45                       l1852 0E3D  
                     l1844 0E32                       l1836 0E2A                       l1828 0E1F  
                     l2900 04B8                       l1790 0B76                       l2830 0F60  
                     l2638 0EB9                       l2670 0DD8                       l2662 0DBF  
                     l2654 0DAD                       l2646 0D9F                       l2806 0771  
                     l2590 0CE0                       l2582 0CC0                       l1774 0C51  
                     l1766 0C3F                       l1782 0C6E                       l2742 0746  
                     l2734 06F9                       l2726 06D7                       l2814 0B52  
                     l1862 0E46                       l1854 0E40                       l1846 0E33  
                     l1838 0E2D                       l2910 04EE                       l2902 04C6  
                     l1880 0B4B                       l1872 0B36                       l2760 0D0A  
                     l1792 0B7C                       l2840 0F8B                       l2832 0F70  
                     l2824 0F47                       l2680 0DF5                       l2672 0DDE  
                     l2664 0DC6                       l2656 0DB1                       l2648 0DA2  
                     l2808 07D3                       l2592 0CE6                       l2584 0CC7  
                     l2576 0CB3                       l1776 0C5B                       l1768 0C42  
                     l2736 0729                       l2744 074C                       l2728 06E4  
                     l2816 0B53                       l1856 0E41                       l1848 0E35  
                     l2920 051A                       l2912 04F2                       l2904 04CC  
                     l1874 0B39                       l2762 0D1B                       l2770 0D60  
                     l1794 0B7F                       l1786 0B6B                       l1970 0BB8  
                     l2850 0FBF                       l2842 0F92                       l2826 0F4C  
                     l2674 0DE5                       l2666 0DCA                       l2658 0DB6  
                     l2594 0CE7                       l2586 0CCB                       l2578 0CB7  
                     l1778 0C61                       l2738 0731                       l2690 064A  
                     l2746 0757                       l2818 0B57                       l1858 0E42  
                     l1866 0E48                       l2930 0558                       l2922 0528  
                     l2914 0500                       l2906 04DA                       l1876 0B3F  
                     l2764 0D21                       l2756 0CF9                       l2780 0D8B  
                     l2772 0D65                       l1796 0B83                       l1788 0B73  
                     l1972 0BC7                       l1964 0BAB                       l2860 0FF2  
                     l2852 0FC3                       l2844 0F96                       l2836 0F79  
                     l2828 0F50                       l2668 0DCE                       l2676 0DEB  
                     l2596 0CEE                       l2588 0CCF                       l2748 076B  
                     l2692 0659                       l2684 063B                       l2940 0584  
                     l2932 055E                       l2924 052E                       l2916 0506  
                     l2908 04E0                       l1878 0B42                       l2758 0CFF  
                     l2782 0D90                       l2774 0D6B                       l2766 0D4A  
                     l2790 0BE8                       l1974 0BCC                       l1966 0BAD  
                     l2862 0FF6                       l2854 0FCD                       l2846 0FA4  
                     l2838 0F7E                       l2678 0DF0                       l2598 0CF4  
                     l2694 0661                       l2686 063C                       l1798 0DFB  
                     l2950 05BC                       l2942 0592                       l2934 056C  
                     l2926 0544                       l2918 0514                       l2870 0392  
                     l2784 0D96                       l2768 0D4F                       l2776 0D74  
                     l2792 0BF0                       l1968 0BB4                       l2864 0FF7  
                     l2856 0FD7                       l2848 0FB4                       l2688 0642  
                     l2696 0668                       l2960 05F4                       l2952 05C4  
                     l2944 0598                       l2936 0570                       l2928 054A  
                     l2880 044E                       l2872 0397                       l2778 0D7A  
                     l2786 0BD1                       l2858 0FED                       l2794 0B8A  
                     l2970 062A                       l2962 060E                       l2954 05CC  
                     l2946 05AC                       l2938 057E                       l2890 0492  
                     l2882 0465                       l2874 039C                       l2788 0BD6  
                     l2796 0B8E                       l2964 0614                       l2956 05DA  
                     l2948 05B4                       l2892 04A0                       l2884 0471  
                     l2876 03A4                       l2868 038D                       l2798 0B8F  
                     l2966 061A                       l2958 05EE                       l2894 04A6  
                     l2886 047C                       l2878 0437                       l2968 0624  
                     l2896 04AD                       l2888 0487                       l2898 04B0  
                     _ADIF 0066                       ?_isr 0070                       STR_1 08B3  
                     STR_2 08C4                       STR_3 08CC                       STR_4 0891  
                     STR_5 088F                       STR_6 08A2                       STR_7 088F  
                     STR_8 0843                       STR_9 081A                       u2000 0262  
                     u1200 0B32                       u1201 0B31                       u2011 026E  
                     u2100 02F5                       u2020 028A                       u2012 0275  
                     u1300 0C51                       u2101 02F4                       u2013 027C  
                     u2005 025D                       u1301 0C50                       u2110 02FC  
                     u1310 0C5B                       u2111 02FB                       u2031 0296  
                     u1311 0C5A                       u2120 0302                       u2032 029D  
                     u2121 0301                       u2033 02A4                       u2025 0285  
                     u2130 0314                       u1330 0C6E                       u2131 0313  
                     u1331 0C6D                       u1315 0C57                       u2140 0323  
                     u2060 02C8                       u2061 02C7                       u2045 02A6  
                     u1325 0C62                       u2150 0340                       u2151 033F  
                     u2055 02BD                       u3007 04C0                       u2160 035A  
                     u2080 02DC                       u1280 0C3F                       u2161 0359  
                     u2145 031E                       u2081 02DB                       u1281 0C3E  
                     u3017 04D4                       u1530 0BB8                       u2170 0378  
                     u2090 02E1                       u2410 0CCF                       u1531 0BB7  
                     u2171 0377                       u2155 033C                       u2091 02E0  
                     u2075 02CB                       u2411 0CCE                       u3107 058C  
                     u3027 04E8                       u2500 0E94                       u2165 0356  
                     u2501 0E93                       u2405 0CC1                       u3117 05A0  
                     u3037 04FA                       u1550 0BCC                       u1710 0ED5  
                     u2430 0CE0                       u3207 0D05                       u1551 0BCB  
                     u1711 0ED4                       u2431 0CDF                       u1295 0C43  
                     u3127 05D4                       u3047 050E                       u1800 0F38  
                     u1720 0EEC                       u2520 0EA5                       u2600 0DCE  
                     u3217 0D16                       u1545 0BBF                       u1801 0F37  
                     u2521 0EA4                       u2601 0DCD                       u2425 0CD0  
                     u3137 05E8                       u3057 0522                       u1810 003D  
                     u1730 0F02                       u2610 0DD8                       u2450 0CF4  
                     u3227 0D25                       u1811 003C                       u1731 0F01  
                     u2515 0E95                       u2611 0DD7                       u2451 0CF3  
                     u2435 0CDC                       u3147 05FC                       u3067 053E  
                     u1820 0043                       u1740 0F09                       u2540 0EB9  
                     u2460 0E66                       u2700 06CF                       u3237 0B46  
                     u1901 00FD                       u1821 0042                       u1741 0F08  
                     u1725 0EE7                       u2541 0EB8                       u2525 0EA1  
                     u2461 0E65                       u2445 0CE8                       u2701 06CE  
                     u3157 0E02                       u3077 0552                       u1902 0104  
                     u1830 0048                       u2550 0EBE                       u2470 0E71  
                     u2630 0DEB                       u2390 0CBD                       u2710 06D7  
                     u1911 0129                       u1903 010B                       u1831 0047  
                     u2551 0EBD                       u2535 0EAD                       u2471 0E70  
                     u2631 0DEA                       u2615 0DD4                       u2391 0CBC  
                     u2711 06D6                       u3167 0E15                       u3087 0566  
                     u1912 0130                       u1840 0069                       u1760 0F1B  
                     u2800 0F4C                       u2480 0E82                       u2640 0DF0  
                     u2560 0DA6                       u2720 0731                       u1921 0145  
                     u1913 0137                       u1841 0068                       u1761 0F1A  
                     u2801 0F4B                       u2481 0E81                       u2641 0DEF  
                     u2625 0DDF                       u2561 0DA5                       u2721 0730  
                     u3177 0E28                       u3097 0578                       u1922 014C  
                     u1850 006F                       u1770 0F22                       u2810 0F50  
                     u2570 0DB1                       u2730 0757                       u2650 0642  
                     u1923 0153                       u1851 006E                       u1771 0F21  
                     u1755 0F0B                       u2811 0F4F                       u2571 0DB0  
                     u2731 0756                       u2651 0641                       u3187 0E3B  
                     u1860 0074                       u2900 0FCD                       u2820 0F70  
                     u2580 0DBC                       u2740 076B                       u2660 064A  
                     u3197 0B81                       u1941 017B                       u1861 0073  
                     u2901 0FCC                       u2821 0F6F                       u2581 0DBB  
                     u2741 076A                       u2661 0649                       u2750 0D4F  
                     u1942 0182                       u1870 008B                       u1790 0F33  
                     u2910 0FE2                       u2670 0698                       u2751 0D4E  
                     u1951 01A8                       u1943 0189                       u1935 0155  
                     u1871 008A                       u1791 0F32                       u2495 0E86  
                     u2671 0697                       u1952 01AF                       u1880 0090  
                     u2920 0FF2                       u2840 0F91                       u2680 06BE  
                     u1953 01B6                       u1881 008F                       u1785 0F25  
                     u2921 0FF1                       u2841 0F90                       u2681 06BD  
                     u2770 0D7A                       u2930 0FF6                       u2690 06C9  
                     u2771 0D79                       u1971 01DE                       u1891 00E1  
                     u2931 0FF5                       u2915 0FDD                       u2835 0F83  
                     u2595 0DC0                       u2691 06C8                       u1972 01E5  
                     u1892 00E8                       u2860 0FB3                       u2940 04A6  
                     u2765 0D57                       u1981 020B                       u1973 01EC  
                     u1965 01B8                       u1893 00EF                       u2861 0FB2  
                     u2685 06BA                       u2941 04A5                       u2790 0C02  
                     u1982 0212                       u2950 060E                       u2791 0C01  
                     u1991 0238                       u1983 0219                       u2855 0FA5  
                     u2951 060D                       u1992 023F                       u2880 0FC3  
                     u2960 061A                       u2785 0D82                       u1993 0246  
                     u2881 0FC2                       u2961 0619                       u2890 0FC9  
                     u2970 062A                       u2891 0FC8                       u2875 0FB8  
                     u2971 0629                       _RCIF 0065                       u2987 049A  
                     u2997 04AA                       _TXIF 0064          ?_Lcd_Write_String 0020  
                     _dato 00CA                       _main 038D                       _tens 00CD  
                     btemp 007E                       start 000C         ??_Lcd_Write_String 0078  
          __end_of_Lcd_Cmd 0B4F                      ??_isr 0070              ___fltol@sign1 004D  
                    ?_main 0070            __end_of___awdiv 0EC8             config_ADC@frec 0075  
                    STR_10 086B            __end_of___awmod 0DFA            __end_of___flmul 038D  
          __end_of___fltol 0F44                      _ANSEL 0188            ___awdiv@divisor 0073  
          __end_of___lwdiv 0CF9                      i1l105 0C30            __end_of___lwmod 0C73  
          ___awdiv@counter 0020                      _RCREG 001A                      _SPBRG 0099  
                    _PORTA 0005                      _PORTB 0006                      _PORTC 0007  
                    _PORTD 0008                      _PORTE 0009            __end_of__doprnt 076E  
  __size_of_Lcd_Set_Cursor 0058                      _TRISD 0088                      _TRISE 0089  
                    _TXREG 0019                      _dato1 00CB            __end_of_dpowers 081A  
                    _valor 0054                      _setup 0C73                      _putch 0B2C  
                    fpbase 0028                      _units 00CC                      pclath 000A  
                    status 0003                      wtemp0 007E            __end_of_sprintf 0BA8  
         __end_of_Lcd_Init 0D47           __end_of_Lcd_Port 0B2C            __initialization 000F  
             __end_of_main 0638                     ??_main 004F         __size_of_Lcd_Clear 000D  
                   _ADRESH 001E           ___awdiv@dividend 0075                     ?_setup 0070  
                   ?_putch 0073                     i1l2410 0C12                     i1l2412 0C16  
                   i1l2420 0C2E                     i1l2414 0C1D                     i1l2406 0C03  
                   i1l2416 0C26                     i1l2408 0C09                     i1l2418 0C28  
                   u232_20 0C09                     u232_21 0C08                     u233_20 0C12  
                   u233_21 0C11                     u234_20 0C26                     u234_21 0C25  
                ??_Lcd_Cmd 0074                     _SPBRGH 009A    __size_of_Lcd_Write_Char 001D  
         __end_of__fptable 002C           __end_of___xxtofl 1000           __end_of_division 07EF  
                ??___awdiv 0077                  ??___awmod 0077                  ??___flmul 0032  
                ??___fltol 0048                  ??___lwdiv 0077                  ??___lwmod 0027  
                ??__doprnt 002B           ___awdiv@quotient 0022            ___awmod@divisor 0073  
             __doprnt@flag 002E            ___awmod@counter 0020                     _printf 0B4F  
                   _volt01 00D0                     _volt02 00CF               __doprnt@prec 002F  
                   fptable 0023                     fptotal 0002         __size_of__Umul8_16 0029  
                   saved_w 007E                  ??_sprintf 0037            Lcd_Set_Cursor@a 0022  
          Lcd_Set_Cursor@b 0077            Lcd_Set_Cursor@y 0024            Lcd_Set_Cursor@z 0023  
             ___xxtofl@arg 0026               ___xxtofl@exp 0025               ___xxtofl@val 0073  
  __end_of__initialization 001F          __end_of_Lcd_Clear 07FC                 ___fltol@f1 0044  
           __pcstackCOMMON 0070              __end_of_setup 0CB3              __end_of_putch 0B35  
            division@valor 0027             _Lcd_Set_Cursor 0D47                  ?_Lcd_Init 0070  
                ?_Lcd_Port 0070                 __doprnt@ap 002A                 __doprnt@pb 0033  
                  ??_setup 0076                    ??_putch 0074                 __pbssBANK0 0054  
               __pbssBANK1 00C9          __end_of__Umul8_16 0BD1                 __pmaintext 038D  
               __pintentry 0004  __size_of_Lcd_Write_String 0032     __end_of_Lcd_Set_Cursor 0D9F  
                  ?_printf 0070                 _config_ADC 0DFA                  ?___xxtofl 0073  
               ??_Lcd_Init 0020                 ??_Lcd_Port 0073                 __stringtab 0800  
                ?_division 0070             _Lcd_Write_Char 0B6A                    _Lcd_Cmd 0B35  
                  ___awdiv 0E5F                    ___awmod 0D9F                    ___flmul 002C  
                  ___fltol 0EC8                    ___lwdiv 0CB3                    ___lwmod 0C37  
                  __doprnt 0638            ?_Lcd_Set_Cursor 0077                    __ptext1 0B87  
                  __ptext2 0C73                    __ptext3 0DFA                    __ptext4 0B4F  
                  __ptext5 0638                    __ptext6 0B2C                    __ptext7 0C37  
                  __ptext8 0CB3                    __ptext9 076E            __size_of_printf 001B  
                  _dpowers 0810               __size_of_isr 0034                 ??___xxtofl 0020  
         ___awmod@dividend 0075                    _residuo 0078                    _sprintf 0B87  
   __end_of_Lcd_Write_Char 0B87       end_of_initialization 001F                 ??_division 0024  
                _RCSTAbits 0018                    printf@f 0037                  Lcd_Port@a 0073  
                _PORTEbits 0009                ?_config_ADC 0070              ___xxtofl@sign 0024  
                _TRISAbits 0085            ?_Lcd_Write_Char 0070          Lcd_Write_String@a 0020  
        Lcd_Write_String@i 0022                ___flmul@grs 0038                 main@buffer 00A0  
               main@answer 00C8                  _TXSTAbits 0098                  _Lcd_Clear 07EF  
         _Lcd_Write_String 0BD1                _BAUDCTLbits 0187             __end_of_printf 0B6A  
      start_initialization 000F                __end_of_isr 0C37          __size_of_Lcd_Init 004E  
        __size_of_Lcd_Port 0006        __size_of_config_ADC 0065                 ?_Lcd_Clear 0070  
                __Umul8_16 0BA8                __doprnt@val 0030            Lcd_Write_Char@a 0075  
          Lcd_Write_Char@y 0077                   ??_printf 0034                  ___flmul@a 002E  
                ___flmul@b 002A                __pbssCOMMON 0078                  ___latbits 0002  
            __pcstackBANK0 0020              __pcstackBANK1 00A0          __size_of__fptable 0009  
        __size_of___xxtofl 00BC                   ?_Lcd_Cmd 0070                  __doprnt@c 0032  
                __doprnt@f 0029          __size_of_division 0081           ___lwdiv@dividend 0075  
         ??_Lcd_Set_Cursor 0020                  __pfunctab 0023                   ?___awdiv 0073  
                 ?___awmod 0073                   ?___flmul 002A                   ?___fltol 0044  
               ?__Umul8_16 0073                   ?___lwdiv 0073                   ?___lwmod 0023  
                 ?__doprnt 0029                  __pstrings 0800           ___lwdiv@quotient 0021  
                 ?_sprintf 0034             __size_of_setup 0040             __size_of_putch 0009  
        interrupt_function 0004                   _PIE1bits 008C                   Lcd_Cmd@a 0076  
                 _PIR1bits 000C                ??_Lcd_Clear 0077                 _ADCON0bits 001F  
              __stringbase 080F                 _ADCON1bits 009F               ??_config_ADC 0073  
         ??_Lcd_Write_Char 0074                  _voltaje_b 007A                  _voltaje_c 0079  
                 _Lcd_Init 0CF9                   _Lcd_Port 0B26   __end_of_Lcd_Write_String 0C03  
         __size_of_Lcd_Cmd 001A         __end_of_config_ADC 0E5F                ??__Umul8_16 0075  
         __size_of___awdiv 0069           __size_of___awmod 005B           __size_of___flmul 0361  
         __size_of___fltol 007C           __size_of___lwdiv 0046           __size_of___lwmod 003C  
         __size_of__doprnt 0136         __end_of__stringtab 0810                   __fptable 0023  
                 ___xxtofl 0F44            ___lwdiv@divisor 0073            ___lwdiv@counter 0020  
                 __ptext10 0D9F                   __ptext11 0E5F                   __ptext20 07EF  
                 __ptext12 0F44                   __ptext21 0B35                   __ptext13 0EC8  
                 __ptext22 0B26                   __ptext14 002C                   __ptext23 0C03  
                 __ptext15 0BA8                   __ptext16 0BD1                   __ptext17 0B6A  
                 __ptext18 0D47                   __ptext19 0CF9                   _division 076E  
                 _contador 00C9           __size_of_sprintf 0021              __size_of_main 02AB  
                 _hundreds 00CE                   fp__putch 0029                  putch@data 0073  
               _INTCONbits 000B         Lcd_Write_Char@temp 0076                   intlevel1 0023  
                sprintf@ap 003A                  sprintf@pb 003B                  sprintf@wh 0039  
         ___lwmod@dividend 0025                  stringcode 080A                 _OSCCONbits 008F  
                 printf@ap 0036                   printf@pb 0038         Lcd_Set_Cursor@temp 0025  
   __Umul8_16@multiplicand 0073                   sprintf@f 0034            ___lwmod@divisor 0023  
          ___lwmod@counter 0028                   stringdir 080A                   stringtab 0800  
     __Umul8_16@multiplier 0024          __Umul8_16@product 0020  
